---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: raspbernetes-com-le
  namespace: istio-ingress
spec:
  # The secret name where cert-manager should store the signed certificate
  secretName: ingress-cert
  duration: 2160h0m0s # 90d
  renewBefore: 360h0m0s # 15d
  # cert-manager regenerates a new private key on each issuance
  # https://cert-manager.io/docs/usage/certificate/#rotation-private-key
  privateKey:
    rotationPolicy: Always
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  usages:
    - server auth
    - client auth
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: ${CLUSTER_DOMAIN}
  dnsNames:
    - ${CLUSTER_DOMAIN}
    - '*.${CLUSTER_DOMAIN}'
    - '*.${CLUSTER_SUB_DOMAIN}.${CLUSTER_DOMAIN}'
---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: raspbernetes-com-cf
#   namespace: istio-ingress
# spec:
#   # The secret name where cert-manager should store the signed certificate
#   secretName: raspbernetes-com-tls
#   dnsNames:
#     - ${CLUSTER_DOMAIN}
#     - '*.${CLUSTER_SUB_DOMAIN}.${CLUSTER_DOMAIN}'
#   # Duation of the certificate
#   duration: 168h
#   # Renew a day before the certificate expiration
#   renewBefore: 24h
#   # Reference the Origin CA Issuer you created above, which must be in the same namespace.
#   issuerRef:
#     group: cert-manager.k8s.cloudflare.com
#     kind: OriginIssuer
#     name: prod-issuer
