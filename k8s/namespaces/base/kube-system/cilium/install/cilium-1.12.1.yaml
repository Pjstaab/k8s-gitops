# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.observability.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRFJRSHlGbWZPN252TjJPVUJyUkI0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBM01ERTBOalUwV2hjTk1qVXhNakEyTURFMApOalUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VFYVdFZUN1REwyN2FubnpiWjB0OXQ2dzhjeXJYelpVWTRENTNHcFZybm9NZExsTUkKOWZEQTc5NFB5RUI4eGN1TDdRZUZldjN3dUUzRnZVNGRKRUJzcFZaNDh0VlNwRXFGNk94UkZDTzh3REhiV2VjRgpmM0Q1b3YybkJIU1RqcnhDS1RlNEJsbmpMSVVUdHlTVHlUS2pjd3BVKzJndzArSkV1akhmTDVUMEVwWUtzSnpRCkZueU5aMTMrclpoL01ZSXB1OFJWY3lZaEwva2F5ejJrWEVicnZXMW5DZlVvK2MrcHFEbUdUQWdsNFZtU3o3dE4KU3VFVWFQcjNTOVVwVmVGVjNoMDFBRkxDSFhLR3JHVWtMeFB2RWQ5ekFnS2JPQUh6eXJZTmg2YnI1ajViVUo3WApIOGFqTXA0aElUYXMyT1R6MGhuVUZ4SlZOUGNyWEtWY3FQWTFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVXK2JaUU01eDB6a1YvRzZMZVQwVEJQdUJGd1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKb2NkVFZiR0NleVRDQTRSNGRKV25ibFZQVzVJSnl6R2NGMU41ejJja1BTRHFma3gzNy9adkpiCklRdlhtNjZIbHdGZTZTbnoyMC9hR2FXbEY1cXpuWXdWTUVrcTJQYk55enUyUkVZQllubXk4eFNFTW5KOXpaRmYKOWhKcUsxSklpTklYOTZsamRUSzB3SVh4QkczRHdsaUwzajJmQllHVzhvdkdHd0xKSEZ1bXpsbXpQZURRbnBRagpEV0I0MzJIWktmVHdkOHRaWmQ3Ri9BN0E4Y0p3dkhBbG1zWEFrbEVXMWY0QWZMenkvcjdnMks5RVRoR2prWFpsCk1zdEpZN09DNUJtSmJDTFQ5K0ZUYzdseDgvaGphU1d3SFNYb2ZQVG9FeGdsOTJNMWw1WVNWcktEejhjNm5ya2kKUENmdXBSNFAzTjNOVDRmTkN0SkVCc2tIMlpKTHVLbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbmhHbGhIZ3JneTl1MnA1ODIyZExmYmVzUEhNcTE4MlZHT0ErZHhxVmE1NkRIUzVUCkNQWHd3Ty9lRDhoQWZNWExpKzBIaFhyOThMaE54YjFPSFNSQWJLVldlUExWVXFSS2hlanNVUlFqdk1BeDIxbm4KQlg5dythTDlwd1IwazQ2OFFpazN1QVpaNHl5RkU3Y2trOGt5bzNNS1ZQdG9NTlBpUkxveDN5K1U5QktXQ3JDYwowQlo4aldkZC9xMllmekdDS2J2RVZYTW1JUy81R3NzOXBGeEc2NzF0WnduMUtQblBxYWc1aGt3SUplRlprcys3ClRVcmhGR2o2OTB2VktWWGhWZDRkTlFCU3doMXlocXhsSkM4VDd4SGZjd0lDbXpnQjg4cTJEWWVtNitZK1cxQ2UKMXgvR296S2VJU0Uyck5qazg5SVoxQmNTVlRUM0sxeWxYS2oyTlFJREFRQUJBb0lCQVFDUGJsdk8xR3hIWWFjcApZVjdTaCt5TWF6b3lzQjVVTEF2NndxQnIyd2R5M0NjRk41L0pKY0lNa0p2am5rWkY4Z1U5Tnh2NEZ4Nk9hKzdHClczeWlITjhJdHc2OE9UMHcvRHRUUDRRUUhrSS9aL2JWbjhKdHpySnBFMmt2UUcrMzVYRVdaK2hUYUEvd2Y5bFIKaG9IK1NEZFc4WENTcEg1cXNCbEZXOThkTWtQckkvVC9mL1dVa3RLVVBBRFBnOGRaa0g1UWxGUGdIcHd1a3VucgpBMUttclhGNlFsbWRYN3lMVUUvQnoxN2pKc2pZbjE3Yy9OYVBtblFjMGtQQ1YrY0VUNk51Y21CVjc2OWpSaFBICjE3eE5sbDNtNzFnVDlxaWNpMGZGUjNLM0F5LzltWWpBVENFcTYrdkMzVGl1a25jUE81VlFWMGZjTmhJRnhVdjIKYTZOVlBrQ0JBb0dCQU5GQmhzOFVhd1V0VmJHOGVmZktkU0ZRNU9Wb3NuanBLajFsMml3cUg4bFVXYXhkYTZOdQpBbkVaeHNiRlU5UnQ4VFBMQ1AySjhTSkQ3MTJJS2docjdTa3VINjBFRGdYMHc1L1N6dXRON2dNL2FJQWVjMnNECnQ3eE15NXdadjNNZS9Zayt6MEZOWXc1T1N3UEZrbFBTbUJUTnY2ZVJpNTRkeGtlOGRiR1IrNk9OQW9HQkFNRmcKOHB4cUltdlRQUFV6cW45dXRKaCt6aU45aGE2T2piSHZaV0MyV1Q4STVudmVYL1d5Y0dRVWp6a080VCtuY09ZYQpDTkJYUXFmTGt4UnpuRXJXRXF6bTdDa3RZY29oQjlRZm9Ebmc2eTFpbmV6L01GMk1mNVQ2dk02U2xuNlFQUnRJCmRtaFdzY0hLVWJYa2E5SU9id0tlY3k4SnJadUhhMDJHZGI2cWpsOUpBb0dCQUs3QXhWOXMwczlaQStiUjJ4NEgKMHZmR3dkR2dOT1BxL1I2WFQ3TndYbWxaYXlZYVFva1NsekZ5OEdFUmJDZk14UkdXN3VRbDdkM0sxRHpOT1NVZApWTXIrUE8vVm9neHhVMm5HdUkwajRMQ1BwS3JTUTF0TW1JWEZzSWlsckEvdEFwazZmZ1V3SnBoTTVESzdMYStaCkFPN213TGFsUXU4Q09KT3lIS3YxbVN3RkFvR0FIRXFHdEFPRERhdFYyN20zVS9WcVRuVWV5MnB0eUYvcXN3R0gKSDJNT0kzNjEyYUZyQUpNZWhrWEx2bGxDOHdFWUwxSFh3RU5ENlRDTFVBNnA2dmp1dW9UK1AvZjN1bzZpaXBJbAo2dEhSRms2N05CVVJpbDRudkRBQ3QyWVN4bWxyeHpZT3ZLMFNUSHZCQUk5dWhzaTl6UEJKZ2JRMHhmQkY3bzJoClpFZW5sS0VDZ1lBTVhLTThqcmJSeWJ3ZDVkb1NhMEJmQU4xN1EyUk5zUjJqRURhaUd0QWdpODZNVDR5M1BzVkgKWTMxZ0FlMzlMTDRNdzgrV1hYV29FeWhYNXRhTExkRUpMOW9za2tYSWdxR2JNb2tJOHYvWDNud2JWTEl0RWsxdwpxcFk5RUFRYWlWeXRBckdBR3FTdmpJc0czdDlTY0tkemhxbHA5b004cUhsbVZJeDZuTzVHTGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRFJRSHlGbWZPN252TjJPVUJyUkI0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBM01ERTBOalUwV2hjTk1qVXhNakEyTURFMApOalUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VFYVdFZUN1REwyN2FubnpiWjB0OXQ2dzhjeXJYelpVWTRENTNHcFZybm9NZExsTUkKOWZEQTc5NFB5RUI4eGN1TDdRZUZldjN3dUUzRnZVNGRKRUJzcFZaNDh0VlNwRXFGNk94UkZDTzh3REhiV2VjRgpmM0Q1b3YybkJIU1RqcnhDS1RlNEJsbmpMSVVUdHlTVHlUS2pjd3BVKzJndzArSkV1akhmTDVUMEVwWUtzSnpRCkZueU5aMTMrclpoL01ZSXB1OFJWY3lZaEwva2F5ejJrWEVicnZXMW5DZlVvK2MrcHFEbUdUQWdsNFZtU3o3dE4KU3VFVWFQcjNTOVVwVmVGVjNoMDFBRkxDSFhLR3JHVWtMeFB2RWQ5ekFnS2JPQUh6eXJZTmg2YnI1ajViVUo3WApIOGFqTXA0aElUYXMyT1R6MGhuVUZ4SlZOUGNyWEtWY3FQWTFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVXK2JaUU01eDB6a1YvRzZMZVQwVEJQdUJGd1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKb2NkVFZiR0NleVRDQTRSNGRKV25ibFZQVzVJSnl6R2NGMU41ejJja1BTRHFma3gzNy9adkpiCklRdlhtNjZIbHdGZTZTbnoyMC9hR2FXbEY1cXpuWXdWTUVrcTJQYk55enUyUkVZQllubXk4eFNFTW5KOXpaRmYKOWhKcUsxSklpTklYOTZsamRUSzB3SVh4QkczRHdsaUwzajJmQllHVzhvdkdHd0xKSEZ1bXpsbXpQZURRbnBRagpEV0I0MzJIWktmVHdkOHRaWmQ3Ri9BN0E4Y0p3dkhBbG1zWEFrbEVXMWY0QWZMenkvcjdnMks5RVRoR2prWFpsCk1zdEpZN09DNUJtSmJDTFQ5K0ZUYzdseDgvaGphU1d3SFNYb2ZQVG9FeGdsOTJNMWw1WVNWcktEejhjNm5ya2kKUENmdXBSNFAzTjNOVDRmTkN0SkVCc2tIMlpKTHVLbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbmhHbGhIZ3JneTl1MnA1ODIyZExmYmVzUEhNcTE4MlZHT0ErZHhxVmE1NkRIUzVUCkNQWHd3Ty9lRDhoQWZNWExpKzBIaFhyOThMaE54YjFPSFNSQWJLVldlUExWVXFSS2hlanNVUlFqdk1BeDIxbm4KQlg5dythTDlwd1IwazQ2OFFpazN1QVpaNHl5RkU3Y2trOGt5bzNNS1ZQdG9NTlBpUkxveDN5K1U5QktXQ3JDYwowQlo4aldkZC9xMllmekdDS2J2RVZYTW1JUy81R3NzOXBGeEc2NzF0WnduMUtQblBxYWc1aGt3SUplRlprcys3ClRVcmhGR2o2OTB2VktWWGhWZDRkTlFCU3doMXlocXhsSkM4VDd4SGZjd0lDbXpnQjg4cTJEWWVtNitZK1cxQ2UKMXgvR296S2VJU0Uyck5qazg5SVoxQmNTVlRUM0sxeWxYS2oyTlFJREFRQUJBb0lCQVFDUGJsdk8xR3hIWWFjcApZVjdTaCt5TWF6b3lzQjVVTEF2NndxQnIyd2R5M0NjRk41L0pKY0lNa0p2am5rWkY4Z1U5Tnh2NEZ4Nk9hKzdHClczeWlITjhJdHc2OE9UMHcvRHRUUDRRUUhrSS9aL2JWbjhKdHpySnBFMmt2UUcrMzVYRVdaK2hUYUEvd2Y5bFIKaG9IK1NEZFc4WENTcEg1cXNCbEZXOThkTWtQckkvVC9mL1dVa3RLVVBBRFBnOGRaa0g1UWxGUGdIcHd1a3VucgpBMUttclhGNlFsbWRYN3lMVUUvQnoxN2pKc2pZbjE3Yy9OYVBtblFjMGtQQ1YrY0VUNk51Y21CVjc2OWpSaFBICjE3eE5sbDNtNzFnVDlxaWNpMGZGUjNLM0F5LzltWWpBVENFcTYrdkMzVGl1a25jUE81VlFWMGZjTmhJRnhVdjIKYTZOVlBrQ0JBb0dCQU5GQmhzOFVhd1V0VmJHOGVmZktkU0ZRNU9Wb3NuanBLajFsMml3cUg4bFVXYXhkYTZOdQpBbkVaeHNiRlU5UnQ4VFBMQ1AySjhTSkQ3MTJJS2docjdTa3VINjBFRGdYMHc1L1N6dXRON2dNL2FJQWVjMnNECnQ3eE15NXdadjNNZS9Zayt6MEZOWXc1T1N3UEZrbFBTbUJUTnY2ZVJpNTRkeGtlOGRiR1IrNk9OQW9HQkFNRmcKOHB4cUltdlRQUFV6cW45dXRKaCt6aU45aGE2T2piSHZaV0MyV1Q4STVudmVYL1d5Y0dRVWp6a080VCtuY09ZYQpDTkJYUXFmTGt4UnpuRXJXRXF6bTdDa3RZY29oQjlRZm9Ebmc2eTFpbmV6L01GMk1mNVQ2dk02U2xuNlFQUnRJCmRtaFdzY0hLVWJYa2E5SU9id0tlY3k4SnJadUhhMDJHZGI2cWpsOUpBb0dCQUs3QXhWOXMwczlaQStiUjJ4NEgKMHZmR3dkR2dOT1BxL1I2WFQ3TndYbWxaYXlZYVFva1NsekZ5OEdFUmJDZk14UkdXN3VRbDdkM0sxRHpOT1NVZApWTXIrUE8vVm9neHhVMm5HdUkwajRMQ1BwS3JTUTF0TW1JWEZzSWlsckEvdEFwazZmZ1V3SnBoTTVESzdMYStaCkFPN213TGFsUXU4Q09KT3lIS3YxbVN3RkFvR0FIRXFHdEFPRERhdFYyN20zVS9WcVRuVWV5MnB0eUYvcXN3R0gKSDJNT0kzNjEyYUZyQUpNZWhrWEx2bGxDOHdFWUwxSFh3RU5ENlRDTFVBNnA2dmp1dW9UK1AvZjN1bzZpaXBJbAo2dEhSRms2N05CVVJpbDRudkRBQ3QyWVN4bWxyeHpZT3ZLMFNUSHZCQUk5dWhzaTl6UEJKZ2JRMHhmQkY3bzJoClpFZW5sS0VDZ1lBTVhLTThqcmJSeWJ3ZDVkb1NhMEJmQU4xN1EyUk5zUjJqRURhaUd0QWdpODZNVDR5M1BzVkgKWTMxZ0FlMzlMTDRNdzgrV1hYV29FeWhYNXRhTExkRUpMOW9za2tYSWdxR2JNb2tJOHYvWDNud2JWTEl0RWsxdwpxcFk5RUFRYWlWeXRBckdBR3FTdmpJc0czdDlTY0tkemhxbHA5b004cUhsbVZJeDZuTzVHTGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRFJRSHlGbWZPN252TjJPVUJyUkI0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBM01ERTBOalUwV2hjTk1qVXhNakEyTURFMApOalUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VFYVdFZUN1REwyN2FubnpiWjB0OXQ2dzhjeXJYelpVWTRENTNHcFZybm9NZExsTUkKOWZEQTc5NFB5RUI4eGN1TDdRZUZldjN3dUUzRnZVNGRKRUJzcFZaNDh0VlNwRXFGNk94UkZDTzh3REhiV2VjRgpmM0Q1b3YybkJIU1RqcnhDS1RlNEJsbmpMSVVUdHlTVHlUS2pjd3BVKzJndzArSkV1akhmTDVUMEVwWUtzSnpRCkZueU5aMTMrclpoL01ZSXB1OFJWY3lZaEwva2F5ejJrWEVicnZXMW5DZlVvK2MrcHFEbUdUQWdsNFZtU3o3dE4KU3VFVWFQcjNTOVVwVmVGVjNoMDFBRkxDSFhLR3JHVWtMeFB2RWQ5ekFnS2JPQUh6eXJZTmg2YnI1ajViVUo3WApIOGFqTXA0aElUYXMyT1R6MGhuVUZ4SlZOUGNyWEtWY3FQWTFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVXK2JaUU01eDB6a1YvRzZMZVQwVEJQdUJGd1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKb2NkVFZiR0NleVRDQTRSNGRKV25ibFZQVzVJSnl6R2NGMU41ejJja1BTRHFma3gzNy9adkpiCklRdlhtNjZIbHdGZTZTbnoyMC9hR2FXbEY1cXpuWXdWTUVrcTJQYk55enUyUkVZQllubXk4eFNFTW5KOXpaRmYKOWhKcUsxSklpTklYOTZsamRUSzB3SVh4QkczRHdsaUwzajJmQllHVzhvdkdHd0xKSEZ1bXpsbXpQZURRbnBRagpEV0I0MzJIWktmVHdkOHRaWmQ3Ri9BN0E4Y0p3dkhBbG1zWEFrbEVXMWY0QWZMenkvcjdnMks5RVRoR2prWFpsCk1zdEpZN09DNUJtSmJDTFQ5K0ZUYzdseDgvaGphU1d3SFNYb2ZQVG9FeGdsOTJNMWw1WVNWcktEejhjNm5ya2kKUENmdXBSNFAzTjNOVDRmTkN0SkVCc2tIMlpKTHVLbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBCdzlYejI3UWJCRkE0U1J0b2lzYlV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRJd056QXhORFkxTlZvWERUSTFNVEl3TmpBeApORFkxTlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVXdUExUTM0bGNTZ281R1FBekhGU0phK0FnN2kKVE4wZWYrZWsreVhKQmtibWw3R1E4NlpqT3ptWTZkWSs5OUdYUGM1T29PbTNJTnRObTYyOFRYTHVMSStScU0xOQptQVdCcklXT2ZFUDcvdWRCMm1YaE43VVVzWDlRRkttdHBpTnViSFNPeTVZZzJKTHl1b2V2djhIeEtLS2hHK2p4ClhIMHErcnYxUm5Fa3RsU2hGR3h5RUJNYkgyWlBRRk9PWTY3eVBnRkZPRUNyVjhVZkU0NWlMb3NaYXFuTE9tUTUKRXllUlBqTXlVVHV6UFRpcHBXNHE1NmJvOGlET3U1TDQ0aWFYZGRDR2NBVGtmL3V3Ny9LK3R0NFFHbTA5dG0vbwprVXpMaUtNVTdUeklZQ3AwMmluOEJ1L0tJTUwxYU9WekR2OHJNSUJQYnhwbEh6UGNDQXc4RnZBb1hRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmI1dGxBem5IVE9SWDhib3Q1UFJNRQorNEVYQkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQzRWTi90b081eDJ5M3M0QTNjM21YOElET0VtSFF6UitFQUVxNjF2QXRJL2lxYSsKYmlGa0ZNQnRyTzd4ZTFleThWOEQ0eGxlRzd6cnZyRlZDUzRlWGg3ZWtURGlub0hkdm1hQmJ5SUdQV3M0bXBpVgo5QXFMRzBUMUozYXZZaDE3azE3a1lucWFDK3RTeEk1aHZrdGNDK2duMWNBSTBUbHUzek01VXYydWdNT1ZxMGM3ClNBdjhvdDkvL2Qzc0JZQVUvS05XSElML2VYN2hrSG00c3BvMTd4V0JwUVh0eTVBWmE0RjY2T0dKN1ArZXlSdVcKQWR3YWh5OTJpVG5yTnlOQkdIL2d5TC9DNUFnR25LRTl3eTNPYmNIa3h6by9oZWY2VzVkTkFIL2tTRVN3Ni9BNgpmZGdTblhEVDB2ZXZVVmlvNmo5ZHQ3dVloS3dEYjBkb2FDSEhNbTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVd1QTFRMzRsY1NnbzVHUUF6SEZTSmErQWc3aVROMGVmK2VrK3lYSkJrYm1sN0dRCjg2WmpPem1ZNmRZKzk5R1hQYzVPb09tM0lOdE5tNjI4VFhMdUxJK1JxTTE5bUFXQnJJV09mRVA3L3VkQjJtWGgKTjdVVXNYOVFGS210cGlOdWJIU095NVlnMkpMeXVvZXZ2OEh4S0tLaEcranhYSDBxK3J2MVJuRWt0bFNoRkd4eQpFQk1iSDJaUFFGT09ZNjd5UGdGRk9FQ3JWOFVmRTQ1aUxvc1phcW5MT21RNUV5ZVJQak15VVR1elBUaXBwVzRxCjU2Ym84aURPdTVMNDRpYVhkZENHY0FUa2YvdXc3L0srdHQ0UUdtMDl0bS9va1V6TGlLTVU3VHpJWUNwMDJpbjgKQnUvS0lNTDFhT1Z6RHY4ck1JQlBieHBsSHpQY0NBdzhGdkFvWFFJREFRQUJBb0lCQVFDQnpNWDFYOEJqWjdCawprT1BWdUtPNHV2M3NodXJZai9wbjQ0dFUzUkNxdWp0MmViRlZQMmM3OElnaE9mLytqOVJtU2VRMU5TY2pjeUlUCkZ6NDRvWG9sNjZNMkhoUUx0ZDhmSEtld1NnOUFWRGQvWWM2VnBzZ0RzWEluNU5oUTg0QzduNlRPMUJ2T1FLQjIKLzhHQ1pZd2l2Q1k0V1l1TkNYcHE1K1UrR0xwd2YvKy9qTk1YeVdUblR1empSVE5DNDdiTEw1RnlWdi9BYXZMeQp6YW1FLzVRYzBMZHlzYWhqRzB4WnZ0V1JQTElvVDJyZThYYWthVVl3bFYydUYwOWsxRFlhVS81c2I5NG5IbjZkCmRLMXo0Yzc2MTJhK3Y3NWZqTUF1dVp1SkxjRThvVFJSeEhtYVg2dzUyQVRrMmNDV21VdkpBVWNSdkRIclV4dTcKa3ExL2J1L3BBb0dCQU80Sms1a1ZuYnowd1Yydkx2eWVkZWJ5ZWFkanBmY1J1UEpPT1lFVVR2anhTR0crcWIzOAo4ODJEek5pLy9LYXpUa25NajRjSlFzZmNTUnovT0c5eFJVYldRMk55eWxGVllScERBV3F4dVBocjVjUko3ZmhPCmxLMThrc3g2N3ZSUVQ3cWRlWUV6dUl2aFZCeTRRcE9Zdm0vZjNWVVVzc3lWblJiNE9FSWZOT3JMQW9HQkFNZHAKZFdoNGZHckkzMG1Fb2NneWg2Zzd5c1lwMGVEK3dOdis4b2tJOC9pV0F6VnZxMkFRWTd2QkNJMjZuWFIvL3lMNgpjc2ZjU3lONWIrcG8wTGFkc0p0N1UwZGtDMmpHYllQQ2M3ZUt5bGh3bHNFMFVHZHVjQjFFMHgvaTlSVGEzVFg4Ck9YNjU4VDU4SHJEamNib3NucDV4T3FvcG83SE9jNmVIVVBPZzBJeDNBb0dBT0pXb00zelMrV2NKVEZibmlYKzEKc1VlMHFaamppLzczZ3dvYlcxYlRpeFA0Uzl3Q0I3ckl6ZkxsMENTYlQ1bFNJL0x2cjM4QkUvZUduZEVCdm1Ragp2cm9TWE9LZHU0WGJSbDNsU1ZLa0VORzlWZExwTWR5a05UVm14QnI1RUxUQ3J5N2VBbHVrSkFSVmRWcEw0VUF2CkRQTWZieWt6YzdTaEdpTzVZK1o5TXM4Q2dZRUFncTMxcHhUdVUveDNkM0pYb3g2YUVBRy9ETVh6S0lOS1YrRm4KaDY0NlU3bmJPSFdKMVZab1JXNW04SnBPL1QyME1YUDNMRXFOWXgzOTNadjZ5dkhqL3NCKy90WHROQ2gxTkZlRwpCYzRLZEpLeitNRVR2L1I3dkhLUitOOSt4TC81SDV1L0FmRlF5eVlENXQvbWM1OHlBNXNvV3NNVzV6cm9SKzFCCmU2YnpoRmtDZ1lBcmRkVXFRU0diSG5zRjVWcGlzWVA3eHBkNG1oK1JBUEg4a0JGcS9zQUt4THJ1V0RWcVhpcngKMGhyam44RHFIKzhXY0JJbUtJeXhLSlkxd1llcm8xOFYwNnd6bnlTTUhlVzhXeTA2TkhhUFNoelNOSlBMQVNVSQpJa0EvRm5ZY0dFSFlsOEFxeXo5UXM2eXFNRC91TUtUUjZCZEZmREd0RUNwaW9KWHB6YmV6Z0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRFJRSHlGbWZPN252TjJPVUJyUkI0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBM01ERTBOalUwV2hjTk1qVXhNakEyTURFMApOalUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VFYVdFZUN1REwyN2FubnpiWjB0OXQ2dzhjeXJYelpVWTRENTNHcFZybm9NZExsTUkKOWZEQTc5NFB5RUI4eGN1TDdRZUZldjN3dUUzRnZVNGRKRUJzcFZaNDh0VlNwRXFGNk94UkZDTzh3REhiV2VjRgpmM0Q1b3YybkJIU1RqcnhDS1RlNEJsbmpMSVVUdHlTVHlUS2pjd3BVKzJndzArSkV1akhmTDVUMEVwWUtzSnpRCkZueU5aMTMrclpoL01ZSXB1OFJWY3lZaEwva2F5ejJrWEVicnZXMW5DZlVvK2MrcHFEbUdUQWdsNFZtU3o3dE4KU3VFVWFQcjNTOVVwVmVGVjNoMDFBRkxDSFhLR3JHVWtMeFB2RWQ5ekFnS2JPQUh6eXJZTmg2YnI1ajViVUo3WApIOGFqTXA0aElUYXMyT1R6MGhuVUZ4SlZOUGNyWEtWY3FQWTFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVXK2JaUU01eDB6a1YvRzZMZVQwVEJQdUJGd1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKb2NkVFZiR0NleVRDQTRSNGRKV25ibFZQVzVJSnl6R2NGMU41ejJja1BTRHFma3gzNy9adkpiCklRdlhtNjZIbHdGZTZTbnoyMC9hR2FXbEY1cXpuWXdWTUVrcTJQYk55enUyUkVZQllubXk4eFNFTW5KOXpaRmYKOWhKcUsxSklpTklYOTZsamRUSzB3SVh4QkczRHdsaUwzajJmQllHVzhvdkdHd0xKSEZ1bXpsbXpQZURRbnBRagpEV0I0MzJIWktmVHdkOHRaWmQ3Ri9BN0E4Y0p3dkhBbG1zWEFrbEVXMWY0QWZMenkvcjdnMks5RVRoR2prWFpsCk1zdEpZN09DNUJtSmJDTFQ5K0ZUYzdseDgvaGphU1d3SFNYb2ZQVG9FeGdsOTJNMWw1WVNWcktEejhjNm5ya2kKUENmdXBSNFAzTjNOVDRmTkN0SkVCc2tIMlpKTHVLbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRYkhXMmE1OGJnbGhUUTduOFVxSkJZVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TWpBM01ERTBOalUxV2hjTk1qVXhNakEyTURFMApOalUxV2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1UzVpcFBFZ3BHNHoKanJWSHA3Q0l4aE1rMFBQQ2tJMmRudklvQ1JuTlBER1JXNkwxTmM1U1doQVl4NEdKckU4SnBXWUFWK0VEZ1B5RApIZEZwZ2JqTlRtNnBtSkwwMHJhZGdsNzhIckxRQUVaWTZFTWp6YUttVzEyRERTZExabEpaT2JhczRHWWhYQ055ClhGUktZZkdIS2tpSFFSNTgwRFdqVHdkOUUxZE8vaUUzemtxZm5vOFJCbVo4cUpVMXh3RlJaM0taWitaY3NmMm0KOStNeVFLeFJMdDVtbGExUkZQVEx2MTlTQU9wcUJDV3M3K3NvQUdYL1ZNaWNiRUlmZnUxSWpKbmljenZLWXBjWQorUGlRYURtcTkxZXNUUUMyM1VDNWgrdklBU21QMGlCMXlVWklWVEE1YjVGeWZDbElteVIxbGMvVzJCY2hyYTBFCnZYMGJPdHZKb3dJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJiNXRsQQp6bkhUT1JYOGJvdDVQUk1FKzRFWEJEQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2JHNW81Z1kxbG45bU8KT1BGWXRFdHRzTzA3cHBsTWdqTmlhbld5K29tNTNUQ0RPUy9GVmtmeHNSV2NkODlCSlhka1E1ejBaRVpVK01QMQpxMWowMWpHU3NhTjZWQkh3dFp2QmNVVkl5UjVIWFd5SDNPZ1lvc1I5OXB3VXJxWTdCZUhUQWtLK3hBQ1JmSjlUCnYyZXd3WksyalhqYWRXaTFyTEtCN3RqcGtmVlN5ZDQ5dUp2UjMyTlo5NEU2amJoazlzVVpyb3ZmWThOSGRLTUkKbkhUOUtBaVc2TGZOQjJTdk1wRlNmdnlScUxxc3dGYjdadW9nbVZNK1cvTXY2UVNFSHRBYlMvS3JqWkpmcHc1Rwp3Um1md0xpeENPNzhpczNNeVRaZytvWmZIMXN2cFNGcUk5VjBvaTV1WWNWb0MrazBtZnRYOWwvOGNucmNUcTlCCnNlRnVieTJDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVM1aXBQRWdwRzR6anJWSHA3Q0l4aE1rMFBQQ2tJMmRudklvQ1JuTlBER1JXNkwxCk5jNVNXaEFZeDRHSnJFOEpwV1lBVitFRGdQeURIZEZwZ2JqTlRtNnBtSkwwMHJhZGdsNzhIckxRQUVaWTZFTWoKemFLbVcxMkREU2RMWmxKWk9iYXM0R1loWENOeVhGUktZZkdIS2tpSFFSNTgwRFdqVHdkOUUxZE8vaUUzemtxZgpubzhSQm1aOHFKVTF4d0ZSWjNLWlorWmNzZjJtOStNeVFLeFJMdDVtbGExUkZQVEx2MTlTQU9wcUJDV3M3K3NvCkFHWC9WTWljYkVJZmZ1MUlqSm5pY3p2S1lwY1krUGlRYURtcTkxZXNUUUMyM1VDNWgrdklBU21QMGlCMXlVWkkKVlRBNWI1RnlmQ2xJbXlSMWxjL1cyQmNocmEwRXZYMGJPdHZKb3dJREFRQUJBb0lCQUNoS1NsWWV6SDVhSjhlTgo4NWd0bGFTYTk3Q3F5Sk5RN0pGdm1IeGFhOGdEOU45ZU5rSE5zU2M5UjFiby9UNUxPQXNQaFZXWmRIeTA5QVloCjBQWFRjbi8xSGRzL1poc09kbml1RitiSit1MkVZTVd3RGZNb3gwOHJxbDdMUk9GdlcxQnVTWEROWjhhM1E2T0oKQjJJRi9lV2FRQ3RQNmRJWFNYL2hYam8rRGNiR3JoY015OGJUNXhyLzNEYnVLQ2tDTjBwWlFrSGk0M0N0c1hRLwpiUUg0TG9WbEZiS1MwK0NYemFLT3pzdlZKeGFNU2w4RkYxd0RtbVFMejIzTnNIVlplbkFySEdjRTVjTE5QZVNjCnFJblZXR2hSTnh3S3B0MzJ2S3hSZEtZdUR2ZGJkZnlvMGU5RlhCaHlFWDdpZjJveTM3UCtkS2wrekxrS0FPLzgKK3IxRGxkRUNnWUVBODhLSXVQTUYreFYvTVN0RWRoMXdRTUJFUTU3czcwVXN3QlhTQ0Jka1pFZE03VHY0eG4yYgpQbTR2QmVjZkRHSlhSalhkdjlvMHhuV0FZZTdFMS9MVjI5d2Z0bWlXMjQvMFhsMGJscFZ0MXk1YnBkUnZrWHhYCjZYK3hqZmFJbVBYUUFGbHkzUkEyZHh1WUUya1NUWjdiU051enB3eVJhY0pEZ1hjdkdJK1FRRnNDZ1lFQXduclcKbGpEaDV6cERMV3ZKTzhXL1BIeE1TZXBHak5WcFFPZEIvbXRVS1RORWdXRzlMOWluRnVPT1lyWDBtMFdremVaLwpRdmNua3VYUVNrS25SS2Z3U2lLVWpiVHBHMGYvaEx1WVgyREIxeno5UWFRdU5Kd3VhRDNWb2lrc1RLS2p4bXhZCnFPY0U4QVg3R0pKYzNraCtXdDY3aCtUaDUvZGJMNjdVK09wOFhsa0NnWUVBb25FdlgrRkVTUkVJVkNIN1c2TSsKblVnRHRmU0EvT3JpYVplaEFoZGtwWmNHWXNvbWZWQlRWb1ZpL05JSzFOdnNRVFBBZFF2YlE2NG1RaDAyUEpydApmYmp4d1VOdDFSL1h2OUxZZ2I5UEZha2xGaHU5eGZ4Uk1hQVJHUVFELzd0QVJCdFgrbzNGWGhhYmY4UHptSnFXCms3VWx3ZHNVUktCYkVEbjJ2cTFkZWlVQ2dZRUFzamlUMGNzMkdncEFhYTF2R2tHYmdMaC95UFRTZGxsVVBWQXcKSUJFSGJVSTRNMEQ0ZUpKWWZSZEg4cG5BY1ZLZk5ybFdRbTN3YkNRQ2Z5c1owa2I4WTFQUlF4TlkwOUZsRGFSRQpmSk5VMEFScUtlOWxFSDFYNGR0WW5XU1IzaURsYVA3OU9MdU13TkVhVEdoRWhzZDBVNTN0eVJrdEZNQ1BaZUVYCjlvd2NNUEVDZ1lCTkxiMXIzeU13dGp6aFpBTFpLOW5sbmdadnFkTDBpN1YvTDduemNVY2R2M0h6eVJLSGtzL0IKQzd6ai9UcWd3RERQSEFTQVZlb3IxcWxpNW0vZjA4d0Rkd1VUcEFjeFEvOGx1ODBaSjB3amdZdkhHM3ovRmRzUAo3WjRTWVZuV2RudC9URWRkSldKQ1lwcHErVjdmRVNhTk1CNTB3Um9FdTZKVitLWTVyMXJ0dFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fa7c67798a2c73a3d4a19763d80d56251cfa858dcf972bceb9c2764b2d530f53
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 36cfe80469fd99ffd998b1be1b1c1d2a1475e07e96f42eec8631a52996c6efe2
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 2ce0e74b43959d01734662e55090441a90c50701852e5e49d853e2269937d472
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.4
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.4
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.4
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.4
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
