# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.flux-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkd2J4QjExUTl0bUcrY0U5aGRQZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTWxvWERUSTJNREV3T0RJeQpNVFUwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0WnhBUFRQbjRseTM3ckhXcE9SZXhsdGd0Q1ZNNzM3RktwSHFTWTl3Yk5yZDQycmcKd3RGTnJHZ0lTaXdJOEp4ak5BaHRHMFkxNFpKSnRQSnM2Y09WRHlmOEtUN1RId25CdUttL292cEt6bU82eDhvTgp1ajR5Y0Z1Y2tMbTUvRUhvdTByWERMT3A2amJtbDF1bmtkSHQrcHVXdmdMbCtaaHlibmxLN0g4NDEvNGxqbzRTCnQ1d3VHeG1PUGs4QnQvMGNreGJ1dzkzSlNKNmI5VkFEN0lQUE8zc3ZQei9aVlo5NnlDZjRIQk5vQmNnYzJBQ24KWVhvc0V4OXRlQWVJMGY4YWRCZGZSYks1enhxSlZFOVpIb2owR1BjRjRrb2JUVEdQUW1VUXFPM0hwQndtbldjUQo5eHJOd3NrQktXRkd5ckRVc3Baa2VMR3pMa2VHWExrRHJMeEhTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVdyRWpKL0R1NG5RNWE2Y3FTbDdiL2U1WWRYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFEydFFaclNYak0vdEViYU1RU0tnRVp6WHlMOVYyZ3ltamlXdFZYdVdHU2FTczZja2UyeFk3CmxtREVmQnJVRlNudzBvT3NFSC9WTk16ODQwZnNDNWVJY05jdDJXU0pzWXV4bnpueW5TbFRMZHNkUmZ1d0pqZ3UKVlpyTG1Qc21WU3ZEcElaY3BLaUVHekhCZkRQcHVkNGNHSVNwcGdlUDdLMEE1SlhrdUJMVTZTRHVFOTl5ek1ncQo2MFYwYlZoYmh3Sk1NNEVoQXdjQlF4b3J6UEQ4S0txQ25iVHN4N3JrWVVkeU1mUzc0QTdqWGtnSGhubUVXQVNGCnRqSDdwTkNrUXMwWDdNcnppR0RJTzFrS0p4Yk8zSExtOGxXNjRKL201T3d1UDJqTDExYTI5ZDIzU1lHQWlDOU4KZTBjQVJiNWpqNVZKQWd1cGpqOTBya1pJOGh3QkFHSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNFp4QVBUUG40bHkzN3JIV3BPUmV4bHRndENWTTczN0ZLcEhxU1k5d2JOcmQ0MnJnCnd0Rk5yR2dJU2l3SThKeGpOQWh0RzBZMTRaSkp0UEpzNmNPVkR5ZjhLVDdUSHduQnVLbS9vdnBLem1PNng4b04KdWo0eWNGdWNrTG01L0VIb3UwclhETE9wNmpibWwxdW5rZEh0K3B1V3ZnTGwrWmh5Ym5sSzdIODQxLzRsam80Uwp0NXd1R3htT1BrOEJ0LzBja3hidXc5M0pTSjZiOVZBRDdJUFBPM3N2UHovWlZaOTZ5Q2Y0SEJOb0JjZ2MyQUNuCllYb3NFeDl0ZUFlSTBmOGFkQmRmUmJLNXp4cUpWRTlaSG9qMEdQY0Y0a29iVFRHUFFtVVFxTzNIcEJ3bW5XY1EKOXhyTndza0JLV0ZHeXJEVXNwWmtlTEd6TGtlR1hMa0RyTHhIU1FJREFRQUJBb0lCQVFDS1J5SjRZSi8zZGF5bQplQWwrOXhtL3FiSVR0K2ozd1ZOSFREZTA3bDJSMm5PMU40U2E0MzRmOVlOZk1xNG9DeklpYWllMVY4c2VmbkwrCm5MZDBiNU9rdm5Vbk1vSmp1NjhvWjZJMVdnTVBqTUNtUTRrMlpYaTB0UEc1SXB5RHFFSGt5WElWTHVrdHpJaDQKckl5QUs1TVl6dFFOa2VreW1lVkpJTDV6UldhcHVzeDVzKzQ0OWRjdnZVV2RHOEx0UHExU3krK1pmajdsTmJ1Qwpud3MrRHRlaCtBNGhnZGpCNjEwUFI5ZXlNSnREbEl2MW5UbVczL2FmRkZ6LzRMdFluVU55NmoxTGRwWjE5M0QrCkJjOW51UUdqYldjR0RtRHMrY0twSm1PQTNrQk9yRWIvcDNHS2JtV1JQLytnWTJJRE5aTzliNm9nekQwR0J3OE4KY0lCa3IvNkJBb0dCQU9RU0RHUy9PbmlTZVFXWERKOEtmcGdlcFMvOU53b1p0RGNBbUMzQllncEZ0SmRLdUZQaQpLVHF4YkpGalN6TDAzWi9TekNRNUVxN09Tei95VGVRbE1ITHVCQkZ5cWpPODBlSWNYNXp2Vk5zVjdNVzFQeTg0CmMvelpZT0FNcGFEVkVPbytPS0h6a3BqMTFNOVg1ems4SEVlSTNlQnpyM1JObGVhbElEMjFjVnVOQW9HQkFQMDkKRTl0RDk4SnkwK1MzK1ZLUFRPUk1nNjFONFN5VHIyWXRaZXA2dFNJYkpuOVJya0dRbVh6eTlhOURBTGRCM1JUKwowd2hPaUNMZ2hVYlYxcUk0R01NT0VjWHBJdXdRcW1aVVpPckFEVHpncm9MeUJJRWtiVktPc0MrL21wYVc0UlhhCk9GNUhTdXZYa3crYXN1TUxNVHpYVGxDZmRKSGVSWUJpR0tqZStFMnRBb0dCQUpLelZVdDhnYlRLcXBQQTdEcGsKdXJkSWh3S09RdGY1WHFVK2VhUjh6bjVEQmYyRzczZnRjbzJ4VUY5WVdpZUZ3QVNzeCtqSTJVNmRuV09kalNLaQpGVDdvQUsva2JMeG95U3hEQ2ZGZE5OelRob0JKckVISWN6c0I3RUZSZ1R3cHNQNnJWU3cvQzEzZVNxdXdKQ2Y1CmxVc2lLMjNUbTlrWWlzSllGcHY2Mk5hRkFvR0JBSWJUR2R0SFdJV0NOU1kwZk4xanhnQldiRlM4ZmdJSnJ2eXIKZHZOYjJVd0xRSGZRdVFIWFJxQ3JpZnFCcGNQcm9SVW9ocHFKbFJsY2lCaXFpTmRkSG5IYTc4TjYyRWp1cG9wTQpyRjMvV2d6clluMzg5RUQ5YitiZ2FSVkM0YjhESFZ0UkQybkNjelVWVlFxZHhsZnpBWWZ1NlpjckRoa0xTZDJNClhLeXI2VzhSQW9HQkFJcGNVYW9QWXZNTm05eEZqajR0dTVDd0RTNVNYWGpFZjNndkd5R245ak45WFlKMGloT2QKNytWMWh6ZS9SRXRoRS8xV2c1aS95YnU4MGVxYjU5M0daS2ZzcVpQSnQvZ3Z2RXRBZmhYcktWQlgxcHVhZ1NZQwpxOUFwTVVrZzRqWm4yYVRYc25LYnRVNG8zd3lGQjVJU3pId01RWEwxSmJyaGhOVXprQ01aYjhCKwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkd2J4QjExUTl0bUcrY0U5aGRQZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTWxvWERUSTJNREV3T0RJeQpNVFUwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0WnhBUFRQbjRseTM3ckhXcE9SZXhsdGd0Q1ZNNzM3RktwSHFTWTl3Yk5yZDQycmcKd3RGTnJHZ0lTaXdJOEp4ak5BaHRHMFkxNFpKSnRQSnM2Y09WRHlmOEtUN1RId25CdUttL292cEt6bU82eDhvTgp1ajR5Y0Z1Y2tMbTUvRUhvdTByWERMT3A2amJtbDF1bmtkSHQrcHVXdmdMbCtaaHlibmxLN0g4NDEvNGxqbzRTCnQ1d3VHeG1PUGs4QnQvMGNreGJ1dzkzSlNKNmI5VkFEN0lQUE8zc3ZQei9aVlo5NnlDZjRIQk5vQmNnYzJBQ24KWVhvc0V4OXRlQWVJMGY4YWRCZGZSYks1enhxSlZFOVpIb2owR1BjRjRrb2JUVEdQUW1VUXFPM0hwQndtbldjUQo5eHJOd3NrQktXRkd5ckRVc3Baa2VMR3pMa2VHWExrRHJMeEhTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVdyRWpKL0R1NG5RNWE2Y3FTbDdiL2U1WWRYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFEydFFaclNYak0vdEViYU1RU0tnRVp6WHlMOVYyZ3ltamlXdFZYdVdHU2FTczZja2UyeFk3CmxtREVmQnJVRlNudzBvT3NFSC9WTk16ODQwZnNDNWVJY05jdDJXU0pzWXV4bnpueW5TbFRMZHNkUmZ1d0pqZ3UKVlpyTG1Qc21WU3ZEcElaY3BLaUVHekhCZkRQcHVkNGNHSVNwcGdlUDdLMEE1SlhrdUJMVTZTRHVFOTl5ek1ncQo2MFYwYlZoYmh3Sk1NNEVoQXdjQlF4b3J6UEQ4S0txQ25iVHN4N3JrWVVkeU1mUzc0QTdqWGtnSGhubUVXQVNGCnRqSDdwTkNrUXMwWDdNcnppR0RJTzFrS0p4Yk8zSExtOGxXNjRKL201T3d1UDJqTDExYTI5ZDIzU1lHQWlDOU4KZTBjQVJiNWpqNVZKQWd1cGpqOTBya1pJOGh3QkFHSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNFp4QVBUUG40bHkzN3JIV3BPUmV4bHRndENWTTczN0ZLcEhxU1k5d2JOcmQ0MnJnCnd0Rk5yR2dJU2l3SThKeGpOQWh0RzBZMTRaSkp0UEpzNmNPVkR5ZjhLVDdUSHduQnVLbS9vdnBLem1PNng4b04KdWo0eWNGdWNrTG01L0VIb3UwclhETE9wNmpibWwxdW5rZEh0K3B1V3ZnTGwrWmh5Ym5sSzdIODQxLzRsam80Uwp0NXd1R3htT1BrOEJ0LzBja3hidXc5M0pTSjZiOVZBRDdJUFBPM3N2UHovWlZaOTZ5Q2Y0SEJOb0JjZ2MyQUNuCllYb3NFeDl0ZUFlSTBmOGFkQmRmUmJLNXp4cUpWRTlaSG9qMEdQY0Y0a29iVFRHUFFtVVFxTzNIcEJ3bW5XY1EKOXhyTndza0JLV0ZHeXJEVXNwWmtlTEd6TGtlR1hMa0RyTHhIU1FJREFRQUJBb0lCQVFDS1J5SjRZSi8zZGF5bQplQWwrOXhtL3FiSVR0K2ozd1ZOSFREZTA3bDJSMm5PMU40U2E0MzRmOVlOZk1xNG9DeklpYWllMVY4c2VmbkwrCm5MZDBiNU9rdm5Vbk1vSmp1NjhvWjZJMVdnTVBqTUNtUTRrMlpYaTB0UEc1SXB5RHFFSGt5WElWTHVrdHpJaDQKckl5QUs1TVl6dFFOa2VreW1lVkpJTDV6UldhcHVzeDVzKzQ0OWRjdnZVV2RHOEx0UHExU3krK1pmajdsTmJ1Qwpud3MrRHRlaCtBNGhnZGpCNjEwUFI5ZXlNSnREbEl2MW5UbVczL2FmRkZ6LzRMdFluVU55NmoxTGRwWjE5M0QrCkJjOW51UUdqYldjR0RtRHMrY0twSm1PQTNrQk9yRWIvcDNHS2JtV1JQLytnWTJJRE5aTzliNm9nekQwR0J3OE4KY0lCa3IvNkJBb0dCQU9RU0RHUy9PbmlTZVFXWERKOEtmcGdlcFMvOU53b1p0RGNBbUMzQllncEZ0SmRLdUZQaQpLVHF4YkpGalN6TDAzWi9TekNRNUVxN09Tei95VGVRbE1ITHVCQkZ5cWpPODBlSWNYNXp2Vk5zVjdNVzFQeTg0CmMvelpZT0FNcGFEVkVPbytPS0h6a3BqMTFNOVg1ems4SEVlSTNlQnpyM1JObGVhbElEMjFjVnVOQW9HQkFQMDkKRTl0RDk4SnkwK1MzK1ZLUFRPUk1nNjFONFN5VHIyWXRaZXA2dFNJYkpuOVJya0dRbVh6eTlhOURBTGRCM1JUKwowd2hPaUNMZ2hVYlYxcUk0R01NT0VjWHBJdXdRcW1aVVpPckFEVHpncm9MeUJJRWtiVktPc0MrL21wYVc0UlhhCk9GNUhTdXZYa3crYXN1TUxNVHpYVGxDZmRKSGVSWUJpR0tqZStFMnRBb0dCQUpLelZVdDhnYlRLcXBQQTdEcGsKdXJkSWh3S09RdGY1WHFVK2VhUjh6bjVEQmYyRzczZnRjbzJ4VUY5WVdpZUZ3QVNzeCtqSTJVNmRuV09kalNLaQpGVDdvQUsva2JMeG95U3hEQ2ZGZE5OelRob0JKckVISWN6c0I3RUZSZ1R3cHNQNnJWU3cvQzEzZVNxdXdKQ2Y1CmxVc2lLMjNUbTlrWWlzSllGcHY2Mk5hRkFvR0JBSWJUR2R0SFdJV0NOU1kwZk4xanhnQldiRlM4ZmdJSnJ2eXIKZHZOYjJVd0xRSGZRdVFIWFJxQ3JpZnFCcGNQcm9SVW9ocHFKbFJsY2lCaXFpTmRkSG5IYTc4TjYyRWp1cG9wTQpyRjMvV2d6clluMzg5RUQ5YitiZ2FSVkM0YjhESFZ0UkQybkNjelVWVlFxZHhsZnpBWWZ1NlpjckRoa0xTZDJNClhLeXI2VzhSQW9HQkFJcGNVYW9QWXZNTm05eEZqajR0dTVDd0RTNVNYWGpFZjNndkd5R245ak45WFlKMGloT2QKNytWMWh6ZS9SRXRoRS8xV2c1aS95YnU4MGVxYjU5M0daS2ZzcVpQSnQvZ3Z2RXRBZmhYcktWQlgxcHVhZ1NZQwpxOUFwTVVrZzRqWm4yYVRYc25LYnRVNG8zd3lGQjVJU3pId01RWEwxSmJyaGhOVXprQ01aYjhCKwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkd2J4QjExUTl0bUcrY0U5aGRQZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTWxvWERUSTJNREV3T0RJeQpNVFUwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0WnhBUFRQbjRseTM3ckhXcE9SZXhsdGd0Q1ZNNzM3RktwSHFTWTl3Yk5yZDQycmcKd3RGTnJHZ0lTaXdJOEp4ak5BaHRHMFkxNFpKSnRQSnM2Y09WRHlmOEtUN1RId25CdUttL292cEt6bU82eDhvTgp1ajR5Y0Z1Y2tMbTUvRUhvdTByWERMT3A2amJtbDF1bmtkSHQrcHVXdmdMbCtaaHlibmxLN0g4NDEvNGxqbzRTCnQ1d3VHeG1PUGs4QnQvMGNreGJ1dzkzSlNKNmI5VkFEN0lQUE8zc3ZQei9aVlo5NnlDZjRIQk5vQmNnYzJBQ24KWVhvc0V4OXRlQWVJMGY4YWRCZGZSYks1enhxSlZFOVpIb2owR1BjRjRrb2JUVEdQUW1VUXFPM0hwQndtbldjUQo5eHJOd3NrQktXRkd5ckRVc3Baa2VMR3pMa2VHWExrRHJMeEhTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVdyRWpKL0R1NG5RNWE2Y3FTbDdiL2U1WWRYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFEydFFaclNYak0vdEViYU1RU0tnRVp6WHlMOVYyZ3ltamlXdFZYdVdHU2FTczZja2UyeFk3CmxtREVmQnJVRlNudzBvT3NFSC9WTk16ODQwZnNDNWVJY05jdDJXU0pzWXV4bnpueW5TbFRMZHNkUmZ1d0pqZ3UKVlpyTG1Qc21WU3ZEcElaY3BLaUVHekhCZkRQcHVkNGNHSVNwcGdlUDdLMEE1SlhrdUJMVTZTRHVFOTl5ek1ncQo2MFYwYlZoYmh3Sk1NNEVoQXdjQlF4b3J6UEQ4S0txQ25iVHN4N3JrWVVkeU1mUzc0QTdqWGtnSGhubUVXQVNGCnRqSDdwTkNrUXMwWDdNcnppR0RJTzFrS0p4Yk8zSExtOGxXNjRKL201T3d1UDJqTDExYTI5ZDIzU1lHQWlDOU4KZTBjQVJiNWpqNVZKQWd1cGpqOTBya1pJOGh3QkFHSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5DSzlSRzNFLytNZWJ6azM5OTRDOUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTTFvWERUSTJNREV3T0RJeQpNVFUwTTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRzTU9ZUHNYTEZtVVdDWEJMOE9aQ0lOaHB2V3UKRyswaGtKczlCQU1ieWhWWG9KZndqdWxOZDhrcnltQjI1TUk4UlJzK01GQUo4UTFrOEN2N1o3UE9uVzFDWFRPbApIY3dsWm5kODJUZnBHeFFsTmVyVW1FMFVYNndzNUVCVnRFUDZRcUVkendYakowR2EycmVNMFhKR3JzQnZybE51ClUybXk0ZkczcHNleFRDYTZSRzg3K3dLK0tqYkROdmhxazRNUGhwWSt6dWE4QzFUaEpSc1VSRFg2MldTZ3h6cEYKU201QnhFcXVYWUNQVTlzVVprbUdGVGF2dWtITVo2YTIzV1JtWmMwbXdnYkU4aEw1TFI1VUpFY0RaeStXeWo5eApVZkp4ODgyYzNzK0tFRmdCcTFmQU83YmJZUnpqRHpJWVRreDhqOWttaU9zVkhqdVpLcVYxanBidW53SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0ZxeEl5Znc3dUowT1d1bktrcGUyLwozdVdIVnpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ0Qzbk5XYkQvU0xRUHlZNlpvTlViNlk4eStkZ04xVTljYmd0a0RpeUozODFva0QKbVZDeGJqaGdBSGttaFNkU0lJSyt3WUZRNnBRVDZqVDhMZE9oQzZpRFpiRE50SWhpOGZMdEVBcGFBaytkL1IvZApqUWxWTjRjdDVONG12aXpWWVE5Vm5sUUNGbXdiNGxVSTcxN1BrV3ZuV1dxS1BLMnFVSGJzVjMweXoyUmgwT2NjCnhKYi80ekdmUGFlNjkyVWFMdzhDVVd5cm9wSldEZHRIb2d6Qmt5Ym13WWRUQm1xK25mQ1psczdMZ0RyTkp3ZmoKWk5kUXB5TmhEeWFRMG1xdGVPK29HRFQzOHlYOGV3bW1JblI0SDFsSHhQeEgrZHM1aDV6Z0s2VGtOWjN1a2VaSApvT3gxUHVTWTJjVk9hd0Fsa2RPTmNZK2FJbWliMHRiRkE2ZVh5b0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNHNNT1lQc1hMRm1VV0NYQkw4T1pDSU5ocHZXdUcrMGhrSnM5QkFNYnloVlhvSmZ3Cmp1bE5kOGtyeW1CMjVNSThSUnMrTUZBSjhRMWs4Q3Y3WjdQT25XMUNYVE9sSGN3bFpuZDgyVGZwR3hRbE5lclUKbUUwVVg2d3M1RUJWdEVQNlFxRWR6d1hqSjBHYTJyZU0wWEpHcnNCdnJsTnVVMm15NGZHM3BzZXhUQ2E2Ukc4Nword0srS2piRE52aHFrNE1QaHBZK3p1YThDMVRoSlJzVVJEWDYyV1NneHpwRlNtNUJ4RXF1WFlDUFU5c1Vaa21HCkZUYXZ1a0hNWjZhMjNXUm1aYzBtd2diRThoTDVMUjVVSkVjRFp5K1d5ajl4VWZKeDg4MmMzcytLRUZnQnExZkEKTzdiYllSempEeklZVGt4OGo5a21pT3NWSGp1WktxVjFqcGJ1bndJREFRQUJBb0lCQUNMUXE4NTcvb3pTbkJJRQppZXFaYjA5OVRHcmo0WDFzSlBFY3hIdHZOcjhLRTlBV1E5ck5PeFdmRDFnZEEyUVA1a3o5NThobklYK2UvTlpiCkNsaGJwT2RLdFJ1MktDMnhBRFVCTjJ2cVI2SGVyKy9kUkJLMkV1QzFnSmJ5d2JYUmtnVFUwOHpMTEpzRVdaQW4KQ2puRi85QW92M3pXVm1QOElIak1NZFFyYUs4MklQTUVWZGlpckpsd041RSt6ak5ndGJJM0thOWZUVGlYMVNuQgovcXZ5bW1vRFFtaDJwaEVKa1BsTXc0byt3bkVTVlpDVndHeDEyMlJPSzZMNUtXbSs5QStIR3BpNWZGR2dTYmY2ClBlekpDbjdnby85eEd3WGxGNURIUER5OUhlRFdjRkJyWVVZTGpPYldra2VyajBaRVIwZVZJMC9rZmxqOXg4Ym4KREc5Wkc1RUNnWUVBNmdMcnc2UXBrYmk3bkVDZFdFckVLWEZCSVdPQm9FRFdUVytEanBQUE9panNKNHBZODlsSApPUUpoYTRBZVNEdm5MaTNvaXkxM1craEo1bHhZTVNSZWttSlE3YmxvdFRtZlpvaDVnZXVCZk02RXg5cWhROVVZCnBDTE9PSVo0RTJMRlRROEhHSktGb0NXTUdLVXVNZXAwYUgwNjRVR0ttUkZCcjlRYSt1TEs3M3NDZ1lFQStCSEEKVGxXM004U09BVGc5NExmTnJjZ1JZK0dHRVE2YUhKbGZWYlRZeHBPR2p0SGszZGNpWjBkalQ5Q05xaXVHQmYvcQpGcFMvWWM4dVM2NnROV2RsQ2J4RXAxc01Xanp3ZGNqczdWRXI3SGdmZytFV2RQUjZOS2hGQnV2NVhNZHFFZ05ECklLREdnS0VYOWw5SVhkSUZPWG4wUGlEMnlwUWZTc08zMVlwdG9pMENnWUVBNUlCNXF3NFBzVVZMbk9YVFByV3oKR2l5R3hvMmRzOWZiNnIwckh2dmg3QTZ0bW1hVE9YaysvTUlBVXJKRjM0N3V6TDd6UllQZCt4YTFvb1VsY01icwp1Yy9hNm1hVGdmS0VYZUNCbFlWYmFYMVhWcmQ3cFByZUZ0Z051bEJEeTlvMGdteGNKM2hibHVkVEIzV3p4L1lDCk9VMmZRdmwyMXNScytiNEpvbFgyaHlVQ2dZQU1aMjdUTyt2K05hellHTVRYVUxtRElBYm1sS2RNZ1F0cHRLMlUKcm9kTVhxSVMwQ0graWJ4WnA3TXFrWVlUNVRzOVg0K0g4NFlpVU9iQ3VBaEhMRlZjQ0VMeWoxWHR5VEJJNDNRZApaYnFwaDFRa0Z3UTFjdWdOYkFDUG1Rc04vWmFyTWVpUVlCbXM0dUU4MjRUVjFDT1l2U1ZlV2UyZE1ZempBeWhWCkVDZnRQUUtCZ0VIT2pPL0w0U2E1cGFvRWFNUnZBRHl1WmNMUmp2YzRHWDkxRGJuekN4UElCY3NXZGpBdCtxQkwKOWR4eDA1SGhyTWRQMWZxcW44MktjK3ppZnltSDF5TzY3YkVrU1JqUkpaTTlrQXlqdERmcHhpMnJ3Mnc0bE1wUAptTldvUFhpSXMvcjhhMENlWjdSd0xVd3haQXpyM2k4eHBLeU5CMDFCOTZqMTdTZTZ5MzFCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkd2J4QjExUTl0bUcrY0U5aGRQZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTWxvWERUSTJNREV3T0RJeQpNVFUwTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0WnhBUFRQbjRseTM3ckhXcE9SZXhsdGd0Q1ZNNzM3RktwSHFTWTl3Yk5yZDQycmcKd3RGTnJHZ0lTaXdJOEp4ak5BaHRHMFkxNFpKSnRQSnM2Y09WRHlmOEtUN1RId25CdUttL292cEt6bU82eDhvTgp1ajR5Y0Z1Y2tMbTUvRUhvdTByWERMT3A2amJtbDF1bmtkSHQrcHVXdmdMbCtaaHlibmxLN0g4NDEvNGxqbzRTCnQ1d3VHeG1PUGs4QnQvMGNreGJ1dzkzSlNKNmI5VkFEN0lQUE8zc3ZQei9aVlo5NnlDZjRIQk5vQmNnYzJBQ24KWVhvc0V4OXRlQWVJMGY4YWRCZGZSYks1enhxSlZFOVpIb2owR1BjRjRrb2JUVEdQUW1VUXFPM0hwQndtbldjUQo5eHJOd3NrQktXRkd5ckRVc3Baa2VMR3pMa2VHWExrRHJMeEhTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVdyRWpKL0R1NG5RNWE2Y3FTbDdiL2U1WWRYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFEydFFaclNYak0vdEViYU1RU0tnRVp6WHlMOVYyZ3ltamlXdFZYdVdHU2FTczZja2UyeFk3CmxtREVmQnJVRlNudzBvT3NFSC9WTk16ODQwZnNDNWVJY05jdDJXU0pzWXV4bnpueW5TbFRMZHNkUmZ1d0pqZ3UKVlpyTG1Qc21WU3ZEcElaY3BLaUVHekhCZkRQcHVkNGNHSVNwcGdlUDdLMEE1SlhrdUJMVTZTRHVFOTl5ek1ncQo2MFYwYlZoYmh3Sk1NNEVoQXdjQlF4b3J6UEQ4S0txQ25iVHN4N3JrWVVkeU1mUzc0QTdqWGtnSGhubUVXQVNGCnRqSDdwTkNrUXMwWDdNcnppR0RJTzFrS0p4Yk8zSExtOGxXNjRKL201T3d1UDJqTDExYTI5ZDIzU1lHQWlDOU4KZTBjQVJiNWpqNVZKQWd1cGpqOTBya1pJOGh3QkFHSWMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU5zRnA1MDhOaVJWOEh5UW4vSXpYc0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFd09USXlNVFUwTWxvWERUSTJNREV3T0RJeQpNVFUwTWxvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTlpmMkphbE9CUkUKSzRGWVNPUHFkSElnajArZnZINzhPZDM0Z0hBaFh6M2RHVDB6SWxPVlpIbTBUVDhkd1JPQk5zZ1Z0TXQySzBGMAp0am9mZnRaTGZlZVNWNFd6VFc1VGtHWlZxQnFJYkhCVE41UGJVcGRqSlhNMjVWVmVVbm5qOXpjdXhCbnBZeHlnCjJvVXJSalRIUGl6aWFUT0pxb1JqVHBvR3E5VTRoTnBJN3VnVWtmUzZRZ2ZVMmZOSXVsTVZSUjhCVm1RZjhQQkoKcitISk02WkV3Z3NsSWQxNmFPSGxWdTZzZ3RhUjVRdDFkcmJqWU14S05VYUhZaDVYQWY0M2pUc3RvMS83QjRCSwpGTm1xcXJrNTBVK09ncmdBYllQNkpReTNNMEZJd1ZWQjdRWUhpYllNem5Ba1NqcGxxQ0ptNmhqNTFsWDhBWVhoCmlJVTAzd2RJempjQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVaGFzUwpNbjhPN2lkRGxycHlwS1h0djk3bGgxY3dNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSYlR2SUZCNWVyUC8KNXhCeHNSd3lpV3gzNXR3SU8vUi9NV2orb1pPV2JGU0tLeDhIRHJMU1VXZ25sc1I3dEp2NWtyVWRWc1JKcjB5aApoNGZPL3M4ak5NaUxXOXdlNFJjRVJma1ROSjdpMGk3RzBXZXZoK0dUTTlVVWFqWWFvTUxsOHhiY1U1MmJ3eS9nCmc1L2t0Nk5Ga0xiSXdyZ00zSG9hd0Z2S0ZjSFpjcG8ydUpYYzBTWmk3NFhzQjFKYU16cHRISTloOWp0d1dxWWEKZ0ZTVnljR2lkbExSa2wxbThTTmVLZndOajRkL2ZhU3Y2YjExK2VFeUdnWVZoZUxCaGxRWWFmQVRJU3hNQVBMSwpxUFV1OWErUFE0NXNFZU14NkF3SmZMQkttMS9DSVVxOVYyWDJ4d2ZvanlaaUJmTEwwQTZQQUtIRlkrT2Y2V3lNCno2UmZnNy9neGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWwvWWxxVTRGRVFyZ1ZoSTQrcDBjaUNQVDUrOGZ2dzUzZmlBY0NGZlBkMFpQVE1pClU1VmtlYlJOUHgzQkU0RTJ5QlcweTNZclFYUzJPaDkrMWt0OTU1SlhoYk5OYmxPUVpsV29Hb2hzY0ZNM2s5dFMKbDJNbGN6YmxWVjVTZWVQM055N0VHZWxqSEtEYWhTdEdOTWMrTE9KcE00bXFoR05PbWdhcjFUaUUya2p1NkJTUgo5THBDQjlUWjgwaTZVeFZGSHdGV1pCL3c4RW12NGNrenBrVENDeVVoM1hwbzRlVlc3cXlDMXBIbEMzVjJ0dU5nCnpFbzFSb2RpSGxjQi9qZU5PeTJqWC9zSGdFb1UyYXFxdVRuUlQ0NkN1QUJ0Zy9vbERMY3pRVWpCVlVIdEJnZUoKdGd6T2NDUktPbVdvSW1icUdQbldWZndCaGVHSWhUVGZCMGpPTndJREFRQUJBb0lCQUg1OEZzTHJ3T2JVUWdjVApIQTY5NnU3Ym56TVB3SnY4SGZpR0F1SW1EcGZsdUZxUHJSVTc5QWlMQlhqVUNYT0VyZG5vVk1BbmZPWW1BczdRCmZubmFHUE5sT1JhOThGWEVJRk1BL3lxSWk5TEtodVJLWjdUQzN2blh6Z0JNb3NVZ2FHQzZ5eUd1dnJmSmdLVksKSHlaTTJMYUs4QjlrZnFPV0pHNWt1VVlaRHVuclFmZFlVNHVIUDhQZDVoSDJwU1h1cjBxeDc2eU9xSm1KRitXagowZVNMTGxnV0pCVytWcDlKVWZ6dS9RNWNnWkRvc2U4OTJHSExWTUdmeXJZT2JXditWSXpkT1FJNlFvcmFESHFKCkNXMGRXVzVzR3RUS0JxaGIwdHNud3Vkd1Z0RmxraWxVY1FUZm55RDRhSTRtRjgvUEI0dnFadnRmSHp3UjVwZnUKRTIxVyswRUNnWUVBNjk3cWNjWmVkWGRRbkpKMFFHN0VxWjdBWU5KVTNkSVNqdUZNcSs1OGF4ajVoWTAxaEY1Zgpxc2o2Sm5SSkZWVkdrNTlpL0k2Z2EzelJodlhFMitkQmNmSEdQdTBrb1p2cU9DdWV4SlZJY01Vcmx0Ly9qMTVpCldDNnRkWEI4U05RVVpiazZvSGN3OHBrMURPNVhDWGlueE9kekYxZFp5T0V5Zk9tOTBXWVpucjhDZ1lFQTZLdE0KTnhhK3FSV3V5SVBJQWxLUFZiWlNVTTgzT0FoTnZDUVVkYWVsNU9TOXFDYlY0Tmszd1NIblFpaHdEdFhDMG9PNworbXY3WEtaaFJWYWtTdFNaZURDOHozY2g1SVZhaXlvMXRzMlgrK2s3OVVxM2tkWThwNnJIUWlhVUUzQTZGWFk2Ckw2YnRvTWY1c0k0K2d6QlZ4ejRyK1Q0ejRYR2xUeEltK2ZVZHBva0NnWUFTYXBSSmorQitNWE8wMWVhSHhWNUwKbEI2WE1MVDVvTlpjRzVFOTkxLzFpTHlxeGN6QTZoRjBKejhJMDVtRk5lUk4wR3NOSnlHMVlzaUZUaGt4eGt1ZwoxdXpRcXZscU9OOC94WUFlL3p6cHVTdGZHMXc3MkhXN1J1RzZRcThoakpXUEg3aEpJU1ZNTzlRZGoxcHlYZDVUCmpISzdCdEgyMGtaNzVGQXkwbEw3eHdLQmdHNjgyTkYvYWM5Z0dvZ2s4SlRxWm40TkFMQ2xiMHFqNlJ1YXNJSXYKQUs0b2tIdnZ2K3Y4ZHFUZFZnd080d2FzaHNWYkhhVGFzQkF3d0NzWVNhbXo5amRXT3djalZHWkhjZ2k2VmtaagpJK3NwM3Zlb1VDYUJLTzFFUXdJaENta1dDUThkN2lPdjkzbUd0RGhyK3lURlpJNG44UlgzblFtMzVVMzAvY2dKCitjckJBb0dCQUlxL2ZSempFa2RvTHFmbDhlTzRqVEpqN3c2NzZLRnFtRllOUSsrSzFkb3UzNmFDQW1hWVhwOFEKc1ZJUmtnbU9PVGdKU29jR0p3Mmp3NGg5N09nSTQ1Z2RHOER4L0VvMGNFWVJBWXQvNFJOejR0K3lodWVyTk42bQpmRFVMaFdtL0tlYURuTStFZytRVFg1SWNZTkZFYy95TnhCS3g0MHhCbFNlN3NOa2Y0SGhYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 9527b117ecf149a561f33a09af8c602fc1a3020c9e3a261e8c6cd19efa342744
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: c59bdad57281daffd209b30268d9a8d9c3b7f9b0f4785ae8fc3ffb6f9f595a92
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 951b9a91050f06b6c2722583d41d27b3b2adfd898b53a0e2de0abe7b4b55a970
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble
  namespace: kube-system
spec:
  endpoints:
  - honorLabels: true
    interval: 10s
    path: /metrics
    port: hubble-metrics
  namespaceSelector:
    matchNames:
    - flux-system
  selector:
    matchLabels:
      k8s-app: hubble
