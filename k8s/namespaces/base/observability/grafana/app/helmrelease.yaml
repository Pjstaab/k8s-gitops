---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.51.5
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  maxHistory: 3
  values:
    rbac:
      # PSPs have been deprecated
      pspEnabled: false
      pspUseAppArmor: false
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
    grafana.ini:
      server:
        root_url: 'https://grafana.${CLUSTER_DOMAIN}'
      auth.basic:
        disable_login_form: true
      auth.github:
        enabled: true
        allow_sign_up: true
        scopes: user:email,read:org
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        allowed_organizations: raspbernetes
        client_id: '${GRAFANA_AUTH_GITHUB_CLIENT_ID}'
        client_secret: '${GRAFANA_AUTH_GITHUB_CLIENT_SECRET}'
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Dex
        client_id: '${GRAFANA_AUTH_GENERIC_CLIENT_ID}'
        client_secret: '${GRAFANA_AUTH_GENERIC_CLIENT_SECRET}'
        scopes: openid profile email groups
        auth_url: 'https://dex.${CLUSTER_DOMAIN}/auth'
        token_url: 'https://dex.${CLUSTER_DOMAIN}/token'
        api_url: 'https://dex.${CLUSTER_DOMAIN}/userinfo'
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], 'raspbernetes:k8s-admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'"
        org_id: 1
      auth.github.group_mapping:
        role_attribute_path: "contains(groups[*], 'raspbernetes:k8s-admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'"
        org_id: 1
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/
    datasources:
      datasources.yaml:
        apiVersion: 1
        # Delete the default Loki that comes OOTB to avoid datasource contention
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.observability.svc.cluster.local:9090/
            isDefault: false
          - name: Loki
            type: loki
            access: proxy
            url: http://loki.observability.svc.cluster.local:3100
    dashboards:
      default:
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.12.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.12.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.12.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
        # Istio dashboards must be kept in parity with the version deployed
        # https://grafana.com/grafana/dashboards/7639/revisions
        istio-mesh:
          url: https://grafana.com/api/dashboards/7639/revisions/145/download
          datasource: Prometheus
        istio-service:
          url: https://grafana.com/api/dashboards/7636/revisions/145/download
          datasource: Prometheus
        istio-workload:
          url: https://grafana.com/api/dashboards/7630/revisions/145/download
          datasource: Prometheus
        istio-performence:
          url: https://grafana.com/api/dashboards/11829/revisions/145/download
          datasource: Prometheus
        istio-control-plane:
          url: https://grafana.com/api/dashboards/7645/revisions/145/download
          datasource: Prometheus
        # openebs:
        #   url: https://grafana.com/api/dashboards/12171/revisions/2/download
        #   datasource: Prometheus
        # openebs-pg-dashboard:
        #   url: https://raw.githubusercontent.com/openebs/openebs/v2.3.0/k8s/openebs-pg-dashboard.json
        #   datasource: Prometheus
        sealed-secrets:
          url: https://raw.githubusercontent.com/bitnami-labs/sealed-secrets/master/contrib/prometheus-mixin/dashboards/sealed-secrets-controller.json
          datasource: Prometheus
        # speedtest:
        #   url: https://raw.githubusercontent.com/billimek/prometheus-speedtest-exporter/master/speedtest-exporter.json
        #   datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/overview.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/compact.json
          datasource: Prometheus
        thanos-querier:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/query.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/store.json
          datasource: Prometheus
        thanos-receiver:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/receive.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/sidecar.json
          datasource: Prometheus
        thanos-ruler:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/rule.json
          datasource: Prometheus
        thanos-replicate:
          url: https://raw.githubusercontent.com/thanos-io/thanos/v0.28.0/examples/dashboards/bucket-replicate.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        # velero:
        #   url: https://grafana.com/api/dashboards/11055/revisions/2/download
        #   datasource: Prometheus
    persistence:
      enabled: false
