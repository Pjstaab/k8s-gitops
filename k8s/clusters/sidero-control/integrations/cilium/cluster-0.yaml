---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVlhpbE5FekUvMEFYYmZOV0hTMWV0REFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURFeE9EQXhNekl3TkZvWApEVEkxTURFeE56QXhNekl3TkZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NiemhqQkRqVDBWRGtBWVhRcnIvbFgKYVF1WW02Z3F0L3RPaFRiOWFZZ29peExXZTRXTGpmL2hqaHNTcW5GTTR4WEJjQ2ZsOUkrSTdhZ1d1YnYxZlFXWgozNXhqN05ndWs1RlpNQTVFWTZPTGNTQUVJYkRjZnRPU2lLTEs5RUdINkRYNEgrUWd6RmFTYjM0eC9UT3VKNDJwCkd6TnpFdVJPN29nc1lpK1N6MDY3MEh6QnhSd0NBendZTFp3Zm1RZTZYWnFZUlZENy9rVFpHOE1DU2dFNERhT2EKYS9SVVQ3Mm9DN1hBMmpVTHpzNzZKYVZqZ2c2UVVzWkU5UkMxWUUzWnlteHRRNWtDczdsaWtIeUovYWVGVm5sVgpoMTQ2cHZGdWdVTGFOSkExR2xoZTRQZ2lJNUF6VlZwOU0zalFDNlBWbjBFZGdqem1hUE1KbFIvcTZyUVFUdFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM0K3luUm8xSldTemFsbWNHTApLTnVmcStYVWVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGTXd2dHFzKzdHanhIUFlrNGhuaTlSLzBtd1pkClo5QjFyMU1XK0MxLzFkTkJSTmhyS05nLzkvU051YUVhdmd0dWQzVVBNWUZZM2F1eFZrdVZ0V0s4dXhqUlVWYUUKcjRaelpPTHkrUG1ZNm9RS2tFemNUOWRNNlM1YWZ4T0cvcnJrNlU4SCthcU9UUGExM0tmc21BUGZqeG9vaVhNMApOZEtTeFBZK09iSHlEVDNrcjNtRlNVeEVwYVZVRllIKzJhK3hBSzR4UTNQV1ZLRkNiSlhNT2lLaFlRY1ZHNE9WCjNZYzRwREgxazcyMXdEbUR6Tng1U0Q0dWdpemdyeDdDVDFadVNLdGsxUVYrYndvQmMrZ0dBZGFVSHgvclNCSWMKQ1Voazc4bmN3YUthaHdvU2JOeVJlYU1rTVJqeFRTalMxNWRyYXFXTGRKMkNuNVZVeXQ5UmxkSWt4Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUp2T0dNRU9OUFJVT1FCaGRDdXYrVmRwQzVpYnFDcTMrMDZGTnYxcGlDaUxFdFo3CmhZdU4vK0dPR3hLcWNVempGY0Z3SitYMGo0anRxQmE1dS9WOUJabmZuR1BzMkM2VGtWa3dEa1JqbzR0eElBUWgKc054KzA1S0lvc3IwUVlmb05mZ2Y1Q0RNVnBKdmZqSDlNNjRuamFrYk0zTVM1RTd1aUN4aUw1TFBUcnZRZk1IRgpIQUlEUEJndG5CK1pCN3BkbXBoRlVQditSTmtid3dKS0FUZ05vNXByOUZSUHZhZ0x0Y0RhTlF2T3p2b2xwV09DCkRwQlN4a1QxRUxWZ1RkbktiRzFEbVFLenVXS1FmSW45cDRWV2VWV0hYanFtOFc2QlF0bzBrRFVhV0Y3ZytDSWoKa0ROVlduMHplTkFMbzlXZlFSMkNQT1pvOHdtVkgrcnF0QkJPMVFJREFRQUJBb0lCQVFEaVJtVkVrekhnc0VYOAo5YWVBT1EzQkd3ZmFkbjc3Z08wQ1RjSUZuK2FvNHBobFdPNkNUSk9NeGxERjh6L0pUWFVudjRPbnVqRExNWmtxCld2UVVXdlFZYXltdHZpcGNBQjRJSytNby9BQXpqSDI0VnQ2U0ZHMWtOUklSTUJsOEUyMkFuY3ZUSGJPanJPVzIKWHZ4ai91a2ZpbFptSW14OGxyUDdEUk5TUzFudWJwRHNmbkRUbkRRemljbzRWcEZZUkxTM2NYL1dZdkVmcTBoTQpMaXZBT2xvZGFkUy9SNGpKV2FEekJuUjBOdXUvMzZmN3RoYmFjaURUTkFYaXFlY3owalV0TzdkdW1hdWFON2tOCkoxRStjVHluaElrUTJodlEyT0xKVVo0TzZpNlVEUlozZk1HWU1nalhHWUFJR0tKbTlZSGZmNk50U1NGSTQ0ZTcKR3IweGVKV3hBb0dCQU92cDhZY2NGTWwreVp1TlBjZlA0QW5zeEIrQTZsN1VMNXc4YkxUMDdpMTAzcnQzOUpmeAo4U3VhY3BsMnplekZmbzlLSEp5QmpUdVd1WHl6MkFGMDVnK0F1aXJuMHV2eEFhY2ZMWElSaTVSbTJ2VFdrWUIwCjY4WStONjUzdEUxN0JPZ1JUZGxucTRuRit0NkVMK3hBRjdoNFZTSnk2bk10L0Y1OEtoTENSVU0zQW9HQkFQZ1MKb21rV1RwZi9oVnRCd2Nmd3p1VGNnOERBZWlpME9XTUV2RW9lWHZUWTQ3N1l2SEd2NDlzdHl4Y0NyUlE1cGR6UAp3TUQwL1cwaWZJeFdUSExUVzdsSCt2K2xoRG51V0tpUFlyVkUrL0NyVUM5WGRDK2RYOGd3elY2RXN1SU9hbFVTCnc3WFFmbkltQTZ0UVh0cVVtWHJxVGxac244cXlwRnhydEI1eGlweFRBb0dBRzZ5dDhMT1NuTENLNWZ5RHF0VHYKNnpvako2N3Z6NEFFdGNkQTJWbUNOMExtZmdkc1lnYTN5KzJxVStaajhjcVpOaVh6aFVpTlVOZzFtak5ldTQwRApELzZCMkZhcG41UCtKYVM2cUE3MjJNbllGYkMyRU9PbVpQTVhoUmYxeHNFUHFrbWRZRXVSQy9CMXBYVE1TbUthClpjRjMrenFQMWtNbXY4N0JBTUpaYmJFQ2dZRUF2dHpmZGtrQ2FUSGdjYWp6SmhraHBiWC83TEpxaXB5M05uYnoKUTNlQWlaUENEaGtGUzljUFVaZzNGRm9ydms3b1RTN08xK2JtZ1N3eWRXc0VZS2c3Zng5aGY0WGlhUXYzektDZApTbWhzQ3V4VHdramdESzVoZms0R0JIM0dmK1NsYlJVRjNRSXY5elZHUjIyTHZWTHRqME5zeUZQRTBaaUdtdEVICkFSRk1teDhDZ1lCYnNJVUtuZDN5MXd2SXZIOGJRVG0rbHlFNWpQZVZveVRSdExMdUFrRnczanJBTG5acHdaUm4KTTVmdGIvQXF5MnVxUEZKNzZBQW9JczcycDZEeVh3WmdraU9tSHB4K2R5SW5RQU15aXBNVjRmVGNnNGY5L2V0aQpsaG5NUGk3MkVMUGZPaFNCV3ZjeGxpdW9ZY1pQemxUWGo5SnlhREdCTEE1N0drbmhZcnFiMHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVlhpbE5FekUvMEFYYmZOV0hTMWV0REFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURFeE9EQXhNekl3TkZvWApEVEkxTURFeE56QXhNekl3TkZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NiemhqQkRqVDBWRGtBWVhRcnIvbFgKYVF1WW02Z3F0L3RPaFRiOWFZZ29peExXZTRXTGpmL2hqaHNTcW5GTTR4WEJjQ2ZsOUkrSTdhZ1d1YnYxZlFXWgozNXhqN05ndWs1RlpNQTVFWTZPTGNTQUVJYkRjZnRPU2lLTEs5RUdINkRYNEgrUWd6RmFTYjM0eC9UT3VKNDJwCkd6TnpFdVJPN29nc1lpK1N6MDY3MEh6QnhSd0NBendZTFp3Zm1RZTZYWnFZUlZENy9rVFpHOE1DU2dFNERhT2EKYS9SVVQ3Mm9DN1hBMmpVTHpzNzZKYVZqZ2c2UVVzWkU5UkMxWUUzWnlteHRRNWtDczdsaWtIeUovYWVGVm5sVgpoMTQ2cHZGdWdVTGFOSkExR2xoZTRQZ2lJNUF6VlZwOU0zalFDNlBWbjBFZGdqem1hUE1KbFIvcTZyUVFUdFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM0K3luUm8xSldTemFsbWNHTApLTnVmcStYVWVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGTXd2dHFzKzdHanhIUFlrNGhuaTlSLzBtd1pkClo5QjFyMU1XK0MxLzFkTkJSTmhyS05nLzkvU051YUVhdmd0dWQzVVBNWUZZM2F1eFZrdVZ0V0s4dXhqUlVWYUUKcjRaelpPTHkrUG1ZNm9RS2tFemNUOWRNNlM1YWZ4T0cvcnJrNlU4SCthcU9UUGExM0tmc21BUGZqeG9vaVhNMApOZEtTeFBZK09iSHlEVDNrcjNtRlNVeEVwYVZVRllIKzJhK3hBSzR4UTNQV1ZLRkNiSlhNT2lLaFlRY1ZHNE9WCjNZYzRwREgxazcyMXdEbUR6Tng1U0Q0dWdpemdyeDdDVDFadVNLdGsxUVYrYndvQmMrZ0dBZGFVSHgvclNCSWMKQ1Voazc4bmN3YUthaHdvU2JOeVJlYU1rTVJqeFRTalMxNWRyYXFXTGRKMkNuNVZVeXQ5UmxkSWt4Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZmMwNXo0aVhSUi9xMG5xNDE2L2MxakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURFeE9EQXhNekl3TlZvWApEVEkxTURFeE56QXhNekl3TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTMxOUJDM2cyN3M1N2gvSTMKTFAzVC9URWdocHV1bG96Mzc2ZUJRZUpUa3R0bENocUJUTUJDRUF3czZ5M1ROTmZMaTVaZ2dmcFpXcjZhVkxPLwpHd1RZb1RBY3FQU3dsM05jcFdiYzBmSmVLKzNHaXk5ZklsRXNiRHNoYjkwc2ViSEVmSWZPSmdjWnFlUWdDMDYzCkRwRHBBNzFPbUp5NGFIN29tUFBkY2w0ODJRNVdDLzFjRGk1My9peCt3OENHTmhJUVh6aWc4dktSMkpRY2t2V08KZC9TZVFQM0Y2QmF2b1VpWHZGUkVBZGlDRXVNeXYwZlIwTnFnV3ZUOGFnYnZ4S0J5bEVqWFc0TDZlbXExeTl5VgpyYjUxbzc2NjU1YVRlOVlGVHdRSlJ0L2JEK0t2OHpaNkxNeWhJMjRsNnBCbXlBUXU1Zm9GVGgwZ0VTU1pabWllCklNTDBBd0lEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzQreW5SbzFKVwpTemFsbWNHTEtOdWZxK1hVZURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWZTV3ptUVBETkhrSXNSU3BPL1pkQktrVFNDQ0NUcENGVmkKWXNZcWNVcmlwQ1hHV1Z0Q3VRYVFMUUorVVl6ajU0UEJNMUd2UXovTDB5b3V1dzZDN01LUStxYVZoZ3ozOHYwaQpoVjU1a3dzRG9nRFVOSnJkV0wwOWJGT1l0TlBNbWF0QXdSellvVzVnY0hoS09SOVdIS0Npc0JDUklOOXdPZ1I2CmN6VDc3TEF2d1VTdG8zUkQ1SWtwWTVETFJqaVdrTXVWUmFOMFNSZklONmszYS9iSERWSmVIVGloWG55dFEzZ1QKYkhySS9MaXIyMHg1Q1N3TkdsTE9JbEN3RWw5bGt2YlRkRHoraXEybmFvRG0zRFNPU2tUbW8rY0M5M3k3b0pURApiRm9HVUhpR2MreC9iNDhjZTZhOEg2Uyt0SzhkajloTXZmVm1JL2Mrbk9KY3lYbnR2L289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMzE5QkMzZzI3czU3aC9JM0xQM1QvVEVnaHB1dWxvejM3NmVCUWVKVGt0dGxDaHFCClRNQkNFQXdzNnkzVE5OZkxpNVpnZ2ZwWldyNmFWTE8vR3dUWW9UQWNxUFN3bDNOY3BXYmMwZkplSyszR2l5OWYKSWxFc2JEc2hiOTBzZWJIRWZJZk9KZ2NacWVRZ0MwNjNEcERwQTcxT21KeTRhSDdvbVBQZGNsNDgyUTVXQy8xYwpEaTUzL2l4K3c4Q0dOaElRWHppZzh2S1IySlFja3ZXT2QvU2VRUDNGNkJhdm9VaVh2RlJFQWRpQ0V1TXl2MGZSCjBOcWdXdlQ4YWdidnhLQnlsRWpYVzRMNmVtcTF5OXlWcmI1MW83NjY1NWFUZTlZRlR3UUpSdC9iRCtLdjh6WjYKTE15aEkyNGw2cEJteUFRdTVmb0ZUaDBnRVNTWlptaWVJTUwwQXdJREFRQUJBb0lCQVFEWWtNM0xoUDRkZ213YQpYaWhJb3NCSmxydm1Sa0o3REtuRjNTMWc1MElIL0ZaMStVU3JXU3V6eTFveG1maFFIM2psR1NMd1lmMElFZ3duCld5NUp6K1VJUWxGSExoV1lnT3l1SUpDdnJNREk3bnUwcm5VYUhJRnBYZHNKVGZLMCtqbDZVMkQzVmFMNEtJazQKN1ZSbDl2RTBBdktVM0QyZWNveW8zcWN4SDFUM1N6TCtpelVvdGxZVVJNTk5yZjgrSCtMaWJlOVBuTk1QSkZzQQowUm9jVE9wUFFvNFp0NWI5d0ZRbE1TbFJEQTg3ZGZQWFhSQTlxRnZSZkkrYTgwbkdTbzg5eko2cHBieHlYdkJHCkFXNk5hbFdmYU83QVBkTHRCWGM3N05yd24ycWZ6UlRrckF3QjNpZCtBNXR1bGRNNHdJVmxmRVRCb0U5NDd1QjUKNFNQenFrZWhBb0dCQU9iYTZQL0xlWTdJSDFCRFVlLzhvUVFKUFB6ZGd5MTNTSnhTcGFud01QS0l0R2N3dFlFSwpNekJqTnYyQ0xpbUQ1OWpDR2dEYUxhdFdBZUpSV0dmUEdlTU1RQUYvbFVGekVWMDFEVTQzUitlZGFhN3dFbzVPCmlzb0psVnlLaWtDMTlIYWd0ajdETHNsQndmdlpQbnU1bGFoS3RWSlZoSkZJTW5RRUtpVmllelM5QW9HQkFQZXoKc0lJRk1kQkUrcnNSL0NVQ21sbFlGMEdvZWJZckJPZXRpM1lNOXpMZDFULzdlbkxpTitacVVpQU50Rzd0NGhuUAplSWZtU0l5dGtXdGkrdTd1MGZIQmhTN3NFemREZXNxM3RocWQ5WjJxaXRFSzZyYXlqZHAxTXdTOUFITXRSbGV0CmJES0dhQ2Z0bmpQQ3M2K0h2SlVONk9EUUgvRkRoNUQ4Y3kzZHFqZS9Bb0dBSkNKTHFnNGRQcjRRT0szdzIxRjkKbW5ZZnQ2eXNaYWR3RkJmVG1sL2dLWFpBVm82SE9tVndVYmlWMk9SUmVXb09GaDE3bUhxTi8yMTg2Z0cxaHJvaAo0U24vc3J4WGptRUdiTUpyREwwV1lpaC9iRVJqZ3liRURvK2xjMUMwQnlEejNNV1hBUWZvQU5Sc0dwR01lQzA2ClFaYy8vbDBvWE4waUdJcTJWaGV1RlRrQ2dZQWZPUnBGdVd2bkNkcmxHOFpCMEFzdXVlanNrTlVPdm10MjNLeFkKckJlNDVMZU53aUJVUE9tNDlLdjNlR0xISE50RVQ1K3MyYjFKWmxPUFNzSEF2bi9lVG51QVI2ZkFicFFhMjM5cgo2WDlkYVhMb0dNMHZUR0NQS2ZqTlh4bWdheE9UMTd0c3Z2NkFFZmJBSlluSzFYeFMrWmJpUjduUENxa2JBSWR3ClA2SEdOd0tCZ1FDdmZqNXRRVElaWmVKemo1SVZvbUxWYk00WWE4aERQd3IyaFRldmh0bzdXS0tXOFNNQmtSOHEKZG5DZVVWanZ5VUFTdFZ4K0hWdG1MV1Y3elNBS2xVZVdoVVIwYmlwUmpEeDhZOWtaejZKdGg1blJQVzNFTklsSAowN2JBV3FiK28rVHA0MFBFaTZXUVlYY2F1WFFxc0VsSWhJU08rV2NzUENoSmJhZXdsOGVRTHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVlhpbE5FekUvMEFYYmZOV0hTMWV0REFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURFeE9EQXhNekl3TkZvWApEVEkxTURFeE56QXhNekl3TkZvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1NiemhqQkRqVDBWRGtBWVhRcnIvbFgKYVF1WW02Z3F0L3RPaFRiOWFZZ29peExXZTRXTGpmL2hqaHNTcW5GTTR4WEJjQ2ZsOUkrSTdhZ1d1YnYxZlFXWgozNXhqN05ndWs1RlpNQTVFWTZPTGNTQUVJYkRjZnRPU2lLTEs5RUdINkRYNEgrUWd6RmFTYjM0eC9UT3VKNDJwCkd6TnpFdVJPN29nc1lpK1N6MDY3MEh6QnhSd0NBendZTFp3Zm1RZTZYWnFZUlZENy9rVFpHOE1DU2dFNERhT2EKYS9SVVQ3Mm9DN1hBMmpVTHpzNzZKYVZqZ2c2UVVzWkU5UkMxWUUzWnlteHRRNWtDczdsaWtIeUovYWVGVm5sVgpoMTQ2cHZGdWdVTGFOSkExR2xoZTRQZ2lJNUF6VlZwOU0zalFDNlBWbjBFZGdqem1hUE1KbFIvcTZyUVFUdFVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlM0K3luUm8xSldTemFsbWNHTApLTnVmcStYVWVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGTXd2dHFzKzdHanhIUFlrNGhuaTlSLzBtd1pkClo5QjFyMU1XK0MxLzFkTkJSTmhyS05nLzkvU051YUVhdmd0dWQzVVBNWUZZM2F1eFZrdVZ0V0s4dXhqUlVWYUUKcjRaelpPTHkrUG1ZNm9RS2tFemNUOWRNNlM1YWZ4T0cvcnJrNlU4SCthcU9UUGExM0tmc21BUGZqeG9vaVhNMApOZEtTeFBZK09iSHlEVDNrcjNtRlNVeEVwYVZVRllIKzJhK3hBSzR4UTNQV1ZLRkNiSlhNT2lLaFlRY1ZHNE9WCjNZYzRwREgxazcyMXdEbUR6Tng1U0Q0dWdpemdyeDdDVDFadVNLdGsxUVYrYndvQmMrZ0dBZGFVSHgvclNCSWMKQ1Voazc4bmN3YUthaHdvU2JOeVJlYU1rTVJqeFRTalMxNWRyYXFXTGRKMkNuNVZVeXQ5UmxkSWt4Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRUU9IMkg3MG9NMVVjTXBjM1Q3T1VKekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURFeE9EQXhNekl3TkZvWApEVEkxTURFeE56QXhNekl3TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5oa2MzNXEKMmNmaEhnZmJ3RVdqVWNlMU1PUXdDdEVOQzBwenBCQzRWNEQwZzFlWUdXRnpiWFVJQnNJR00rckRQdG01bXhvRQprNDBwYnJyTkdhZFU5b3IzUDBDRjRUaWNndUNyU2FXYlNLR3IwT3IvcVVhc0w1Q1BUemR0aU0zbkoxcEhsQ0ZVCmZDaGlJSVFQSkRwVC85Zm9Sb0c5NkxmM3ljQUxMV0hqNDNOb2xFQm1SczF6U1dVRmdaYi9FelpQTHJyN2h3d3gKUTNSSVB0Rzc0NGVNNlQ0YTlJR0V2SVJ6ekdMaklOR2NMbW92bVRTdUFWaGg1WVVOaWYzdUZDTy94MHpKQkhFegovSC9LVzNXb0dJZXBiUzNYclVPVytGWEhFTEs4ZklNMXRXTGVDcjZwR2JwZ3UxSHFWbVNMVkJxdkpCNG4rME83CkFZNUtTUWl1UGN6VHRjc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQp1UHNwMGFOU1ZrczJwWm5CaXlqYm42dmwxSGd3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWN4QzRkVUlRaWRkNTZZM2IKbTVUQkZYMGRveE9aak9TNnd4VFFCdHV3amNhSnoxWHNxVnlkVTJrYWJ1S1JiMHJkcWUwUnMzK09aMUFIRVd3Zgo3MEM2ZkZCT1F6VXAwbWgyZml0OG52VVFhaDdtYUU0UWVDOG9qbGt6bTlpOUV3bTRncVdLQk1JUGEyNkw5YzhoCldUb2pIdXB4eTlCTG85bjJrbGpkZWRZaFRZbUhEUWxyd1NGVnAwZEJRR1lRK3ZSOXc0eExiOUxZZEVvTjN2eFAKSlc0bjhOV1h1am5jd3pOamZSZG5hMTQxcmt5TzJlY2c3a2VmRURxc0xzdGxld1JVZklRN0xHZ1hRTzZXM2FsSwpLOVU3NUs3UFZFeXJtSnJEVTNDRlM5VkFYQklkbHZZd2hUVXBsMTZMYTgrMkNCZHl1U2czM1NBUWJCaGdFeEtICk0yNkRxZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMkdSemZtclp4K0VlQjl2QVJhTlJ4N1V3NURBSzBRMExTbk9rRUxoWGdQU0RWNWdaCllYTnRkUWdHd2dZejZzTSsyYm1iR2dTVGpTbHV1czBacDFUMml2Yy9RSVhoT0p5QzRLdEpwWnRJb2F2UTZ2K3AKUnF3dmtJOVBOMjJJemVjbldrZVVJVlI4S0dJZ2hBOGtPbFAvMStoR2diM290L2ZKd0FzdFllUGpjMmlVUUdaRwp6WE5KWlFXQmx2OFROazh1dXZ1SERERkRkRWcrMGJ2amg0enBQaHIwZ1lTOGhIUE1ZdU1nMFp3dWFpK1pOSzRCCldHSGxoUTJKL2U0VUk3L0hUTWtFY1RQOGY4cGJkYWdZaDZsdExkZXRRNWI0VmNjUXNyeDhnelcxWXQ0S3Zxa1oKdW1DN1VlcFdaSXRVR3E4a0hpZjdRN3NCamtwSkNLNDl6Tk8xeXdJREFRQUJBb0lCQVFERVZ5Q1Q2ODkrbEx2eQoxV2szeG1CRm5CbW9jZzdlYjc5MjVrWlBCWFFnQmJ2R2xyTXd3TkxvQlVoY2M5UlhocUJZWFJobUd4RG1YRm1rCkZNVGFGelU4RWVyS1dLOXA5bGlxRWNEWkNuUjBmTGtyQUo1UENaeCt4Z2xTZVloUGl4VWh6U0NTdlYyS0pyN3EKRS9NREdZUmlHdGNla1htK3NvM1VPbEFMS2dNT2lvR1VyOGw5NC93WGp3WGozYURsSjdzenpKeXdGS2pwM2hkRgpuYndPWm5YK1ZMZzQvS3lqbG1XWlNWTGJOUlVoMG9hTEhyRElubWptcUEwNHd2SjdlcnlBbWR6NC9tU3kxZkpuCjcvZllFaG1JUWliRktxenB0N3pvRVl4WDI2Z2NPTTVSZnJCQk4yd0ZiSmF1V3dXOGx3WklVeHcxSGhuaE5wSnkKNXRjaCtRTUJBb0dCQVBkZXV2OWVKZjZSdnE0L05JTW9ManRIL21STVlXSWZkYzlodUlmQkN1RDl3WXNNem5mMgplUk9RRy81aXprT2ZKUlhUUlFTMVVmSCtnaDliczFScVRQM3gyZ1VSTWxxNXh6T0JSK3F5YzF1NFdBcnZZK1VtCmRvdy9aUGVMcUtJSG56R3V1Qkt5aTcvNk4yUFhXZ0xWa0tyWXpES3VXL05SR1k5QXQzS1hNU3h4QW9HQkFOL3gKRHV5Nkp6RW15RjZCc05sbkRYMkNDbE1Wa0hoVHVXUk1FZEVIZkw1c2RONGVFbCtPSTNYbjVSU1JhdmQ0M2NYVAp6UFBKNFh2YkR3aUt6eEtIQVJqTDFwYmVZKysrSFN2QWtQTE5BWUViU0I2UGdDM3RNOFBiZHJRMnlPWlhzYktkCnYzNW5UY2MvTlhZUnJndVFKVDhJczdFZzBDRTREb0tRMmxZMXZOUDdBb0dCQUt5T05EdDIzV0liSUx4RDhzbWEKK2NUNGo0Zy9qNTcyK3lOU3MzcGZPc3QvdDhiYmhCdENuMnI2Rjh6Mzk1Sk1MWDV3QmJFbkdxYUlOeFRRenVPUAowMjFCakNnRXV1OTJzSEpKT0hXTFRkVXBYcUVpSkxqd2Y3bU5iMDBPNnU4OENkeUtXSFVTZjFISHBXUE1FVW53CjJCMlZaYnZrek5lS054NHFzczBJa3BEQkFvR0JBSTZWRGZxZG41eUU0K2lBVEpodks4Q3dqbUJPQjVrRlBiSGwKV1Nhc3pMajFsd2RoUURPRTdZRUJyL0tEa0FhVzl5VWc4SXA4REV2dXNzaXVrSjlzUTcrRThWRkhzWHVRb1VRZApMR3piS0UwS2tNV2NlbkZEYU1VWU02RVVqSjlVVUhpNFJaZDJzS2Zleit3bjM1ZlBKRmZZODRnZ3EwT3JURm5IClhxeXJORm9IQW9HQUg3dFBMSGFyWkM4Y29rRnNxN2tjUXduaWZUZjNKalFCSDJxMlFKTlMrVUZDOHMwYk9XTU8KTGN0NEpMSU9Sbks2cXREN1JrSUc5eDBVSVBpbjFqS0tLVW1lVllPT2h1aTA0cTBhVm11NTJFbUJ4U3lzOXRETAp0TzAwQkJ4NEpWSGczRGtUUndvZkhyTURiTFVOM1hCd2RDQ2h2TkpYd0crdjFiNUlkWno0L1A0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  enable-host-reachable-services: "true"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "hybrid"
  bpf-lb-algorithm: "maglev"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9091"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:

  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9095
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9091
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "38c110ea2a11b9ba30b33ed3b6fda061f5729930a44699a3b6394b353923aeff"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.0@sha256:ea677508010800214b0b5497055f38ed3bff57963fa2399bcb1c69cf9476453a"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.205"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: prometheus
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9095
          hostPort: 9095
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9091
          hostPort: 9091
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.0@sha256:ea677508010800214b0b5497055f38ed3bff57963fa2399bcb1c69cf9476453a"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.0@sha256:ea677508010800214b0b5497055f38ed3bff57963fa2399bcb1c69cf9476453a"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.205"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "38c110ea2a11b9ba30b33ed3b6fda061f5729930a44699a3b6394b353923aeff"
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.0@sha256:b522279577d0d5f1ad7cadaacb7321d1b172d8ae8c8bc816e503c897b420cfe3
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.205"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: prometheus
          containerPort: 6942
          hostPort: 6942
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "02e80876f82c3f9f89a91dc3bc15a2fe798224ea561d8c2c085e4036012cfb90"
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.0@sha256:306ce38354a0a892b0c175ae7013cf178a46b79f51c52adb5465d87f14df0838"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.3@sha256:018ed122968de658d8874e2982fa6b3a8ae64b43d2356c05f977004176a89310"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.3@sha256:13a16ed3ae9749682c817d3b834b2f2de901da6fb41de7753d7dce16650982b3"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
