---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRTW1JeVZ2WW9hUHdyWGtELyt4SHZHakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPYkJwam1zYzd4NUFQS0k3LzlwSE91cnBBYmtlNjJTcnBlR3U0bmVjNitIZHF0SApkZzVMUitRV1Z5aWRvejJOb0dvMFZQREYzdEtmdS9vTXZuWUx2VGVPcjVHaXRnN1RhcVIwWkxscTNoLytQdXRtCjg0ekVIMGJBOGloVXBuOVdUVTA3L2Z4SGVFRTE4dEgxN1N1UW1QUDFGRDdnMGptRXEveTlxdHJ1ak92SlFtNlIKZlhldHhNSzNVbDRiMCtLT1NTYkdKaDQrM2ROcDI3M3NTUnJPeFQ4c1JnbkFrQm1lRGp2RTdaVkpqUXdVQWdTZwowTDhwdkswRXFOYVVYVkdlLzhzMVBoNkVEa0NoNDFOWGFCcVlUdDkzRk9WVFl0SkZ2ZlZJMnNEbG4yWS9CVzcvCjhlRXFaUVBJODZ6cDZRV0tZdFBKYlhxYWgyZU5HU1hLSkV5bUx0RUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUU5SMG9iYkNkZHI1YXFrVmJGQm8xaC9TNUFOREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQU9qQS9teVkzZDF5UXlTTkpvSDcxRjVJUGF2cm9HOVZyYSt6SjBncjVJU1B3SzRJQjM2WEcKUFNVZUdQOGhUWUNmSGQ0UTdBa0hHYWZMWjQwQXdCeUxjdzVQNC92TE44a1gxQXg5UVFpSmxaNmNCbDE0b2I3ZgoxbTZDMnE1OUVHN2FaMHJzbkFpZWxlNzFSUXduemlnTnNLSVRzZDA2eGVjVDg3WGtJS3JXYTZkMmZkMFpYdTh3ClpYV2NrR0ZBakFSSHU3ODd3NDYyNDMxSXg2SWlpLzVZb3pmTDJVSW1TMDV1dXFQaHQ3MGRac0ZuTk5YZlJNT0QKditSdFBYMXpTOGR2MXF5ZkhIQmNQRy9TYVpnbXpYYVprOUMvYk9wcFJVcDVTcjBJYy82cTlzQy8vajRBLzdWbAp3UmhYVzZsVE1JS3V6cHRjK2hSTmxwdXBMTzBZbTFWSWJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQVENDQWlXZ0F3SUJBZ0lSQUlkUnpkYTlzR3llRmkxUWdxYnN3MWN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBME1ERXdOVFF4TWpWYUZ3MHlOVEF6TXpFd05UUXhNalZhTUE4eERUQUxCZ05WQkFNVEJISnZiM1F3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURGV2thVUY1c3ZnSmQyVjFUcDRDeXYKSWxIZ1NwYzZYK2d1dUcrZDdKQjZMZWlxNzVWcE9POWxPUmkyNE1udkFUMzB5TGlkK0c2UTJVR3EzdC9MNTVqegpSK3IyNUZxenMra3ZDL1VGblQxRnEwK0pJME9oV25NTHpNbk9WVGQxVFd5WHNjUkRvOGx3VHJwLzA0VGx1TUF6Ck5tMVNzWUJYZXRabHlOTnR6eDd4MmVoa2NTekM3enVjUSt4bFBEREJ6a2xZV0ZKREZvTTlqd0RUOVdWaUJrMlQKTysrNWFVYkFUT0ZtSXk5cDFWbmd5dTJZOVNtNVdsVlhYTWxIQWpRbUlFak5WWHF6Y0xDcmV5ckhuV0NsMUEveAozdnhFeGtTRmJoVndDZzE1WTBPV3ZQcjFxR3lFSWdPT3dvcFhudDlTZDY4aXRkcktWOTdBYmp4MkNmOTYvcjNQCkFnTUJBQUdqZGpCME1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFOUjBvYmJDZGRyNWFxa1ZiRgpCbzFoL1M1QU5EQVVCZ05WSFJFRURUQUxnZ2xzYjJOaGJHaHZjM1F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCCkFBSG5SY0ZmL0dQa0Yzc0lEQm84M0VoUnltVnRWcEkzdEhuMUI3S09INlRWTTQwSlVqbzRUbVNoV0dUODdsblgKa1Vpd052cVNRL2o4MTZHMitOa0VyK1FYcmdWUUFidXAxMWw0MjFncDErYkZhc1JlTW1PVUJnRk1FY1VqVCtMOQo1NUJVKzFVVVcxeDFFeWlXRFpnT3hKSmovY1d4d2VqYUJJTFIxTlcxeU5WQ24rZXkydkh1L1p3bCtaV0FmTk1LCmt1NkMyQ0ZtVVo3SGNxNXE3MVZscHVHL0xUU0Q1emp5cTFReE9TdGpFTXJ1TnEyMDRKSHkrVUdLb1lSYzd2ZlIKWUEzWWRyQnVKdHV5bEtBNWVxb3JBblNqaUVBeWtuQjFpb2RCajNFam5HMmpOczJJYVlOaWZuTjNSZkNMeXBvTQpXY0EraUVsQit0aGU5aXBIT1NqRHByMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFZwR2xCZWJMNENYZGxkVTZlQXNyeUpSNEVxWE9sL29Mcmh2bmV5UWVpM29xdStWCmFUanZaVGtZdHVESjd3RTk5TWk0bmZodWtObEJxdDdmeStlWTgwZnE5dVJhczdQcEx3djFCWjA5UmF0UGlTTkQKb1ZwekM4ekp6bFUzZFUxc2w3SEVRNlBKY0U2NmY5T0U1YmpBTXpadFVyR0FWM3JXWmNqVGJjOGU4ZG5vWkhFcwp3dTg3bkVQc1pUd3d3YzVKV0ZoU1F4YURQWThBMC9WbFlnWk5renZ2dVdsR3dFemhaaU12YWRWWjRNcnRtUFVwCnVWcFZWMXpKUndJMEppQkl6VlY2czNDd3Ezc3F4NTFncGRRUDhkNzhSTVpFaFc0VmNBb05lV05EbHJ6NjlhaHMKaENJRGpzS0tWNTdmVW5ldklyWGF5bGZld0c0OGRnbi9ldjY5endJREFRQUJBb0lCQUJBcnQ0REc5bVpNQ1IwZgpSc3ZySEg0MU43UkRLR1VXR3JaSlVvd0VLRXA2bklmMUhhOERoVW9zQllSbW91VThtdEVGNldxNFFvY0g1a09VCkE0NTNxYWExaStFekVPT01xRnk4aEJVenJ5T1lSK29hdzUzakJXNUFGNEVhcG5Lc0oydSttekJYcVZmVWU1K2gKdTAvL2RYQTgwM1JsS3ZrQURiVkZZVjJzRFFNUURRakxIODBVdThkRmd6MlluTUNSRDFwa3c4dnFVWlNtRXN2RQptNm53UGoxVXN0cHJBSG5CZ3RIcXY2eEtSdmlFaVNQUXkwRjJYU1gvSFh4WEV2S0tsOWFsbTRQTmlhUmd1UFFRCkpxVHMwODZIUENvWkk3bWtWSnJlY2p3enEyVFlaanRnQ0FyVVFGMDk0cDlYL1NkUTVid0hwc1Y3ckk0ZlVjTHoKREdvZ2hZRUNnWUVBMk5oOHgzWmtNdkhNQzlaWnkyeEZEaUJ2UHFQa09mZVlFd2hoWWJNVi9kQWVPWG9SL1U1RwpyV25ScEZ2TFcyL04yclZJYWNFdUF4NFFHd1pmakxncnlLUTNycjZwanNVK0pFMWNYdzR5emFSTXVNYUlNUWxCCm9lcnJiY01ZTjJBNk1BN1M3aFRNdTVtdFh2MkpoeU5FQ25YMmFMSHBUSEFCWDdMendBZVdDaUVDZ1lFQTZQeTkKV29QcHE0T1ovSEQwQkprOVYwYVdmODR5SHB1eUhkcytPejQrOWxsdCs3TkphMW9YNk9Ha2d5L2pnbzBMR3hKOQordUZPLzFvdVNsdCs3dzB6eXBESVE5VVN4RjdVOE9ScVFiVTJQMkRJQVVLdmN2dWxodW5BMlB1MVlFaEJQVk5yCk5taWxIM1hKTDYzY3I2WC9vV09OY213MzcvUEJvUkJHLzh6TUtlOENnWUVBays4dFFVNk5rUXZRYm9ydmU0NEQKbGwyZVJ4ZThUYWVTUWZuSHBjVnRUVmk4SmU0WGM3NEJEYkZSYWxXTmFIWGY5RU1VZ2NGZXlKV3IyeVAvNzVwOQpsRVlrRHJ6WUpDUi8vbmdnZW1EUFcrZW94NjM1bjZwMjhpVzRNNHVUYThQa0xvRU9lWW9MR2pqL1EveW41RiswCnZZWTRjcmhkTnQ1NnNYVCtRWlZyVU1FQ2dZQkZXK2dxNkJaS0h2VmFkMjNOYUtrZ01EMWhjc3JzM2NEYXJvZ0sKTHUramV1QUpERWlSRXRNSFd4VVVrTThUOEZVY0RCZEE5bzRENnA3Wk4vL0R2cFJxZTB1REZnMXVOQ1VFU1p0dwpVRGdFQ2hYQWVrK3MxVWxqcm5iZ29aNVBPWE5paEZEb2M2S2tpUFlKb2FLUEQ4WFlEOER1RFZWaHM1a3pENXR6ClQwNkFOUUtCZ1FDQmZMVzRJSFQ3SVZSb3dOSStMWkFrenpLQU54Vmk2a2VoOCs3VzNLNFg2OEo2a2J3eWw0bXEKM0wxRzF2WEFoQVdPa2NhSkE3YWFjclQ3TUt5amRPcjNWK0FwWGsrT2RpVkxIVXlUV3N0Ymt5dVZIeTZTbFVxUQplNGZncFp6VjVqSStrb0pzSEhWa0dTb0ZzQmtkb2NLaFp4QXJ4R0Y2OFRFYVpITXMzN09nbVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRTW1JeVZ2WW9hUHdyWGtELyt4SHZHakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPYkJwam1zYzd4NUFQS0k3LzlwSE91cnBBYmtlNjJTcnBlR3U0bmVjNitIZHF0SApkZzVMUitRV1Z5aWRvejJOb0dvMFZQREYzdEtmdS9vTXZuWUx2VGVPcjVHaXRnN1RhcVIwWkxscTNoLytQdXRtCjg0ekVIMGJBOGloVXBuOVdUVTA3L2Z4SGVFRTE4dEgxN1N1UW1QUDFGRDdnMGptRXEveTlxdHJ1ak92SlFtNlIKZlhldHhNSzNVbDRiMCtLT1NTYkdKaDQrM2ROcDI3M3NTUnJPeFQ4c1JnbkFrQm1lRGp2RTdaVkpqUXdVQWdTZwowTDhwdkswRXFOYVVYVkdlLzhzMVBoNkVEa0NoNDFOWGFCcVlUdDkzRk9WVFl0SkZ2ZlZJMnNEbG4yWS9CVzcvCjhlRXFaUVBJODZ6cDZRV0tZdFBKYlhxYWgyZU5HU1hLSkV5bUx0RUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUU5SMG9iYkNkZHI1YXFrVmJGQm8xaC9TNUFOREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQU9qQS9teVkzZDF5UXlTTkpvSDcxRjVJUGF2cm9HOVZyYSt6SjBncjVJU1B3SzRJQjM2WEcKUFNVZUdQOGhUWUNmSGQ0UTdBa0hHYWZMWjQwQXdCeUxjdzVQNC92TE44a1gxQXg5UVFpSmxaNmNCbDE0b2I3ZgoxbTZDMnE1OUVHN2FaMHJzbkFpZWxlNzFSUXduemlnTnNLSVRzZDA2eGVjVDg3WGtJS3JXYTZkMmZkMFpYdTh3ClpYV2NrR0ZBakFSSHU3ODd3NDYyNDMxSXg2SWlpLzVZb3pmTDJVSW1TMDV1dXFQaHQ3MGRac0ZuTk5YZlJNT0QKditSdFBYMXpTOGR2MXF5ZkhIQmNQRy9TYVpnbXpYYVprOUMvYk9wcFJVcDVTcjBJYy82cTlzQy8vajRBLzdWbAp3UmhYVzZsVE1JS3V6cHRjK2hSTmxwdXBMTzBZbTFWSWJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXNHbU9heHp2SGtBOG9qdi8ya2M2NnVrQnVSN3JaS3VsNGE3aWQ1enI0ZDJxMGQyCkRrdEg1QlpYS0oyalBZMmdhalJVOE1YZTBwKzcrZ3krZGd1OU40NnZrYUsyRHROcXBIUmt1V3JlSC80KzYyYnoKak1RZlJzRHlLRlNtZjFaTlRUdjkvRWQ0UVRYeTBmWHRLNUNZOC9VVVB1RFNPWVNyL0wycTJ1Nk02OGxDYnBGOQpkNjNFd3JkU1hodlQ0bzVKSnNZbUhqN2QwMm5idmV4SkdzN0ZQeXhHQ2NDUUdaNE9POFR0bFVtTkRCUUNCS0RRCnZ5bThyUVNvMXBSZFVaNy95elUrSG9RT1FLSGpVMWRvR3BoTzMzY1U1Vk5pMGtXOTlVamF3T1dmWmo4RmJ2L3gKNFNwbEE4anpyT25wQllwaTA4bHRlcHFIWjQwWkpjb2tUS1l1MFFJREFRQUJBb0lCQUZzZXh0dnBYRDVsYmRsWAo5NlZjeFgzT1psUU9iMFFvTXVkRTNkTmdVMEJSOXF0RjZibFZRc3N2Z3pWWG9qbFJMckloZmhVaG5ZNkFZd01uCmV5STBHb0RReUVWekFmOHl2dDYzMDNwZ1Y5dzhVbTQwVmlJVTQrRFZtZ29RK3pvM1F3a25rbkRIYkJZY0RvbVkKV2hJazVERVphdWcxY080amxLS1Y1dHpTN0RUQ29WN2FoNjQrcTV3VUJYSXQ5aDFaMHlnY1FqeTg2NFNEejJRKwo5ejdhUHJvT0xFWEo3S3BlL2swYTZpNkd5TFgxaEtKUG9sbTE3S0k1S0xMbFEwT2lUNXJrdkNmMkhmRG9lRTViCjJoV1hTSHFEZWlWRURaTFJzVjI4V29zak9BNmwxa0lJZHQyT1lOR0VEbHdvKy9HUnRuNk12UDFyR0ROSC83NWcKakZ2K0NLMENnWUVBL3FBZVdnOW1HMkZhQUVhYWpjT1VnUDFVOEU4RnFhR0lUMjNyVG81SGw1UllQTGJieGJwaQplK0lHa2dSRk8yd0dvdCtPb1dqbVdmY1dzczRFMTkxVWY5K2ZoSXAvcDk5WHI3bVBsZjUvTkNRcklIVWdWUW9XCmZyemFwRktvYnR6TzcySzBoTlZheEdmZWFGeExRbFpsRUJwRGQ4UFRkR3piQTk2YVFUNWhKNk1DZ1lFQTZBQ0wKZDhLaHVMbkJRWndFU0gzMkRDbFVUVUVGaTFuRFc2bUR4TFVoY1AyV1d2bHRRamtOWGxZaGZBYzlJSm9mNGt3Uwp3eExMdDJMb0M5cm1EbjNtaVdlanM3d2pJRU9SMUN3azBwNnBWUFdGeHk4ZDR0bmprZUtlV0dLNkU1cUF2dG1DCnlKNHhlaXRHYWdrVGRRS1BaWDlhMnExVWF1TXdtQmF6MmZNWGh2c0NnWUVBbkNPYitTWVFPeUlMaXJmQTlzWEUKUHdVYUhQS1lTbGtmdVhWeUlnM2xvUEg2MmVCWURId3JBRVN1T3NRYm9FQ3lJUlp0NUZUclRLZlVaM2ttUnlrVwpOQVB4VWRtTVJta1M0Rk10MVpEbWVCYmx5MVdIcWg0eGhTNVI5UW9xOXpDNFJOdUdUeDUyTnBKck5CdkVtcjFYCjQvUDNBMjQyTU9LL3V6TzU2K0JRdTNrQ2dZQXo0UU5PK1gvdWJlTlFSNUlSbjlFb2NRbC82UDFUWnZRdmlCMkcKSERicExGdTE1amJQYXpDWkdzdU1ENVpVdHdKUU9WQ3N2SVEvY3VlTzF4bEF2bGlSKzFINC9DWWlyZGxyUjUvSQpWV0JxTmlqL0hJTWpXalB3U0d1K09mMkFLcm1GYytBeCttWDMrcnRaTk1SY0V3Rjc0ZG13TXJoQTJxTGdMNXR5CkxsRGhod0tCZ1FEVmo4TWlTUFpuR1puQU5xOGtBMnNkZG5EN2xYN0NPMThpR1NrdTMydzV0U1FUOEthOVNWV3MKN2FibXVrRmhnZHgyME0rV2s1cjdHZUI1cEhaRzkwRy9RODlLRHZScnJ3QU9DRTJQbnhSUFp0cEZHUStTVU5xcwordlU5NzVVdjM1ZEhSdDBKQlEyRjBnc3BPTDMrVExraUdLelJ3K2Q4QmlzdE44U0d1bVk4K3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRTW1JeVZ2WW9hUHdyWGtELyt4SHZHakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPYkJwam1zYzd4NUFQS0k3LzlwSE91cnBBYmtlNjJTcnBlR3U0bmVjNitIZHF0SApkZzVMUitRV1Z5aWRvejJOb0dvMFZQREYzdEtmdS9vTXZuWUx2VGVPcjVHaXRnN1RhcVIwWkxscTNoLytQdXRtCjg0ekVIMGJBOGloVXBuOVdUVTA3L2Z4SGVFRTE4dEgxN1N1UW1QUDFGRDdnMGptRXEveTlxdHJ1ak92SlFtNlIKZlhldHhNSzNVbDRiMCtLT1NTYkdKaDQrM2ROcDI3M3NTUnJPeFQ4c1JnbkFrQm1lRGp2RTdaVkpqUXdVQWdTZwowTDhwdkswRXFOYVVYVkdlLzhzMVBoNkVEa0NoNDFOWGFCcVlUdDkzRk9WVFl0SkZ2ZlZJMnNEbG4yWS9CVzcvCjhlRXFaUVBJODZ6cDZRV0tZdFBKYlhxYWgyZU5HU1hLSkV5bUx0RUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUU5SMG9iYkNkZHI1YXFrVmJGQm8xaC9TNUFOREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQU9qQS9teVkzZDF5UXlTTkpvSDcxRjVJUGF2cm9HOVZyYSt6SjBncjVJU1B3SzRJQjM2WEcKUFNVZUdQOGhUWUNmSGQ0UTdBa0hHYWZMWjQwQXdCeUxjdzVQNC92TE44a1gxQXg5UVFpSmxaNmNCbDE0b2I3ZgoxbTZDMnE1OUVHN2FaMHJzbkFpZWxlNzFSUXduemlnTnNLSVRzZDA2eGVjVDg3WGtJS3JXYTZkMmZkMFpYdTh3ClpYV2NrR0ZBakFSSHU3ODd3NDYyNDMxSXg2SWlpLzVZb3pmTDJVSW1TMDV1dXFQaHQ3MGRac0ZuTk5YZlJNT0QKditSdFBYMXpTOGR2MXF5ZkhIQmNQRy9TYVpnbXpYYVprOUMvYk9wcFJVcDVTcjBJYy82cTlzQy8vajRBLzdWbAp3UmhYVzZsVE1JS3V6cHRjK2hSTmxwdXBMTzBZbTFWSWJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRVjI5ejZtdjRSWGhLZFo0ZDNGZzV5ekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93RVRFUE1BMEdBMVVFQXhNR2NtVnRiM1JsCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeTBiblVLWGl1cGpxeUdYaTMxU0cKWEh4SWdnb1EzTHJjbUlyMkVwTEF5Rjdja3BIdWg1dDVhb3VOOU1nSlo4NHdNdmJQNkVQRklScjlKL1NaKzUzOApXNk9JOXp6blV3Uks2Q0lQUHpVTVI5bmlSWXZJZmhJbkhmNzBBT3o5aVg3bkhGeHB3bmREbG5mekQ4OFJWbk9aClA5bHErblpQN0NRc25EUkxqV1hVTGR2Q3ArRyttdUErdk9SeHZmVzFtcHFPdGdmWHNEcG9iMFZiSnU4R1N3cUcKUkIxWWREV1NmZ1RLbkNJZnlPU1oxaGxRRk9YL011d1ZYb29LWkgwVHVBRkZkTk50SCt0U0puVFp3QVBpdlFCRwp1bGtvYXRvTXhNQnZPM1IxMjJZZ3pXYTYreTU2WjlIY1BaYmM1NytVeE1lVyt0SS9HQ092K3Ywd25XNzBlZTJ3CnZRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVRFVkS0cyd25YYStXcXBGVwp4UWFOWWYwdVFEUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2VuQ2lETW5UMVNoNXo3QzZwbXFrOC9QWTRrCmswZEtRSkF1dmIzTXJiZUhIT29tdXhLalk5LzVYTjFXaVF1d0czNXl4QXdiZkR5MUN5ZzFLeHR4VExZV2xqTSsKZ0l4WkNHZ1NXTlNVUGI0VThkNXRydndYQi9NM3ZhR3MzeTNnMDBHSXdBKytQQmhWb2tvdHlBWHk5ejhTRXR6UwpJaXdQRnVLb083bjR4UDl4WGdReE1BL3VHMnJJUlg2dU4xM3RyMTk2ai9IVkVtZ092ZElscHAvRjlPVHNZcTlVCktmK3phMWwrMzBPS0Q1MU9LSUhVNjdmSFRHdHlhN3pXc0dleU5CRGhzdmZFVmlTMVBCYjNPNlRNVytoUjRjMHAKb2F0bk15ZGpIUHJLbXVWUmFCQkxFTTJFaTk4WDk3QS8vNGt4Ylh2MzJ2MVVnYU5lMVRYWnVtTWNmclU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTBiblVLWGl1cGpxeUdYaTMxU0dYSHhJZ2dvUTNMcmNtSXIyRXBMQXlGN2NrcEh1Cmg1dDVhb3VOOU1nSlo4NHdNdmJQNkVQRklScjlKL1NaKzUzOFc2T0k5enpuVXdSSzZDSVBQelVNUjluaVJZdkkKZmhJbkhmNzBBT3o5aVg3bkhGeHB3bmREbG5mekQ4OFJWbk9aUDlscStuWlA3Q1FzbkRSTGpXWFVMZHZDcCtHKwptdUErdk9SeHZmVzFtcHFPdGdmWHNEcG9iMFZiSnU4R1N3cUdSQjFZZERXU2ZnVEtuQ0lmeU9TWjFobFFGT1gvCk11d1ZYb29LWkgwVHVBRkZkTk50SCt0U0puVFp3QVBpdlFCR3Vsa29hdG9NeE1Cdk8zUjEyMllneldhNit5NTYKWjlIY1BaYmM1NytVeE1lVyt0SS9HQ092K3Ywd25XNzBlZTJ3dlFJREFRQUJBb0lCQVFDclF0WjZCUGpMdXkvNwpuSk9URXhTTWNRMXB1ZTlRK0lJSVp2TkEzTEZkWDBhNG1naDc2Y3BXc0xMdDYyYTVOV2M0V09iN1NiV1kyYk0xCjZZZWVEUkhqWnhscks3MjlISjI3aTQ2Szh6ZWdoWHAwbTN0VWRCak8xZEZmd2tzdGYyUlphYWFVOTRSVERrWVQKS0tMejBqcm9KMVpSSkVMYnNmSi92RE4zTXJhYjFzeHN0TFpLTTBaa1VEdVgvZ1hKMXR6WmlmcTZkNUhkRktwQwpTMnZGbHVLTFVweWNVYjJHbEVLRUp1SWZ3aEd2T21uRElyZmprY3RhQTdLV0F5cXFnQ0NiWFlzRnZRcUQwTkdPCm1yMUdKSzN0OXd3QjNUOFlMMmtTTFNNaFVqNmFrbFdVYzI1VFpvMlZMZGcvQmg5K2F2VS9ldVhicTg2SHJUMFoKNzM2aUZvSkZBb0dCQU5QV3BOc2dONTd4UG55aFNGZTh6MnVBU0JMaVYzbFd2eWJiV2tTSDVjb1F1VkJhRis1UwpIdUZmZjBsUGVDYll1OXZXenFveTNhcjRoaVoreDA3RWdKMDl5SjNudzU2ZldTZHJKZExUdE9tVmczMURDOSszCkg5VFVnU0dnZVRpc2pzdWJJSitzaDFlRzVmbHpGS3BHM0hrL0ZqNHZra1RYd1Zlb25tZm9yVytmQW9HQkFQV24KV2c1c0RTVEozRUFadDJDeCt4OE55ZC83R3FYM2x0dFNqM1VIaXFTZzBzOWFQL0UzMGI4eEh6dFFRWVhzYU1INQpaNnY4eDZMcHFDa1ZWUFV0RjY3eDN1b21xVnk5UURLS1hzKythRitqMGxxSnJkWk85UEtkMnFKUFhadjJSdHhaCkxISlI5MUF5dVBmQ1hQS1E1ZGlZL2pYSGtucTBXYWJFS0VOTitkSWpBb0dBVkMvQVVta3FVWnMwSnhsOWc0akEKc2N0SVdXRGtQSStSNWVKVXJGbUpvOVVqb0dBOWxIUEVXL0sweGpDejRsUk56QjlCQUhpNGlXSzlCWDFxdmMzdwpBdzF6dGZWT1U3S21IcmxCVGRqZTA5bWNhT0tGVElJZFAxcTRldUdvYXpLQWlULzhKaGpOcktZcXJRamtGSXVXCndRU21WVTVZaGMxc3crWjZGWGR0dmFjQ2dZRUFoOE9oNWU2WnBRZGJEcUluMHUwS21MTUtLeHVnTXJHUFVrOWkKc1k4bGRLN2RVM1BSZXdNYWpNd2RNcTY4UjhQTWNjZmhJQkJvVlFWRnhzN2ZVVkZHa1kxallZMVVkTWl6UGp0egpBdVY4MGI2OGR3VTRhZ1RoSTJWU2UvblpCbVVwN0lYc0pwSmVXSmh2Mlo0MXVHbVVYZ3pRRWZEbVo2SmRHZW0zClJ0dEZnbmtDZ1lBRDQ4QmpTdWwzcE5CejNaMkZOM1QyRGkzQVFZTGx3d0NtOU40d0tTcFZPSUZuS1NDN2xoeTcKOEY2aVdmSVYxOVBQTkhHc3NuTkQvcENUTjhFSU1yNzhGTzBlbmJWYVcyMFB4YWlOQ3lweDc4M1pTRzBMdHNWTgoxWWpoOG13WFFJT0ZtUHRCeVliRVUrSjN4VVE4SGZMMk1teFpERmJMWmJHenoxU1BWSVBXRkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRTW1JeVZ2WW9hUHdyWGtELyt4SHZHakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPYkJwam1zYzd4NUFQS0k3LzlwSE91cnBBYmtlNjJTcnBlR3U0bmVjNitIZHF0SApkZzVMUitRV1Z5aWRvejJOb0dvMFZQREYzdEtmdS9vTXZuWUx2VGVPcjVHaXRnN1RhcVIwWkxscTNoLytQdXRtCjg0ekVIMGJBOGloVXBuOVdUVTA3L2Z4SGVFRTE4dEgxN1N1UW1QUDFGRDdnMGptRXEveTlxdHJ1ak92SlFtNlIKZlhldHhNSzNVbDRiMCtLT1NTYkdKaDQrM2ROcDI3M3NTUnJPeFQ4c1JnbkFrQm1lRGp2RTdaVkpqUXdVQWdTZwowTDhwdkswRXFOYVVYVkdlLzhzMVBoNkVEa0NoNDFOWGFCcVlUdDkzRk9WVFl0SkZ2ZlZJMnNEbG4yWS9CVzcvCjhlRXFaUVBJODZ6cDZRV0tZdFBKYlhxYWgyZU5HU1hLSkV5bUx0RUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCUU5SMG9iYkNkZHI1YXFrVmJGQm8xaC9TNUFOREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQU9qQS9teVkzZDF5UXlTTkpvSDcxRjVJUGF2cm9HOVZyYSt6SjBncjVJU1B3SzRJQjM2WEcKUFNVZUdQOGhUWUNmSGQ0UTdBa0hHYWZMWjQwQXdCeUxjdzVQNC92TE44a1gxQXg5UVFpSmxaNmNCbDE0b2I3ZgoxbTZDMnE1OUVHN2FaMHJzbkFpZWxlNzFSUXduemlnTnNLSVRzZDA2eGVjVDg3WGtJS3JXYTZkMmZkMFpYdTh3ClpYV2NrR0ZBakFSSHU3ODd3NDYyNDMxSXg2SWlpLzVZb3pmTDJVSW1TMDV1dXFQaHQ3MGRac0ZuTk5YZlJNT0QKditSdFBYMXpTOGR2MXF5ZkhIQmNQRy9TYVpnbXpYYVprOUMvYk9wcFJVcDVTcjBJYy82cTlzQy8vajRBLzdWbAp3UmhYVzZsVE1JS3V6cHRjK2hSTmxwdXBMTzBZbTFWSWJRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtVENDQW9HZ0F3SUJBZ0lRYlR4L0loZkwxM2lCTEI0ZlVYcW5WekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURRd01UQTFOREV5TlZvWERUSTFNRE16TVRBMU5ERXlOVm93S2pFb01DWUdBMVVFQXhNZlkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxnZldsNU4wYnZlaXJlSEpCM2xURUswZit0bnk5YlJKQmlmVWxEcyswckVrRlVvS2VYbQpOWnNXVmtLUW01dklRb2h3cXRrOXpXdzFjdU14WGtCck00SGJJdVdmeUZZM09jWExvTmxLdmxaTnJTTndJKzRCCm1qc2xhU2NPOVRveDZGYW5NMHhINjZ6aGNCaTRGOERTVmYzL0FvaHRvWi9yQ09FOVVwTXZUSVJONTVsTU56SjMKQUtBU3VFVjlFYi9qcjZjejVXbmE3czR3WlRadm5qLzc0WmxBcS9iZ1QwcHZabXYzTjNuQ2xiRkxlZjVLOGxQNQpGelVSZlR4Y1pqWkRmTXNzcnRhdEFBV1lUSzBEdHBTTmNmdDhxdlhNRGgyczFCSXYyRUxiUnpKZmJxRmVTeFZlCitIbkVTL0hQMk51WUtzWWs4SVEydktRdnFRS1ZmRTA1OU0wQ0F3RUFBYU9CdHpDQnREQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3SHdZRFZSMGpCQmd3Rm9BVURVZEtHMnduWGErV3FwRld4UWFOWWYwdVFEUXdWQVlEVlIwUkJFMHdTNElmClkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wYkdsMWJTNXBiNElRS2k1dFpYTm9MbU5wYkdsMWJTNXAKYjRjRWZ3QUFBWWNRQUFBQUFBQUFBQUFBQUFBQUFBQUFBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbU50bwppNkd3SU94bmdZL3pGUVZVcTVITk03R0NVMDRTR3dRK3ZLUlM4bnQxbFJQUnk1aDJ0MWhMQm0weHhjc0RHY1h0CldKTnZtRmdtYkl6MlhnYUl0SkhlWFpPdHpWZ2hQY3pQYzZhcFh1OTlRT3kwUTR6NlZiWHRicHJRdW92cVFwWDUKNlB0MDNmMkxYRkYrejlnTE9uaVZrT2dGMXNySTZzQVhNVHlBTjJvYlptbU9mWVRjaW10NnJoZnV0ckNZdjJtZwphQ3d2NVh2RTNOK0cyMWpqL2FyejdpVE10YlFTeDd3ZnBlcEdUQXpZc3hGWkZCRHFJZmVoQ0ZyRXUwdG56dmtkCjcyZDN2R2lJUzNWRFBpWENsVERybDhzTVBWV0VVWDBQMFp3VVdUdFFGekwzcEtOOU9yNHlXZEVFZzFOVFJtL1YKS3lKWkpRNWtyeGQ0YmFNaEhRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUI5YVhrM1J1OTZLdDRja0hlVk1RclIvNjJmTDF0RWtHSjlTVU96N1NzU1FWU2dwCjVlWTFteFpXUXBDYm04aENpSENxMlQzTmJEVnk0ekZlUUdzemdkc2k1Wi9JVmpjNXhjdWcyVXErVmsydEkzQWoKN2dHYU95VnBKdzcxT2pIb1ZxY3pURWZyck9Gd0dMZ1h3TkpWL2Y4Q2lHMmhuK3NJNFQxU2t5OU1oRTNubVV3MwpNbmNBb0JLNFJYMFJ2K092cHpQbGFkcnV6akJsTm0rZVAvdmhtVUNyOXVCUFNtOW1hL2MzZWNLVnNVdDUva3J5ClUva1hOUkY5UEZ4bU5rTjh5eXl1MXEwQUJaaE1yUU8ybEkxeCszeXE5Y3dPSGF6VUVpL1lRdHRITWw5dW9WNUwKRlY3NGVjUkw4Yy9ZMjVncXhpVHdoRGE4cEMrcEFwVjhUVG4welFJREFRQUJBb0lCQUhEMDJ5M3JzL1g3eTBKWQpxREduRUtnRHNFNnRPUUtxLytnVEpoNzdwQmIwakUrUitsSk9ieWljQllPRXo5SThnNFROQ2lPSXBOUHozbTIvClJjRmpndy94Ym5GTkcweTVTTG90K0pvV0hyczNvRGFUZjVkdWFENU03enZGRTNFR1dUR0FGaHFBTFBlOHZsYUwKNmhhamM1b0Zybm9nTi8yeDVacTVVa1YxeVEySTYwZFdOZU1pWGdDc2hLbURrckJzcDVYYjN1UU84dndkbDJjYwpBeW5tQkFMQkFsWTRpNHhNTzI1OFRCcEZIbFFoMGdLb29DdTlxVC9WbmhCSmN5SnlTbVVFN0xmbUJZcTExZWtnCkxRMEI1em85TTFoMkhtZjRrUmF1QkZwaWVqa3VDMElIeC90MldDTXc2a2Q4KzhDQXU5ZGhhSXY2ZUxOaU9WbzEKWVJDOEZvRUNnWUVBMDJlK1NpT1QwdzZXK2k1YlJpVklEd0Y0V2oxVVhIMU81a2ZwcHVDckZYVTNPK1E3WW1SSwpaYXZlZmtmZ1VPZXkycW4zYzBlQkthZW1kdTdqc0hOVlhRNkV1QkF5RGx4bXpnTzFsUjE1RVZkSzg3ZHgrVUEvCkZpNTJMaCtDMXVPeUF4U3c4cFBzUklENGpBcjRNM2Q2R09QR0ZUNzFjUHBqcVFsdWJLcUtFYjBDZ1lFQTN2WksKcXZINmlkWFRYMDdSY0pxUzZzaXQ1bnJyZGE2a0JHSkxyZHRxOFJkVmkyRmM0Q0k5V2xVYWphMkFkdTE3RnlHNgpiNS8vYmJiOWpDZWFPdzJpU1FBM2JueUFWWTdKUHpNYWtXU2xsaW5KeXZpbzZpMjV5UEtrbUdWKzE0SmRYbWc1CmdDcGE5TFF3V3RuL2Z6UXVtTkZDbi9IZEZZZTU5cGtVV0pwZE9GRUNnWUJuRGsvSlBJYTNnSWxBOUpBeUpjSjIKN2pTSmFSUlM4aE1nVnpZano2b1hEOGtaUFMxbHpaWW04aDNJV2FtVVJ4NzlVWlg3Y0lRYWxrdWo5dGl3RDhreApULzZLNi9vNjNmaVB2V2NyaGU2YThYN3NTQ1ViYUtKWVlkWGlyaUhPTjdsem53YVRlbURYRkRnVnJOTko0NWgxCndiT3liN3FlbExFNG1neG1sTXd4MFFLQmdRQ2dXMlVpZzN6YzY0UGxsVXQvQUQxUVRWcjlYRVRDMUFNMC8vbE0KSm5aSXhhNkoyMUd3QmhBNFN1TVpLTU12UmVmMG9CWjF1QTQrdTVDcDM4WEdXU3p4OGd6c0V2RStGNzdZRElvOApMYllHUlRIVUlIbGtTOVRHR1BXV2dkRHpjTmgwVU9PaU1WUlBrTlVDVXEyMnNESWZTTW54UFVQeit6VWRqY1diCllCSlJzUUtCZ1FDTm44dkNsREhnRjBqcysvMllZeEZCSUFiazNydTJFRDlnZUErL0FIU2pXZGtHTUZmTi95M3kKMWxyZXRZVWs0cHo4bGFIMDFvbGVvVm9MelJURkZRM0tTTjZSMlVSS1Jmc3g2U1FVZFNNcmphVDdrS2g3cFlPNApDeWM3NDFUSy81MklZSmlCUUJTT3R2bmR2SlUyMnE1TXRXdmRoMDFSVDZoeEREYUMyTGxObkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5rZE56SzRDUmg0Ym9iMmdRemJ2bXd3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1ERXdOVFF4TWpWYQpGdzB5TlRBek16RXdOVFF4TWpWYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLcVd4ZnpxVWxuYjZPaE1kQ1dJN0gKZ1hvazZxV3NNaTlubWJTZ2N0dlN1NzduM1dUaVBxR1pjYjdNcFdDelFpb21yUzJSbG9VN0UwUlRqS0dqWnlkYwpVQ3RCSWdwWm5RTmFRTnMwdUoyaGtlblJLYXhYYWE2ZlJOZC9OalM2NisybmswT2MwdEQxekNtZXFNTlZOd3F3CkRlaEhrK3JsQ1BPa05HZ3psQ21VT0xZRzJYZnRxekU0UnF5a2lsQkVNRXdQaFBNWDhyQmw4bFkxTERvVjF4aGMKTmNxVmZzdlhIZ3dFMFd5a01Ib1Y3SjVncVFCNFRQSUxrMnp5VzR2cXgzSkhDRE5Vb2NHT2FmK3pKUlRkRDRHbAphTHRoelBwUkd1S2x5djNQVEdGWk5QcFhac1FwT0h6eFVNMThWUGJnSGhDdFlsTlRsMUw2R3BzdWsyR29USnlwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVR3FXTE9sTktTMWY5Sm83cQpJZU01UDR6Ry9IUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2M4ajlDMGM3Y3gyQ2IweFhTVmI2cjlYZ2krCm83VllTSWk5YThaU3gzZk42QXQzLzVkeFZyQlpDejF1alVEUVFFN2lwOEt5Yk45RmNQTHMyd1ZDSjBEb2ZPa2sKUWt2bCtDbDBLK0NSNjhrbXNUbTZxZzFhdnNBc0JuV2xndklZRG1xbmNCMjZRbTJxTUNZOThaaW45L1FXSlBTVApvM2t0YytxL0ZqRHNpaGpZQTdod0hFNHE0aXNlQ2x2REhHQVBkYkJNS3hoNXhIcEtHMnUvdkYyMUFxVVhvNmNuCjJ3aENDR2lnZlM1ODc4dWIxY0lGRHNhajlWVzMrRHhGbkFnRTMwWmwxMVp3bFNQUzM4RkJiYTdKd0NKUTVCdnYKMjl4N2JlZmpMZGxWSTdkVzF5eHVPUGI2M0RTd00zWUROaHNtM3o1TWpoQjNIM0RROGFlaW5nMWt0Mms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeXFsc1g4NmxKWjIram9USFFsaU94NEY2Sk9xbHJESXZaNW0wb0hMYjBydSs1OTFrCjRqNmhtWEcrektWZ3MwSXFKcTB0a1phRk94TkVVNHlobzJjblhGQXJRU0lLV1owRFdrRGJOTGlkb1pIcDBTbXMKVjJtdW4wVFhmelkwdXV2dHA1TkRuTkxROWN3cG5xakRWVGNLc0Ezb1I1UHE1UWp6cERSb001UXBsRGkyQnRsMwo3YXN4T0Vhc3BJcFFSREJNRDRUekYvS3daZkpXTlN3NkZkY1lYRFhLbFg3TDF4NE1CTkZzcERCNkZleWVZS2tBCmVFenlDNU5zOGx1TDZzZHlSd2d6VktIQmptbi9zeVVVM1ErQnBXaTdZY3o2VVJyaXBjcjl6MHhoV1RUNlYyYkUKS1RoODhWRE5mRlQyNEI0UXJXSlRVNWRTK2hxYkxwTmhxRXljcVFJREFRQUJBb0lCQUNId00yenI3eTRZZDVQbwpXbklhNEhZNmtaampEckdDaWZ2QWVzWXYxZTQ1Y0tQbHFJSlcyTHNZbUVvdkc3MkpSQVBNRm9oOSszdkVJem9XCm4rNzhWRlFhUE5RZ2ZqazVtUmtoS1ZSdjRqM3ZjSWVOZ2dYMWRiL0lTSXBPS3BCdStCS0xEOVNRWFZ2OFA3QUoKTlFUdFBjWHoza1UyV1N6WHplMWV0V0NGM0Z5c3dqL1k2bEZFdFVlK0FRbVE1NHZBZTBoTk5pRTk1VjRaTlJ3eApXcTN6cndDVTF1Mkd6QWR5MGxQdnVWY3NtU2YyMHg1NGZIZWFZY3VWczhnU3ZyekE4Y0hoUEJ2LzdQNFJPQi92CnJYR0ZhSThQeEZaNi93SkxjVThtYis4eVBYZVFZNllDQlpjZ04yd2xsdlJNbDU3c2pNdENnNTU3ZlNoR3JyOFoKNVQ2REYzMENnWUVBN0VxRDgwWTZUMFM4Nlc2eWpUNlVIVU5RVWVXVitteGpZZjdubFk5V3huWSsvajZOcFlQKwpWR0dtSW52dkhMTnhUV3U1NS9LbzVDaDdiOWtjYStiNVZoaDhGdnAydDk5Q3dvUDBiUkU0Qys0S1gyZTFlV082ClRVMkJNa2pnalZsYnFKVzFxK3p4cHByUmRHbDNRQks1aXBQUFduWFRzVUlpNzhxYUllbllPWHNDZ1lFQTI1RFQKNUtpVlUvVUFReTl6OHNjWXNkNjg3MnV5TzJ2cFBqY1kxd1M3VDlEdGpLRGtHUC8razZESjVmUEdHcGNJK0xWbgpZMWxUVUllTlNRZDF5Qnloa2I5bWZKQy80U3JrTWtPbXZxeVdyckNxb0FraERrWkMyakJLWUU0aDBzcUJuQkFxCjBWaFhrb1Yvb0NCaDJ6T21FMk5xalN2aEs2WXliUytSckxaYVR5c0NnWUVBeUduRFZQbUJ4MjREMVBJQkcyK3kKYk1lRlBwRStEZk1Vc0M5bCtTSmtkVndodmI4TW9SQTlEUkR0dWwzbnh5NGpzWWpuVzJZai9iQ2dVWk9TV2FyRQpYRlBVSENFL3hHRG0zTmpTM2hjMnRGZW9FSmVFQW51bHJwOUlMNEJFaFY3L01SUVp6TUxoaTIvUXE2NHdhUFg0CnpTTGxRbEtoeEx6VnFSRHNma3M3RERVQ2dZRUF5MSs2NVhIQjM2SndPOHNZZXlndmw1SFpMMnR5QzloSWszZzEKYWZUWUMzWmFrb2YwdjdOZSt4OVQ0OHVKRTlnU1YweXdGellHRmZGNHpNdzhMTDlZYU1nQkJpQ05tdU0vdTg4dQpCQytZNHZhQkZQdGZ3dmtSczBoSG5DekM1NXpyc01MSTVtQU52WW9xVFFleG5IaWF2QnE1OTBsTnFFQ3BOTGw3CkZaOVN4MEVDZ1lFQW5rMGw3OVp3MGJXMDQ3ckE0c05LWjN6V2owbmlKUjM5QWxFUXhXdENWR3lDUmp1amFXcEcKS2x0YlROdU1WRUxIQi9nVjZQZTRrZ2ZVTERDR2psNW1uelBJVC9mcEJ0VkZDd2JlMXZRQk5QdUw5enhrQjJKdwp3WkJUcFFhTGtsUkJJTmNSQUlHM0hVaUVWTUFUNTlKNldXQWRZeHVsc0ZLbXVVK0JlUFkrQm04PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5rZE56SzRDUmg0Ym9iMmdRemJ2bXd3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1ERXdOVFF4TWpWYQpGdzB5TlRBek16RXdOVFF4TWpWYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLcVd4ZnpxVWxuYjZPaE1kQ1dJN0gKZ1hvazZxV3NNaTlubWJTZ2N0dlN1NzduM1dUaVBxR1pjYjdNcFdDelFpb21yUzJSbG9VN0UwUlRqS0dqWnlkYwpVQ3RCSWdwWm5RTmFRTnMwdUoyaGtlblJLYXhYYWE2ZlJOZC9OalM2NisybmswT2MwdEQxekNtZXFNTlZOd3F3CkRlaEhrK3JsQ1BPa05HZ3psQ21VT0xZRzJYZnRxekU0UnF5a2lsQkVNRXdQaFBNWDhyQmw4bFkxTERvVjF4aGMKTmNxVmZzdlhIZ3dFMFd5a01Ib1Y3SjVncVFCNFRQSUxrMnp5VzR2cXgzSkhDRE5Vb2NHT2FmK3pKUlRkRDRHbAphTHRoelBwUkd1S2x5djNQVEdGWk5QcFhac1FwT0h6eFVNMThWUGJnSGhDdFlsTlRsMUw2R3BzdWsyR29USnlwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVR3FXTE9sTktTMWY5Sm83cQpJZU01UDR6Ry9IUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2M4ajlDMGM3Y3gyQ2IweFhTVmI2cjlYZ2krCm83VllTSWk5YThaU3gzZk42QXQzLzVkeFZyQlpDejF1alVEUVFFN2lwOEt5Yk45RmNQTHMyd1ZDSjBEb2ZPa2sKUWt2bCtDbDBLK0NSNjhrbXNUbTZxZzFhdnNBc0JuV2xndklZRG1xbmNCMjZRbTJxTUNZOThaaW45L1FXSlBTVApvM2t0YytxL0ZqRHNpaGpZQTdod0hFNHE0aXNlQ2x2REhHQVBkYkJNS3hoNXhIcEtHMnUvdkYyMUFxVVhvNmNuCjJ3aENDR2lnZlM1ODc4dWIxY0lGRHNhajlWVzMrRHhGbkFnRTMwWmwxMVp3bFNQUzM4RkJiYTdKd0NKUTVCdnYKMjl4N2JlZmpMZGxWSTdkVzF5eHVPUGI2M0RTd00zWUROaHNtM3o1TWpoQjNIM0RROGFlaW5nMWt0Mms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRWjR3VTJlQ2RqUzBhVWw5dWtWSzVKVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURRd01UQTFOREV5TlZvWApEVEkxTURNek1UQTFOREV5TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpGWUprUU0yMTZzOHVBZGIKQk5TM3gzbm82V01yTjFvQmpiRmYyMlN5UTcwMXdiNGthUEc3cDM3Q2s1dUgzU3h4cHZoSUlGaFpleHkvVkJNVAp1OUNFZnhMa3IxakN6VHZMTjk3TW13SGwvNFJUK0dWZ1hycHlJK2U2dHFDZk1MOXJIeWxSSjZHSEZWYVBIRGQyCmdWVGppOXhtZG55ZXcrRUJCVGxiUnlqUWVCNGhCZlhmNkdTd28vbnh1Z2tvOHNqdnJXK0xXY05DS1RseTBIOGQKc1dJK3pCL2xwOU1vRlkxUEF2YmVqRGxZb0VzYjFsaVZnUzh5T09zNGtXVkgrWERXTGF6TVczb2MyRlBJUkE5dQo5T1U0ckMrU0pDTGNnOUlhL0JCT2dYck9GZzBlR0VXcGFiS0VxM05TRzJ2OGZPNm1ieDRiRTdnYjl6ZnpOazFuClJDOGZ0UUlEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWFwWXM2VTBwTApWLzBtanVvaDR6ay9qTWI4ZERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSkJCcEliMWVQZW5Zb1VqbVVHL2l1ZlVOWVUraWJhVTJKOHcKQnFiNjNpOUtuc29xUmxmWkdGcHRJT0dPeHdENjZwYTcxZUgzS3hwTDhiZUNwWEJCOFIyenFkcld0MGFwMmp4RwpkazQ1MGhrVTg5cER4SVUrL0M4TTJxVUU2SjNWYnpsNXQ4MThGL0plUS91ZzVPS3hRclRaUCtlcUJyZmVlblFtCmRGSEw5YkZObnlLR0NUVlNKdnBFdkJXNDlYTGx0Uk91WHMrdzVPMm45UnV4enZwSlMzV205b1dGWjk1M21ubEwKNjIxaFJaenJBV0NSdUJaQ3hzUGJMR3owN2lqci9OSXVoQWFXMjZOclMzNUNtYlg1dDZnNjVXa040T3NBeDFzaAo2Z2NIMGJsaW5yQi9oakNINFlQMXN3R2RCUjI3RXZHVWR4cWJlaERGd1YrMkZFSThxNWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekZZSmtRTTIxNnM4dUFkYkJOUzN4M25vNldNck4xb0JqYkZmMjJTeVE3MDF3YjRrCmFQRzdwMzdDazV1SDNTeHhwdmhJSUZoWmV4eS9WQk1UdTlDRWZ4TGtyMWpDelR2TE45N01td0hsLzRSVCtHVmcKWHJweUkrZTZ0cUNmTUw5ckh5bFJKNkdIRlZhUEhEZDJnVlRqaTl4bWRueWV3K0VCQlRsYlJ5alFlQjRoQmZYZgo2R1N3by9ueHVna284c2p2clcrTFdjTkNLVGx5MEg4ZHNXSSt6Qi9scDlNb0ZZMVBBdmJlakRsWW9Fc2IxbGlWCmdTOHlPT3M0a1dWSCtYRFdMYXpNVzNvYzJGUElSQTl1OU9VNHJDK1NKQ0xjZzlJYS9CQk9nWHJPRmcwZUdFV3AKYWJLRXEzTlNHMnY4Zk82bWJ4NGJFN2diOXpmek5rMW5SQzhmdFFJREFRQUJBb0lCQVFDaDBoMC9YMWxHVVJFRAorS2RIV3lLejhjTFhXYmIyM2V2UEI4S1BIOTdoTUczcklpYjVpVDhBZGEyb2NncVZ5TVcwNG5sVVRFT0k4UXBBCmpkOFo1UmVZL3lCbUVSZ3Nxb2JVbHpoWUpaZTgxRklmckVFMm85Y1N3a2ltcXV1SEVvREdLOVZlV2xoOU9KQ2IKV3YwWmpWMnEvSCtVcERxamk0UmdXNzBDekxyVDlEWDlCZUhENlRVZExITzVIZ0xHajNPMExPSFNwanVuMFJRcApXR09icDE1NEZjQnc0Rms4RXYrbWdwMG9CWWxCSmRGV1E5bWlXdXA0aG9CZy9NMENLZlZWL3dEaDRXem5obStyCjNJQVQvUjVCWWgvcmluWkhtcnBGcUJoQzdvcG1oTXZPMkpGaHdpdHJzb0F1emtUR05maTFwQUM0ZUtRRFoyNWoKajBqcGJZaWhBb0dCQU9vcWF1Slg0Qm9sYzRpLzhaOHpZSGlDQWU5WWtuWGJiUTNBNy9VQ2RwMWtIdHBxNHcwVgpqcncvMW1jN2pkVkFqVWNFcitmdCtVQUpaS1ZNRVlHSDBQTVI4bzlNS0FhdHdJVDFPeGNEQzlVWEV5UER3Qm1iCndLT0tGMEFkOTFYSjd6ZWo5WmNsQ3FPbzIyYm0wQmY2NlVBRjRzTDlQRDYrRXhzcksrUzdwWUo1QW9HQkFOOWoKbEw0MmdxaStFN3hTck9uWUdWQVo5WnQrZGRFTE01ak9JZHNOQy95anp5VDdmL21pZW9jT0VjWWVObHhjRjFWZgpuQVdWaEROVG1oVnFudWxXRjNqc0lLUmU5clF0bTJhSXZaLzRuRkdqL3RDc0lIclFNS3VENzJPVHhoZFRJVHBmClIyVGU0R09yL3BhemNmUXpYVUh1dEsrYUxjOTJIeS81Z1AyQzFCZ2RBb0dBSW5ZOXByUUNFamNDeXRSY3plNDAKdTJkK3UyZlFuakc5MmZGVUh6M09rUmxFQlNjSDVVd1A1cHFLaGtUWWVkTDNOOFZ6MGZGTzVtSzdnaXd3dzF4bQpudTg4UUdTWDIydkUwb3g0dHNsRys0UmExNytlVE9hRU1rMUhZTE5JVEVMY3h0YUZkVW9KUjg2NUEycmlvelRWCkVRd010RitxZHgxb0dHNkJGamViZ3hrQ2dZRUFuNkdaZVJPYTZ0cHBYL24wZG1abU1FZGNxM0VDNEE4UkgvQ3QKWU10QjlaZFpQeVE1bnpuc05QWm8zUnBaM2tZd3BtRmNMT0ZiUnhKRzJXY0hoOVp0ajR1dEI4aVVvc3kwYitEbgpJSm1YbXYrRjU3Z1l2YXBvSFNoNnVMMndvSnBXOUUrQnhTTS9WZnBpUTI2WHo5bWttcWpwbFZLbnljaXZJS2s2CjgrMjVna0VDZ1lCZHM5bm8zRDRlbmtJbFU4U3lDamtqTmg3UXpMWEM3M204c01rQm9DenJ2cFhPaWIzOHpnSEQKaW9zZjhQblQrY2xaSlRmTW5LNDZ1eVZqVTNSTXVFZHJKbVFVdytHY05LNDF6SXM5eHJnL2R5dWhkWWRkbm5xbwptUE0xaHJjcXllblZ3N3RXZXd4K01EdVZVVHpUSmZ3ZW4wOTBFZ0NnR1NiK044RFZjSFBLNXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5rZE56SzRDUmg0Ym9iMmdRemJ2bXd3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1ERXdOVFF4TWpWYQpGdzB5TlRBek16RXdOVFF4TWpWYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURLcVd4ZnpxVWxuYjZPaE1kQ1dJN0gKZ1hvazZxV3NNaTlubWJTZ2N0dlN1NzduM1dUaVBxR1pjYjdNcFdDelFpb21yUzJSbG9VN0UwUlRqS0dqWnlkYwpVQ3RCSWdwWm5RTmFRTnMwdUoyaGtlblJLYXhYYWE2ZlJOZC9OalM2NisybmswT2MwdEQxekNtZXFNTlZOd3F3CkRlaEhrK3JsQ1BPa05HZ3psQ21VT0xZRzJYZnRxekU0UnF5a2lsQkVNRXdQaFBNWDhyQmw4bFkxTERvVjF4aGMKTmNxVmZzdlhIZ3dFMFd5a01Ib1Y3SjVncVFCNFRQSUxrMnp5VzR2cXgzSkhDRE5Vb2NHT2FmK3pKUlRkRDRHbAphTHRoelBwUkd1S2x5djNQVEdGWk5QcFhac1FwT0h6eFVNMThWUGJnSGhDdFlsTlRsMUw2R3BzdWsyR29USnlwCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVR3FXTE9sTktTMWY5Sm83cQpJZU01UDR6Ry9IUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2M4ajlDMGM3Y3gyQ2IweFhTVmI2cjlYZ2krCm83VllTSWk5YThaU3gzZk42QXQzLzVkeFZyQlpDejF1alVEUVFFN2lwOEt5Yk45RmNQTHMyd1ZDSjBEb2ZPa2sKUWt2bCtDbDBLK0NSNjhrbXNUbTZxZzFhdnNBc0JuV2xndklZRG1xbmNCMjZRbTJxTUNZOThaaW45L1FXSlBTVApvM2t0YytxL0ZqRHNpaGpZQTdod0hFNHE0aXNlQ2x2REhHQVBkYkJNS3hoNXhIcEtHMnUvdkYyMUFxVVhvNmNuCjJ3aENDR2lnZlM1ODc4dWIxY0lGRHNhajlWVzMrRHhGbkFnRTMwWmwxMVp3bFNQUzM4RkJiYTdKd0NKUTVCdnYKMjl4N2JlZmpMZGxWSTdkVzF5eHVPUGI2M0RTd00zWUROaHNtM3o1TWpoQjNIM0RROGFlaW5nMWt0Mms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQVB6UDZmNFJBMzRyTW9RN3pydXFCQnN3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBME1ERXdOVFF4TWpWYQpGdzB5TlRBek16RXdOVFF4TWpWYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEU1N0RUsKOVIvVDFXZEJsZU9YQ25EY1RTR2VpcWdxRVYzRXFJbTdVZzBTZjRiZzFLT1RPUnJLYzlNZXpGT0RDMTQ2REtJUAoyNkEzQkthaFZXN2dGS3VNYWd2K25Ua01rcmpvK3dhT0YwRUtzN21kUGFXZmhDY3ZHbjB5eWFla0N1anNiQTNxClZOQ1dHbStKTzExemV2VTUvQ0RldVBqR0J4Qm1rSUU5Z21relpvQ29WU2pPKzBSVWlGNUhCeHlXK0hOaEVEY2kKSTlTN2RQYjBPNDAyUmFPRWQvZlZEa2ZZOFlzbUZhQXg4dDRTbFgzbDJXOEVjZ1VIRlY5OHpQSmhYUzhmSnZKUwphcGF2aXRvS1ViZks5UmV3U2FUeTlHdFVmZU9MQkRmWC92VTFveWVTaFRmTEx6OHZiUDhOWGxEa2pEVC9DVzFiCnFHWG1rNmZDeU55S1hJcGpBZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGQnFsaXpwVFNrdFgvU2FPNmlIak9UK014dngwTUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKWU0vK0N0RVhNbTNFWGcKc09YKzlKMERYNlFpTFBBR3d2RUlTQWVxYnJSOVNvKy9yQVh3aXg1dUhCcmRaRmhLKzhSa2VvZUZIandnZ0dvNgpaNkplNWJ3bmF6ZlRYdy9paHc3WEJPMlNPbjdMSXZmb2k5QlI5T2dZcytSalNHSTBmbWNoVi9lbVZJZGRCNk5BCmZJbWVUWmV4dWtjb0lKdGh4RyszM3psRi9YMiszTDUxem1MaXg5TjlIY2NkR1lKTG1sUTAreXdqSEZ1OXA0QnMKekNmYmxaVkZGWGJGVVZ2VHhTVTQrQTcrNXMzaC9HbnlXeHF0SVBMWFFVZllkTFRSN2graGRRZE1uOUkyWWR4UApnVHdmUWJUUEdXOXlyK0hIQmZGODV0bnJJdmc4QU40RDRNbmpFTDl6TWV0SUxFS2lybnhoWGUxUnZPQVNNVmsvCkJtQlIwUkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGtyUkN2VWYwOVZuUVpYamx3cHczRTBobm9xb0toRmR4S2lKdTFJTkVuK0c0TlNqCmt6a2F5blBUSHN4VGd3dGVPZ3lpRDl1Z053U21vVlZ1NEJTcmpHb0wvcDA1REpLNDZQc0dqaGRCQ3JPNW5UMmwKbjRRbkx4cDlNc21ucEFybzdHd042bFRRbGhwdmlUdGRjM3IxT2Z3ZzNyajR4Z2NRWnBDQlBZSnBNMmFBcUZVbwp6dnRFVkloZVJ3Y2Nsdmh6WVJBM0lpUFV1M1QyOUR1Tk5rV2poSGYzMVE1SDJQR0xKaFdnTWZMZUVwVjk1ZGx2CkJISUZCeFZmZk16eVlWMHZIeWJ5VW1xV3I0cmFDbEczeXZVWHNFbWs4dlJyVkgzaml3UTMxLzcxTmFNbmtvVTMKeXk4L0wyei9EVjVRNUl3MC93bHRXNmhsNXBPbndzamNpbHlLWXdJREFRQUJBb0lCQUh5TkU0TUo2Ky9yVlZ6agpDZ2xMaGN6MVloUWt5N1VlMUFyR1I4MUtxN05wRk5uVkY0ejdKWU1EVnVmRzNTK2diQTYxck1iM3Jjem9WRWo1CjhOR0hiSk9kdTd6eUlmZndidFNPMlRNUFV0YWozQ3ZsZDFNalVwSHpmbk8yUERSTXdlaEZsM2hUQTdmanNHdjMKWFVJb2NWWUdudkZMWFF6czRpbmRMSzdocnExaDFYa3U3MmFsU3FPUENZcW45QTVIclJrWWUvcmRWQTZhbDZDNwpUclJMYi9BUTJLWGs3YjJYcnZsSDlIMGZETWFpOSttTzBVbDhybHYzT0ZSaW1ERnorYkJYK0pKNFlUOHQ2Q2JECjRFTzJpTDFSdFlhUWVNOFZ4bFdoSGNiYzFqL0hjeVlQcWY3RnQrVjVESjZnWDZ4ZjN1N2sxMmxEV3V3ZDl1WEQKaTVZNXl3RUNnWUVBOGhvTGJQZ2FsTmoxY3BXTHEwMGVCNTFVbytneW1DaTc0OGtabnE3elFySkRRNFNVZXNBeApKczBmdW1YOHBsbGdWeGFNaStVNFQ5OU1ZVWdLUWxGa2dTdlFZWUxiL25NZm1jeVc4OFB0WDRJZnNacEZYc2xOCk1QZUhZdDdHalA5cEN1MGJYNFBSVzFEb2JqY1pjZ3pJZmFJU3haOEMvTWF4dmdJckk0dEhGZFVDZ1lFQTNsMUwKeWFCS2hGN3B5UitJaVRPQ3AraHJCdmFwbCtDMnRsYXh3NVZLSHBUL1FJSzRrRXhzR2ZKemwwRDJ5UmpyUzNNSApScE5ya1lsMmpRSWtoOVRNU1VDdENUL3U2Y0Y5V2taTm02cmRBWDVsK1lTS3dNZmdKYnVKaytzZG40ZEl3cWFwClE1dENnL3JsdlRZMXI3SDlkL09nUzZDY2hPRjFvRWlSS0F4WUkxY0NnWUFJankwcVBCZE1mZU1ubXV2bU1ZTEgKU0NPdTY4Mm1IWUtQQ2hRU3pTS2lrQVRheFR3dW5zN2VEVkI2MlpJMkcyRFJrMldDcUtiMkEvSUNXbmFxWTVCSApGTko0TUJVeENNYnNQQlIySjg0am0wa2RrVk8waHk5b2RNZmZrZnE1RDJxYVRVbXpkY2lZRHVNNHlrL20vVmExClFsNmhoLzZtQ3l4TGlHNFlBcHVQeFFLQmdRQ1dPOFpXaFJ1VGIyVFlZNXVseHMyQmovK3ZocnR5UjNwcW13d2oKTGh3VHFXc0ROTTVwZjVpUnQwTHRjQkRNTVMvWG0vSFFkdzE0R0wybDYwcXZFdENxdFMyelVDU2tmZnVwSUZLUwoxOC9Wa0lacEhHbDZjaEE0cmduM2pDUkpnZWRneTZVVWJqTjBZL0VQOHk0MmREVGg5QkhheHJxNDlISzZSZ3o4ClY4cThwUUtCZ1FERzc0Tm9tdDBFZCtvUWdmeld4WHhYOTR6ODdCNFZ5RjE0Wm5WSGNNOXFYNExtNnVhUDNkZjMKa0dCb2Fqdmcvb216Yzd4eXlvQU9wTzJWNjNaTUIxdS9Rc0piRzBzWmwxSTJ3TytBclp1WWVvTUJjektUbDVlcgpjZXk5ZGUrR0gwRlYxdEk1MW52Mm9kSGlKMlBjVmdHZDMxamhUaWxjc1lFME1jdmJxQ0dvNWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  enable-host-reachable-services: "true"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "hybrid"
  bpf-lb-algorithm: "maglev"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9091"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"

  enable-envoy-config: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:

  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumendpointslices
  - ciliumegressnatpolicies
  - ciliumegressnatpolicies/status
  - ciliumegressnatpolicies/finalizers
  - ciliumenvoyconfigs
  - ciliumenvoyconfigs/status
  - ciliumenvoyconfigs/finalizers
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumegressnatpolicies/status
  - ciliumegressnatpolicies/finalizers
  - ciliumenvoyconfigs
  - ciliumenvoyconfigs/status
  - ciliumenvoyconfigs/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
# For ingress controller
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  - ciliumexternalworkloads
  - ciliumexternalworkloads/status
  - ciliumidentities
  - ciliumidentities/status
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - '*'
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9095
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9091
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "3a44fa91042ee15b2d49b9b387e2e61467cabe274c107278355d72668d6711c2"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium-service-mesh:v1.11.0-beta.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.235"
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: prometheus
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9095
          hostPort: 9095
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9091
          hostPort: 9091
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium-service-mesh:v1.11.0-beta.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium-service-mesh:v1.11.0-beta.1"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.235"
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "3a44fa91042ee15b2d49b9b387e2e61467cabe274c107278355d72668d6711c2"
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic-service-mesh:v1.11.0-beta.1
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.1.235"
        - name: KUBERNETES_SERVICE_PORT
          value: "8443"
        ports:
        - name: prometheus
          containerPort: 6942
          hostPort: 6942
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.2"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - >
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &
          export rootpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $rootpw | etcdctl --interactive=false user add root;
          etcdctl user grant-role root root;
          export vmpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $vmpw | etcdctl --interactive=false user add externalworkload;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          export remotepw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $remotepw | etcdctl --interactive=false user add remote;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.2"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://$(HOSTNAME_IP):2379
        - --advertise-client-urls=https://$(HOSTNAME_IP):2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.11.2@sha256:361942671ce067cc7f3e97c2114512283148bcee5ec29e4f0a828869aedd4ced"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
      volumes:
      - name: etcd-server-secrets
        secret:
          secretName: clustermesh-apiserver-server-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-admin-client
        secret:
          secretName: clustermesh-apiserver-admin-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "02e80876f82c3f9f89a91dc3bc15a2fe798224ea561d8c2c085e4036012cfb90"
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay-service-mesh:v1.11.0-beta.1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.3@sha256:018ed122968de658d8874e2982fa6b3a8ae64b43d2356c05f977004176a89310"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.3@sha256:13a16ed3ae9749682c817d3b834b2f2de901da6fb41de7753d7dce16650982b3"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
