---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBxeDExdjAvY1B5Qm4zSS9YMURFc0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyL05GbXY5R3YvK3Z6VndaTDJGVUJIbzdHUUdNSkF1bkgwYy9HOWEyNE1udmNReDYKZEw4QWhtZFV3TmlnMFZ3UHlmTHZ4ZitCYkM0NkpMOFhCTW5nQkFGNmtJVDlIM2JWRys0aUV3dDliMU8xd0owZApJdzJDUytSalBoOXV3NWE4OWZJSTB2bEk5RFhFNmQ2V1VrSTdMNXhKd0hIMmVHanF4WmdVcUVOb0ZhTDk5YmhNCmMzVjNnT2dpVVAzd3lsZ3lTbm1UZHkwSGdSOXJUMG5aMEFvUHM1eXByR3ZpVUdNWHhnRWNYUjRLckxxbUp0SUkKeDA0Y0ZlMUhTMjBOc3ZKa2YxeDlNakhzOUtyU0tidzRLR05oNlUwZ2xLaURlNWxQcFVPZGFEcXlPWWxydnBHVQpZVjZjWTRDQmJ1TzhhWVlUQzE0bjdOaTA3cC9LMGFLN3l4RFdnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGF5Z0JaVVlMRlRWUkJLZzVJU0o3Mlh3TWp0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlJjdjBVdFc0SW5DTTBZUHpJa0ExZ092c2lTRkVpYzdwaEwzbmFtemgrK1RXQ1hsT2NRcnBlCnlOMDBDUmVJR1VqS3JXWThVQlZoN0l3aDFjZjBqdXc0cEVMd2NiQWhLSVp4RFVaUVNQRG1ZN1ZYYTRGd0dOSHkKTlAva2lqWU5pNjRXb1ptNG9WYTZkbE9FN2tXa0dGMElPY3F5bDZpSk9vaklvM0NYcU9QeXJ6NE9hZVp2eXNpSwowbWR1RlBsV0toTkovTUswOVF0SFZtS2lLTU9DbllBSUo3OW1vbFBFaFpvSDFxRjNUT01xS1kyU2hQNjZsL0d2CngrdGlUeVpYTlJtRlBtY2Nhb0VrQmNmUm9iaTZscGdyTmpITmF1MlV6bjJjNUh1UTdnL2FhYUpFNW5nTWo3TnMKdmtTNkg0MVNXL2RIMnVjSEFFc0toS0U5WVFEdEVtdUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBci9ORm12OUd2Lyt2elZ3WkwyRlVCSG83R1FHTUpBdW5IMGMvRzlhMjRNbnZjUXg2CmRMOEFobWRVd05pZzBWd1B5Zkx2eGYrQmJDNDZKTDhYQk1uZ0JBRjZrSVQ5SDNiVkcrNGlFd3Q5YjFPMXdKMGQKSXcyQ1MrUmpQaDl1dzVhODlmSUkwdmxJOURYRTZkNldVa0k3TDV4SndISDJlR2pxeFpnVXFFTm9GYUw5OWJoTQpjM1YzZ09naVVQM3d5bGd5U25tVGR5MEhnUjlyVDBuWjBBb1BzNXlwckd2aVVHTVh4Z0VjWFI0S3JMcW1KdElJCngwNGNGZTFIUzIwTnN2SmtmMXg5TWpIczlLclNLYnc0S0dOaDZVMGdsS2lEZTVsUHBVT2RhRHF5T1lscnZwR1UKWVY2Y1k0Q0JidU84YVlZVEMxNG43TmkwN3AvSzBhSzd5eERXZ3dJREFRQUJBb0lCQVFDVXZqaXFwb0crRUQ0agpnbWM4R2JCNE5JaS9SQUtmK2tYbStFa09sTDUzVzk4U2w3VHgrd0pMblJFV0Vrd3BrUVU3K1NiZ0lIYmQ2RnA0CjlCNVdpdjdaQkJNRUY1a1F2MW03U2QzK2Nha3hzdmVraEcyOFUxQkNMaW9EdTNqYzJoS1diRzB2UlZSNk52Wm4KcXljekZSQ0oyRHEwK09LZXVqczJuYkZnNmRNVTdoVFFDdENLeWZmWW9vemp1QXdBOVdIWFRNTTNSQTVvdlJkZQpKSTB1NE5UN0t0UDVmNW56eCtYRHZ3TUFEWndZUXNzT2ptb0RKTGsyQUttZWdSUUdDYm9KT3pJdzl4VzQ2U0syCkVXSVRQQmdBUy9iZjRxRlROK2pzT1M1T3VBY2Fmai82MFlmek1DRkxveXBRc05qK0IxQXp3NnkzYlRNT21BUWUKVm4ra2tYZDVBb0dCQU9NYjM4Ym5ndlczT3ZoTy9uL0tTeGE1SThUb0VTNGxtRGJhd2kwZjVINDFCMmZxa1REVQpWakZEeDJSb1lNYUZ1TTc5WG9jVWw1TEN5SWFGUmFVQmxwVUFETGNjZThmMWRFa2JSZUk4U2ZzQU9NSnloZ29TClBRMHhkc0Y2RVAvRHp0cDFvcUZRR01CalNuVnJzVnBEZEpEajNDTytva3BxMXpCZlV3N0lJa2Z0QW9HQkFNWlYKV0Ryc3BGOXhyWjUrZmtveUZRMDBGajgyRmRrbzUvd1hTT3lTWEpuMGQ0Z0VscFVQbW9EbXdrR29Kemo0alNKZwpPUUJnVml6Sm10QTRZUFk1VlRHQWx5bFU4dStNcUZjT0dmVktwSEVwZHVKMkdFamdaY0VqRzlIUTYrN2xaVFBtCmhRVngrOGhyWHpzNUJKRHNyR1NRSmdleVJ0OXJUWWhZZk92MFErb3ZBb0dBWDVJc1VteThiS0NsM1RhSTNNZ0oKWDArYjROSHo0T0tMTXBKT1ltVG9aNy96Rk9UZUlwbElpRVRJbE5WajNFY0xwWGQwSHc0b1Z1ZEhNV3pHQ1JFcApDQnpVUFA1c2pKSWJWR1I0dlNLMzB6dWRweDVBajk1cStMRlhFMFpGL3d1c2NieE5LdXNrNzFrWlRWNTdiTXUwCk13RGdjOTVXTjFETXE1dUJ2VmUxTFdVQ2dZRUFzalNoRUdEczJLMkYrUEZqZkRzLzJ4dEFHZy80MWFVQnZPc1gKSlNubGRwZkloempJTEt0V2doZlYxN1RGZVZVclN3WDJjYllkK0NRMXJIM2I4YUZXUVNKdnNEMmFBMC81T2k5NwpkNEZYL0Mzcm1sUE9RajBPY05tZzk0ZW5Wb0pieXFTSVJYcERaN1BDWDY0OXdoSkdYQjJCYmt6cmpYZ1d0RG4rCkZPem4wUlVDZ1lCOG4rMTdyMjFTQ29zMk5MNlZsNmU2Rk5mU3hrRHcxZWU2bGYxeCs1allHK3lvSzJiUWNwRmoKVFd6ejIwM2pqVUU1ZmlKbS9yWjkyK1ZZMDNVMUV6L29CK2NZZzhpU1NsOC9IU1FCdmNJV2kyMTFleHJ1b0w4RApadVp1VXNiRzQybkcxMjVyb0gwbVZEVzhLUzIva1JDSEJ3VVJQNlpjcERPaDVhb05hQUd1dHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBxeDExdjAvY1B5Qm4zSS9YMURFc0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyL05GbXY5R3YvK3Z6VndaTDJGVUJIbzdHUUdNSkF1bkgwYy9HOWEyNE1udmNReDYKZEw4QWhtZFV3TmlnMFZ3UHlmTHZ4ZitCYkM0NkpMOFhCTW5nQkFGNmtJVDlIM2JWRys0aUV3dDliMU8xd0owZApJdzJDUytSalBoOXV3NWE4OWZJSTB2bEk5RFhFNmQ2V1VrSTdMNXhKd0hIMmVHanF4WmdVcUVOb0ZhTDk5YmhNCmMzVjNnT2dpVVAzd3lsZ3lTbm1UZHkwSGdSOXJUMG5aMEFvUHM1eXByR3ZpVUdNWHhnRWNYUjRLckxxbUp0SUkKeDA0Y0ZlMUhTMjBOc3ZKa2YxeDlNakhzOUtyU0tidzRLR05oNlUwZ2xLaURlNWxQcFVPZGFEcXlPWWxydnBHVQpZVjZjWTRDQmJ1TzhhWVlUQzE0bjdOaTA3cC9LMGFLN3l4RFdnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGF5Z0JaVVlMRlRWUkJLZzVJU0o3Mlh3TWp0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlJjdjBVdFc0SW5DTTBZUHpJa0ExZ092c2lTRkVpYzdwaEwzbmFtemgrK1RXQ1hsT2NRcnBlCnlOMDBDUmVJR1VqS3JXWThVQlZoN0l3aDFjZjBqdXc0cEVMd2NiQWhLSVp4RFVaUVNQRG1ZN1ZYYTRGd0dOSHkKTlAva2lqWU5pNjRXb1ptNG9WYTZkbE9FN2tXa0dGMElPY3F5bDZpSk9vaklvM0NYcU9QeXJ6NE9hZVp2eXNpSwowbWR1RlBsV0toTkovTUswOVF0SFZtS2lLTU9DbllBSUo3OW1vbFBFaFpvSDFxRjNUT01xS1kyU2hQNjZsL0d2CngrdGlUeVpYTlJtRlBtY2Nhb0VrQmNmUm9iaTZscGdyTmpITmF1MlV6bjJjNUh1UTdnL2FhYUpFNW5nTWo3TnMKdmtTNkg0MVNXL2RIMnVjSEFFc0toS0U5WVFEdEVtdUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBci9ORm12OUd2Lyt2elZ3WkwyRlVCSG83R1FHTUpBdW5IMGMvRzlhMjRNbnZjUXg2CmRMOEFobWRVd05pZzBWd1B5Zkx2eGYrQmJDNDZKTDhYQk1uZ0JBRjZrSVQ5SDNiVkcrNGlFd3Q5YjFPMXdKMGQKSXcyQ1MrUmpQaDl1dzVhODlmSUkwdmxJOURYRTZkNldVa0k3TDV4SndISDJlR2pxeFpnVXFFTm9GYUw5OWJoTQpjM1YzZ09naVVQM3d5bGd5U25tVGR5MEhnUjlyVDBuWjBBb1BzNXlwckd2aVVHTVh4Z0VjWFI0S3JMcW1KdElJCngwNGNGZTFIUzIwTnN2SmtmMXg5TWpIczlLclNLYnc0S0dOaDZVMGdsS2lEZTVsUHBVT2RhRHF5T1lscnZwR1UKWVY2Y1k0Q0JidU84YVlZVEMxNG43TmkwN3AvSzBhSzd5eERXZ3dJREFRQUJBb0lCQVFDVXZqaXFwb0crRUQ0agpnbWM4R2JCNE5JaS9SQUtmK2tYbStFa09sTDUzVzk4U2w3VHgrd0pMblJFV0Vrd3BrUVU3K1NiZ0lIYmQ2RnA0CjlCNVdpdjdaQkJNRUY1a1F2MW03U2QzK2Nha3hzdmVraEcyOFUxQkNMaW9EdTNqYzJoS1diRzB2UlZSNk52Wm4KcXljekZSQ0oyRHEwK09LZXVqczJuYkZnNmRNVTdoVFFDdENLeWZmWW9vemp1QXdBOVdIWFRNTTNSQTVvdlJkZQpKSTB1NE5UN0t0UDVmNW56eCtYRHZ3TUFEWndZUXNzT2ptb0RKTGsyQUttZWdSUUdDYm9KT3pJdzl4VzQ2U0syCkVXSVRQQmdBUy9iZjRxRlROK2pzT1M1T3VBY2Fmai82MFlmek1DRkxveXBRc05qK0IxQXp3NnkzYlRNT21BUWUKVm4ra2tYZDVBb0dCQU9NYjM4Ym5ndlczT3ZoTy9uL0tTeGE1SThUb0VTNGxtRGJhd2kwZjVINDFCMmZxa1REVQpWakZEeDJSb1lNYUZ1TTc5WG9jVWw1TEN5SWFGUmFVQmxwVUFETGNjZThmMWRFa2JSZUk4U2ZzQU9NSnloZ29TClBRMHhkc0Y2RVAvRHp0cDFvcUZRR01CalNuVnJzVnBEZEpEajNDTytva3BxMXpCZlV3N0lJa2Z0QW9HQkFNWlYKV0Ryc3BGOXhyWjUrZmtveUZRMDBGajgyRmRrbzUvd1hTT3lTWEpuMGQ0Z0VscFVQbW9EbXdrR29Kemo0alNKZwpPUUJnVml6Sm10QTRZUFk1VlRHQWx5bFU4dStNcUZjT0dmVktwSEVwZHVKMkdFamdaY0VqRzlIUTYrN2xaVFBtCmhRVngrOGhyWHpzNUJKRHNyR1NRSmdleVJ0OXJUWWhZZk92MFErb3ZBb0dBWDVJc1VteThiS0NsM1RhSTNNZ0oKWDArYjROSHo0T0tMTXBKT1ltVG9aNy96Rk9UZUlwbElpRVRJbE5WajNFY0xwWGQwSHc0b1Z1ZEhNV3pHQ1JFcApDQnpVUFA1c2pKSWJWR1I0dlNLMzB6dWRweDVBajk1cStMRlhFMFpGL3d1c2NieE5LdXNrNzFrWlRWNTdiTXUwCk13RGdjOTVXTjFETXE1dUJ2VmUxTFdVQ2dZRUFzalNoRUdEczJLMkYrUEZqZkRzLzJ4dEFHZy80MWFVQnZPc1gKSlNubGRwZkloempJTEt0V2doZlYxN1RGZVZVclN3WDJjYllkK0NRMXJIM2I4YUZXUVNKdnNEMmFBMC81T2k5NwpkNEZYL0Mzcm1sUE9RajBPY05tZzk0ZW5Wb0pieXFTSVJYcERaN1BDWDY0OXdoSkdYQjJCYmt6cmpYZ1d0RG4rCkZPem4wUlVDZ1lCOG4rMTdyMjFTQ29zMk5MNlZsNmU2Rk5mU3hrRHcxZWU2bGYxeCs1allHK3lvSzJiUWNwRmoKVFd6ejIwM2pqVUU1ZmlKbS9yWjkyK1ZZMDNVMUV6L29CK2NZZzhpU1NsOC9IU1FCdmNJV2kyMTFleHJ1b0w4RApadVp1VXNiRzQybkcxMjVyb0gwbVZEVzhLUzIva1JDSEJ3VVJQNlpjcERPaDVhb05hQUd1dHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBxeDExdjAvY1B5Qm4zSS9YMURFc0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyL05GbXY5R3YvK3Z6VndaTDJGVUJIbzdHUUdNSkF1bkgwYy9HOWEyNE1udmNReDYKZEw4QWhtZFV3TmlnMFZ3UHlmTHZ4ZitCYkM0NkpMOFhCTW5nQkFGNmtJVDlIM2JWRys0aUV3dDliMU8xd0owZApJdzJDUytSalBoOXV3NWE4OWZJSTB2bEk5RFhFNmQ2V1VrSTdMNXhKd0hIMmVHanF4WmdVcUVOb0ZhTDk5YmhNCmMzVjNnT2dpVVAzd3lsZ3lTbm1UZHkwSGdSOXJUMG5aMEFvUHM1eXByR3ZpVUdNWHhnRWNYUjRLckxxbUp0SUkKeDA0Y0ZlMUhTMjBOc3ZKa2YxeDlNakhzOUtyU0tidzRLR05oNlUwZ2xLaURlNWxQcFVPZGFEcXlPWWxydnBHVQpZVjZjWTRDQmJ1TzhhWVlUQzE0bjdOaTA3cC9LMGFLN3l4RFdnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGF5Z0JaVVlMRlRWUkJLZzVJU0o3Mlh3TWp0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlJjdjBVdFc0SW5DTTBZUHpJa0ExZ092c2lTRkVpYzdwaEwzbmFtemgrK1RXQ1hsT2NRcnBlCnlOMDBDUmVJR1VqS3JXWThVQlZoN0l3aDFjZjBqdXc0cEVMd2NiQWhLSVp4RFVaUVNQRG1ZN1ZYYTRGd0dOSHkKTlAva2lqWU5pNjRXb1ptNG9WYTZkbE9FN2tXa0dGMElPY3F5bDZpSk9vaklvM0NYcU9QeXJ6NE9hZVp2eXNpSwowbWR1RlBsV0toTkovTUswOVF0SFZtS2lLTU9DbllBSUo3OW1vbFBFaFpvSDFxRjNUT01xS1kyU2hQNjZsL0d2CngrdGlUeVpYTlJtRlBtY2Nhb0VrQmNmUm9iaTZscGdyTmpITmF1MlV6bjJjNUh1UTdnL2FhYUpFNW5nTWo3TnMKdmtTNkg0MVNXL2RIMnVjSEFFc0toS0U5WVFEdEVtdUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBJcTB6eDI1UWh4aHVNYmVYaEtWZXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNrcHdWNXdIbXhsNUNqSzVsMHhGcm5aU2Q0RTAKZTVXZ3VpcnA0S3RlUzNNYm9kWmpRZVNsZEhNZzR2RnVycHVKeFY3R05iRWt1QkFsbDFRYllQQW52Yk03WkJRRAozVmJwcFhwQ0pGUy8ybkhGM2NRY205TXFDRmVObGdRQW5idmpVTGE3MnhNMzZoNXVtMnBqZXVvYWFVMER1UjVMCmNqTHUvTStqTzJPMTB5WkxDL21GYUFURlpXMktDeGFGd0xlSHdnV0VyNVI4TWxkQWswQ0k5WE9vRTZWeW44ZXQKMHBpdytkVlZ0ZjZpNFB0cUc5ajZGSnlSaFl5RkFUN0xUcFZaVUV0R3g5VGxBY2QrUmpsT2tEQzBKeUpZNFVRWgpkaFJLM2trRzhOY3pSWURRWjhQK1F4OWhka282M0FDUGkrOUk1K25UNzRpSE55M1kzbEEyWjBtUTJRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDJzb0FXVkdDeFUxVVFTb09TRWllOQpsOERJN1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBS2p1ZElva3lWL1h6VVdTcEpYOW9welMxK2NubHowTUJUMEk5L1Vsd0ZkK21oOVcKS0dtRnd1ckoyeXJleW84R3k3SzNpNldsV080QnZ0N01SdnROVngyUWkxTjhiQzZGd3lacGhEWENXS0E3RSs1VAozNFZ4eTR6TUg0L3F5STM2TU14TW1nOW5iZnhDRm5sekFBT1dYRi9naTMzVFVqNWE1UHJvMFdQY1V5UnZUdGFPCjlBcHBZK3ZDRjh5TWVvZW5zaGlaOGt6TXNyZm0zS0dHc1VOenNnRUs1cUxiWWw5Q0hSdW1Fd0wrOEc2RmNUYVYKajA0R0xSTHkyVzRnNmtqaUw3WnpSYzFpeHU4Z0M3Y3VzeWsrL0VYMm9WaDdGRWhNY1pYbzYzd05pZkRQNjJ2Two1YjFadFJFVktDaUFBd25iNWk2RGhOdmJxVndqNGNlaXNOa3R4MTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc2twd1Y1d0hteGw1Q2pLNWwweEZyblpTZDRFMGU1V2d1aXJwNEt0ZVMzTWJvZFpqClFlU2xkSE1nNHZGdXJwdUp4VjdHTmJFa3VCQWxsMVFiWVBBbnZiTTdaQlFEM1ZicHBYcENKRlMvMm5IRjNjUWMKbTlNcUNGZU5sZ1FBbmJ2alVMYTcyeE0zNmg1dW0ycGpldW9hYVUwRHVSNUxjakx1L00rak8yTzEweVpMQy9tRgphQVRGWlcyS0N4YUZ3TGVId2dXRXI1UjhNbGRBazBDSTlYT29FNlZ5bjhldDBwaXcrZFZWdGY2aTRQdHFHOWo2CkZKeVJoWXlGQVQ3TFRwVlpVRXRHeDlUbEFjZCtSamxPa0RDMEp5Slk0VVFaZGhSSzNra0c4TmN6UllEUVo4UCsKUXg5aGRrbzYzQUNQaSs5STUrblQ3NGlITnkzWTNsQTJaMG1RMlFJREFRQUJBb0lCQVFDdjhod0pxVllzTHFndgpjejJKM09CTE9rTko0ZjBNRk81bnFsL2hzdHc4Y3gwS3lncHNCWnR1WHd0T1N0cGlmK1luRzg5WlB6YXdXbWJ1CmZ6Y0JwQjVqNjlPcGdNTUxsSERCTi9TNzY5TGxYUy9hR1dYdU5TYWUwdUJMOGlrMWdDemxBMkJCNHlaajZhSlgKeDFiaS90SVBwc3dNektQQjBCZmU3MzN6NXdPUm1ldlBESEhRYmdkYkNnWG9WTmEvM2txYmJmcVQzNDRJZjB6Zgp3UngrNi84aktYYUg3VGNYWlpvK1FkU2VTblBzNFJ5QkZkV0dBdVFOT1ZPUkZCNm1DcFJmaVBzQXVyYkdaTm85CjI0QzlkczBQNEtKQ29RL1ppSEFxZWJzSmJiWGkzQWRHeWkxblJiZmcrOFo3cURJNWl6WVdBWTB0c0xFSkhiNEkKUHVMQjZHc0JBb0dCQU0rR2x6UmNzYnQxWFVRaDVNeExpUGxLcHVHZ25HbUxTSEp3MUxGTFNvZDZZdG04eVhOMApVRE9JUlA0RDkxY2p2VHJCNzBneE1Icmp1dm9mYUNKbWFVMWd4dklma01yVlJHaVBpTFVCckJ5VktaL2FUQU44CmsybXZPU2kzSEROZGVYdXViWFNQcTd2aGRqcGc0dkwvTXRDU3pmS0dzQkZ6SmdmQVhEekhQY2I1QW9HQkFOdnYKcjVZUGtudUlDd3RnK3RuU1VzYlBKVVFZdThmMzBobVlLTmdVaGw0aUR4YjFueUtHZXYybTU2dUcyd1dlRWs5bgpoUjhGbjdRcWlQc0xxNnFVbytDTGQzcm1MSm1nRHhMbWhMZGR6enNUTksySkRrZ2xweFAwNldWUjdxWk9Hcm5SCmgzSC9SNDRqUjNOTTJsWm9GY1FIZXlpc1NHYUcrSzRQRGZMNjV6RGhBb0dBYWhhMDc1aS9aMFI5VkZvN1c5RDEKaWZPRzBtdEg2cERBalhodTB0L1pqdDZhOEJLWnJZTDFpUktOcW9tZWhSYUpJeU9IVHBHTzVoUExQeGlWSkpqVQpGakYySXNyT08xTEJNTzdIaFRrQW9uQUNvbXgzVllUMjJ4MHZqRWZuaTc2cVh2YnhqNWZ1eEJKalhUNndabWJkCnRGQ0lKZ2FDdGJqMjVSbUtUYXZSUWdrQ2dZRUExNytEVGtCT1lMSHVxNlhoemdWOVFCdDZJaGZsTlYrTWthRHIKQ0RUeUxxdFloQnhFbEJpNTA5T0QxWVovbWo0YkZodWx3ZTNCWVhxTVQwQitrT0lvOUIrOEFDcUZPOXFBanZqawozZisvUnVNclBNU0M1eEZRbWNvWm5sUEdPUXZMT2RjcCtCRUUvNURxQ1ZndG9xK09Fbk9JUkRqaytQYVVRaUx3CmV4Zlg3T0VDZ1lFQWhWRXRWbGJ0UzZnVFd3RHhEYWVBVTI2bjdjb0RrUlNsOVVOalRHSlYwL0xFbXRpYnZld3IKMjVvUU1XNXpvQWl3ZGFrMGRNQTdvNldDY0N4d29YSmRqZFNGeHNLb01hSmFKc3dzNzlYdXpqZnV2N1YyUjEwNApDK21SUDNacW1ra3l5S2tWaWtvRXIwQ2FxdzJpVnl2eDhIeGZIWXVtbGs3S1ZKUXVDKzliL0p3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBxeDExdjAvY1B5Qm4zSS9YMURFc0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyL05GbXY5R3YvK3Z6VndaTDJGVUJIbzdHUUdNSkF1bkgwYy9HOWEyNE1udmNReDYKZEw4QWhtZFV3TmlnMFZ3UHlmTHZ4ZitCYkM0NkpMOFhCTW5nQkFGNmtJVDlIM2JWRys0aUV3dDliMU8xd0owZApJdzJDUytSalBoOXV3NWE4OWZJSTB2bEk5RFhFNmQ2V1VrSTdMNXhKd0hIMmVHanF4WmdVcUVOb0ZhTDk5YmhNCmMzVjNnT2dpVVAzd3lsZ3lTbm1UZHkwSGdSOXJUMG5aMEFvUHM1eXByR3ZpVUdNWHhnRWNYUjRLckxxbUp0SUkKeDA0Y0ZlMUhTMjBOc3ZKa2YxeDlNakhzOUtyU0tidzRLR05oNlUwZ2xLaURlNWxQcFVPZGFEcXlPWWxydnBHVQpZVjZjWTRDQmJ1TzhhWVlUQzE0bjdOaTA3cC9LMGFLN3l4RFdnd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGF5Z0JaVVlMRlRWUkJLZzVJU0o3Mlh3TWp0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlJjdjBVdFc0SW5DTTBZUHpJa0ExZ092c2lTRkVpYzdwaEwzbmFtemgrK1RXQ1hsT2NRcnBlCnlOMDBDUmVJR1VqS3JXWThVQlZoN0l3aDFjZjBqdXc0cEVMd2NiQWhLSVp4RFVaUVNQRG1ZN1ZYYTRGd0dOSHkKTlAva2lqWU5pNjRXb1ptNG9WYTZkbE9FN2tXa0dGMElPY3F5bDZpSk9vaklvM0NYcU9QeXJ6NE9hZVp2eXNpSwowbWR1RlBsV0toTkovTUswOVF0SFZtS2lLTU9DbllBSUo3OW1vbFBFaFpvSDFxRjNUT01xS1kyU2hQNjZsL0d2CngrdGlUeVpYTlJtRlBtY2Nhb0VrQmNmUm9iaTZscGdyTmpITmF1MlV6bjJjNUh1UTdnL2FhYUpFNW5nTWo3TnMKdmtTNkg0MVNXL2RIMnVjSEFFc0toS0U5WVFEdEVtdUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU1qaURVc2t4Z2pMTXVqc3AvY1NKN293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU1qQTBNakV6TjFvWERUSTFNRGd5TVRBMApNakV6TjFvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTldvUWxJT0NqTDAKV3BsT21FZVptaU1ueG0yL2RKZEIybHBDVkF0c1pnR0tVWGg1YnNuQzJ6c1V1Sm1ZczZUTHNJaFZyTHJQTkN1Ygp5ZG95a3BVUE5uajRFclA2N0FmTmI4bTlScTBLRWJ3N2tUd1dnZmxwbG9lWWRSR0VXSFptanRKZ2hvUy9VYVMyCkpmSlBYTCtoMCtaQ1YyRFZiVGhsZGRmSytWRjJ4L0hRYmpncXZKUW9Ta1NXdDNuRHViN3FVRUlBZGJSYXQ4ckQKY1RsQk53N0RWS2RnS0ZVYlJucXBHVW9qcnhLbDE5dHBNTVdFZGNjcXoreVEvWjBOcHFsZWNmUHN0RW1ITnlMTQpJMHZLMUxPUkowZm5mdUVRSTRPYlNFd0JBemlVd0ZyN0J5WitNZGwybnpocGlRaDdzMmpkblJnbzdmYTRkdlhTCmlvUEhsRWFIdDZjQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVOXJLQQpGbFJnc1ZOVkVFcURraEludlpmQXlPMHdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFVeURvZDAvQXRqKysKKzdwOWoyWGFVZkZvaUNLQndBTmp6VFg1MEpFSHdlKzVoYlBFK0I3SW0yc2Q2cEY3NGw3SldLeGZKMXBYdkUzMQpWTmhEREdSUnlORW9jaDFhMGRISFVEY3VqakVQcytDM1BPU2R1aVVTalFkcmk4bzJsR2U4NGMxb0Q3aHdWRmIxCmQrQTMwT2w0NS9JY1lVVW9rblhQaWtYb0RnYUsrWU9sdmt0K09lQ0w5Y0VhY2FHcVZoUCtmQWVLQUpjUGJTc3QKajFwbzE5cUFGVnEyNmU4cnhwaG9MSkc3dzBQYUFIQmEyT1Jpd0JidjRxL0p6M1RTYlNOOGp0WWpYeWFZTXNyeAoxR1VCMTVhNmZXVTNIcWR0N29sRGhSR0dMVXlYYXZrVHcvUmFsOW9HYjdiSERzTkJtcG5nTUZ5TVU4WXVLMUhOCnYyTFoxcFZ0M2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWFoQ1VnNEtNdlJhbVU2WVI1bWFJeWZHYmI5MGwwSGFXa0pVQzJ4bUFZcFJlSGx1CnljTGJPeFM0bVppenBNdXdpRldzdXM4MEs1dkoyaktTbFE4MmVQZ1NzL3JzQjgxdnliMUdyUW9SdkR1UlBCYUIKK1dtV2g1aDFFWVJZZG1hTzBtQ0doTDlScExZbDhrOWN2NkhUNWtKWFlOVnRPR1YxMThyNVVYYkg4ZEJ1T0NxOApsQ2hLUkphM2VjTzV2dXBRUWdCMXRGcTN5c054T1VFM0RzTlVwMkFvVlJ0R2Vxa1pTaU92RXFYWDIya3d4WVIxCnh5clA3SkQ5blEybXFWNXg4K3kwU1ljM0lzd2pTOHJVczVFblIrZCs0UkFqZzV0SVRBRURPSlRBV3ZzSEpuNHgKMlhhZk9HbUpDSHV6YU4yZEdDanQ5cmgyOWRLS2c4ZVVSb2UzcHdJREFRQUJBb0lCQUJPUGhBTGZKaS9rRHlkWgorcmNUYVBrdSt3dXhLNHR0akFBWGNucFpRajJCM0ZPYlNubE9UYVByRWJ0K0wzUTI4Y0tKbFhiRTRaSGNnVzVvCmt1THlzWm9CbkRTK0ZEM2lvUWxuT3NFODJzTFE4VXIvQklkQkUzYjJqa0U4VEowS1pxajhEVlM1NzArVkhZUkIKbjh3cmxLclFDQS9sZWtwZmY1cHlDc0ZhanBPa3hvWUV5RzFxTzBmMVBqMi9BYnUrRHR5TUx1U21SN015V0V0ZApwMVlmbjV3cUFvVmZWQlNEc3RyenVFdmZCQUJPWnVGSEtadzdoS0F5Y0ljS3o5aU41aW5SM01pOUJUdHMvUW41CnV2SkN4M0JyWk1GV1VhUVY5NjUxcDVDbE9FWVFJa3FnMkVGZENCREt3WXRGbmh5djR1cDV3UjhPQmRZNTdDNVQKY2ovSzE0RUNnWUVBK25KZnNEWTZEdHFORlZ1eXZ1NTVncVNucnVOdnl6ZGpiNDZVZTBzKzJHL1pvUjVSQktrLwpWV1EvaGRBRGh2S09HaWN4c1pRalJ4M0Q1dlpKSFR2dU42cUMxdkpiZzRJL1JlZnJ0eTNOOWJhZTZhLzczZW1OCng5MWFubW5NMGlYODhVZ2lKNmVPaFJpczNsNTh5L256WTUvbzdhK3VWTlI2aXZxK05IWHY2OVVDZ1lFQTJtVU8KQkJURmxXN0xQd0RVUHA5TUsxN0F2SXBoM1NjVnlja2tGYmJ1dkpFNklDaGdDbHVwbnhkeUJHbnFyeVdDdDczUApPdGFtanlKM3VXZDZnOUtSdTZvQ2dBdW90MXpmR3pjMW1wOGVRZENta2VyNWhWUVltdDRKemxvdW9mTVpDUjhVClBKNDVucWQzbmg1dEdIeW5WeENnY2VndmVLWEtsVjY2S1JBMGY0c0NnWUJ0OTFwY25QTFJJdFZmMDJ1Z3VrVlEKUDh3QTFveDN4bEk2NFhnQXl3RkZONWR2VDBoenEzekxtY0RxbUhOMEJYeXZyeFg2eXZqU2VSZFRpa0NBUFpoVAppT0w2VG1Bd1ZqaENFWnRHU3k1ci9VdTVnRFF2TkNXMDVGU3R5ZmJOTHpEcElLc2Vqa3ZkMVAvU2c5cDRGYi93CnRuNG9IME9FcStkQ3J1WmxVb09PSVFLQmdRRFU3ZndaWElzNzQ5Y0Q2WElHVUZmNlhScTdlSXhzQzhTQmhidkoKOUI2VitWNWJwaUhsVjNOc3FuWSsrV21ZTkpGYlJoTzdBVGRKak1pQUd2VG5lN0VjOEdnWm9jUndhbnNZVk43TgpqMS8zdVUvK0tzUDNDNFFsMG1Cck1hQVB4QzNmcDg2YVA0WmNPbGswNytOY0lZVWlMUkxSbkJoVW9BaUJVK2RiClMvSnpld0tCZ0ZFaWRzRkV4OEFCaVZjSFcrbHkyV1JPSUUvZ0RRNjVITUhLZ2tSbjdMQURBcVJjLzZvNVNzY3IKUmJxYi9nZnh6SmExREo2Y0JvYTdSYS9lenZ2NGk1NW9DR2FJNVNDQUZ1ZzJWdUl1M2dHcmQ4cVdhVHFlSzI5Vwp3L2gzeDZoZUlHTnozcTRwbmtjdzh4STN4blpkTnZsUS9vZVJJSVI1Yk9yekVubGNpdTRuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: talos-default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "hybrid"
  bpf-lb-algorithm: "maglev"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: talos-default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.0"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.raspbernetes.arges.siderolabs.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "51381"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.0"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.0"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.raspbernetes.arges.siderolabs.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "51381"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "c5ffc5d73d784ff99602f12df782301bf342d02dd3e6ab44bb8ce682978c9f35"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.0
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.raspbernetes.arges.siderolabs.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "51381"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "d1e2533dee4ac4f01c5e9cfb2636bf020cdedc541a541ba8f2189b6d641b2a8d"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.0"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.0@sha256:0ef04e9a29212925da6bdfd0ba5b581765e41a01f1cc30563cef9b30b457fea0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.0@sha256:000df6b76719f607a9edefb9af94dfd1811a6f1b6a8a9c537cba90bf12df474b"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
