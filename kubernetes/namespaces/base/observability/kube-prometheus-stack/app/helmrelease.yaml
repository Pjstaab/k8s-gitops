---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 51.10.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      # TODO: Flux issue with verifying release 51.0.2
      # verify:
      #   provider: cosign
      interval: 60m
  install:
    timeout: 30m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
    # Force recreation due to Helm not properly patching Deployment with e.g. added port,
    # causing spurious drift detection
    force: true
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  maxHistory: 3
  dependsOn:
    - name: thanos
      namespace: observability
    - name: grafana
      namespace: observability
  timeout: 30m
  values:
    cleanPrometheusOperatorObjectNames: true
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    prometheusOperator:
      prometheusConfigReloader:
        # Resources allocated based on Robusta KRR output
        resources:
          requests:
            cpu: 5m
            memory: 24Mi
          limits:
            memory: 50Mi
    prometheus:
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      ## Settings affecting prometheusSpec
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      prometheusSpec:
        replicas: 1
        priorityClassName: platform-cluster-critical
        replicaExternalLabelName: __replica__
        # REQUIRED: Cilium Hubble metrics are exposed via OpenMetrics. Prometheus Operator requires the `exemplar-storage` feature to be enabled to scrape OpenMetrics.
        # https://docs.cilium.io/en/stable/observability/metrics/#openmetrics
        # https://prometheus.io/docs/prometheus/latest/feature_flags/#exemplars-storage
        enableFeatures:
          - exemplar-storage
        ## Interval between consecutive scrapes.
        ## Defaults to 30s.
        ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/release-0.44/pkg/prometheus/promcfg.go#L180-L183
        scrapeInterval: 1m
        secrets:
          - etcd-client-cert
        externalUrl: https://prometheus.${CLUSTER_DOMAIN}
        podAntiAffinity: hard
        # Resources allocated based on Robusta KRR output
        resources:
          requests:
            memory: 4Gi
            cpu: 1000m
          limits:
            memory: 6294M
        # Thanos chart will generate the secret: thanos
        thanos:
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
          # Resources allocated based on Robusta KRR output
          resources:
            requests:
              memory: 128Mi
              cpu: 10m
            limits:
              memory: 160Mi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
    kube-state-metrics:
      verticalPodAutoscaler:
        enabled: false
      # REQUIRED kube-state-metrics must be configured to enable Vertical Pod Autoscalar metrics.
      # https://github.com/prometheus-community/helm-charts/blob/cbbc1d6965d5f90c31bb7dd08ecab09e59544a65/charts/kube-state-metrics/values.yaml#L311
      collectors:
        - certificatesigningrequests
        - configmaps
        - cronjobs
        - daemonsets
        - deployments
        - endpoints
        - horizontalpodautoscalers
        - ingresses
        - jobs
        - leases
        - limitranges
        - mutatingwebhookconfigurations
        - namespaces
        - networkpolicies
        - nodes
        - persistentvolumeclaims
        - persistentvolumes
        - poddisruptionbudgets
        - pods
        - replicasets
        - replicationcontrollers
        - resourcequotas
        - secrets
        - services
        - statefulsets
        - storageclasses
        - validatingwebhookconfigurations
        - volumeattachments
        - verticalpodautoscalers
    # Disable kubeProxy whilst using Cilium as it's not deployed
    kubeProxy:
      enabled: false
  postRenderers:
    - kustomize:
        patches:
          - target:
              # Ignore these objects from Flux diff as they are mutated from chart hooks
              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)
              name: kube-prometheus-stack-admission
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          - target:
              # Ignore these objects from Flux diff as they are mutated at apply time but not
              # at dry-run time
              kind: PrometheusRule
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          # TODO: Datasource patching is required
          # - target:
          #     version: v1
          #     kind: ConfigMap
          #     labelSelector: grafana_dashboard in (1)
          #   patch: |-
          #     apiVersion: v1
          #     kind: ConfigMap
          #     metadata:
          #       name: not-used
          #       namespace: not-used
          #       annotations:
          #         grafana_folder: Kubernetes
