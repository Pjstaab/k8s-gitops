# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:gwIWTS509ni1nDEklRcm+yG6x0+hmnU=,iv:CWwLoukYD5RDO3acWfcBJmOrxpGQV9nhPkY93buZ6Gc=,tag:PfEBZUq8tT7VIkJUE8bRSA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:XZ+jNBusjmsRVJZt3asPqFivVKQBZS4BIWxS9V1Z9y7bXqyaMjEAF2AX+d2GArAkqm2bjSVquQWce2E/A9Ct8Zi5D0UmhPLuERWWLXLU6xyfGO9sl4BPKGxJqHTalwmoipE/1Bekd4UVGRJSTdVYj43yxIP/o/qPP0UAjZqVTZC/QMchWcqY8daUNnkDD7egjWd9tsF6jdva+rG91Q08H3Bp3IgMCkPQhhDfjiRlET+28yXFQHdQDLZjPtPRLy2Qto5ghVzTsFhgdeDhePqfzIZsU0d2FDbhatW0vpzGpoSiLf+3iPxTp6TLcWj2Nft9KsFp9I2XI/8pnZ16/ildxnKdQeBr/D7pCudrpTUbWQ85xc9cMOEuXHM+2V0mu5CgXt8Yi28OUjf56vjAccTR4k3vzxv4YD9z2CApo6HXRf/jTjtT76w6rgWUJRspb8jCZlsiUhCzB27S6zKIVBau28WtYXpur75nYwCA3EBYtFNnVevVQxrJRIhF77nYI8t609yJ+QHBo+3H2RYJw23Ka20+7IvazT4R3jETLkm+5kP2OgK9RPEyo5g9PFfdHuMrqTd9si502fxKFWghCTQCifDr2D6MEitfN4dCgBDjgy754c5ftx6bfJc2afFzRYdpJxgek0mn/SmHR8QXuMvGHlsijGzQSp60A+5a9h5R9l3j9G+O8ccEdVTBeLkWCWM522zJDntmLOOIivUeR+U9tMWOMG72FNdh4Gpu7s/mJtlM6D0UOEdI4Vc3Ax4al3XV5MaL8ZuWbWHt8xg0aiDROc6qodkg38N7w/r1XPikZR44JrK3oFoyRaeldWXHEf9P5ZFKgzOaNTVhoe/K05kfH+MFi5PzjRLQRNXA1/Hv3AcUWJ7y,iv:o+YJpIViD+nimWk15SWufLFt5WPvs8fZaEYUSBm1DBc=,tag:J8tflVpH9b5H4WvmsL6bNw==,type:str]
        key: ENC[AES256_GCM,data:+DeHTn0M/AC5T6V/xkvqfdDNuoHMy6uP1Cd8EOanzHq0zwi4SBjdv0ZZO+volLE5U4fSQKXipp6+Z7rple5pC12onrfrnWoxOLrHVldTCqeR22JUa430iqE5OE0LRb7Y3Gi32hKWamRdfW8oDFED/1W8ShPMbpW4epZ3hj5Xz2QCBw7O23s40385rWfwm9s29jSJCFhvE9tyz1+vGM7klKUo+AgqIcFZe1ftSvigT+wJAKPn,iv:KVhsFG5q3c1hse1u3rmctFVGexcnugNqyhNQGSQEhls=,tag:FJBWM0zl9tynIiT+3EFexg==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs:
        - talos.api.raspbernetes.com
        - 192.168.50.200
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.24.2
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # TODO: Investigate additional extraArges options
        # https://www.talos.dev/v1.1/kubernetes-guides/configuration/deploy-metrics-server/#node-configuration
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
            # # The `extraMounts` field is used to add additional mounts to the kubelet container.
            # extraMounts:
            #     - destination: /var/lib/example
            #       type: bind
            #       source: /var/lib/example
            #       options:
            #         - bind
            #         - rshared
            #         - rw
            # # The `extraConfig` field is used to provide kubelet configuration overrides.
            # extraConfig:
            #     serverTLSBootstrap: true
            # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
            # nodeIP:
            #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
            #     validSubnets:
            #         - 10.0.0.0/8
            #         - '!10.0.0.3/32'
            #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # # `interfaces` is used to define the network interface configuration.
        interfaces:
            # The interface name.
            - interface: eth0
              #       # Assigns static IP addresses to the interface.
              #       addresses:
              #         - 192.168.2.0/24
              #       # A list of routes associated with the interface.
              #       routes:
              #         - network: 0.0.0.0/0 # The route's network (destination).
              #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
              #           metric: 1024 # The optional metric for the route.
              #       mtu: 1500 # The interface's MTU.
              #
              #       # # Picks a network device using the selector.
              #       # # select a device with bus prefix 00:*.
              #       # deviceSelector:
              #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              #       # deviceSelector:
              #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       #     driver: virtio # Kernel driver, supports matching by wildcard.
              #       # # Bond specific options.
              #       # bond:
              #       #     # The interfaces that make up the bond.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     mode: 802.3ad # A bond option.
              #       #     lacpRate: fast # A bond option.
              #       # # Indicates if DHCP should be used to configure the interface.
              dhcp: true
              #       # # DHCP specific options.
              #       # dhcpOptions:
              #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
              #       # # Wireguard specific configuration.
              #       # # wireguard server example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     listenPort: 51111 # Specifies a device's listening port.
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # wireguard peer example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
              #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              # Virtual (shared) IP address configuration.
              # layer2 vip example
              vip:
                # Specifies the IP address to be used.
                ip: 192.168.50.200
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # TODO: mmcblk0 for eMMC or sda for SSD
        # The disk used for installations.
        disk: /dev/mmcblk0
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.1.0
        # Indicates if a bootloader should be installed.
        bootloader: true
        # Indicates if the installation disk should be wiped at installation time.
        wipe: true
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # # Provides machine specific control plane configuration options.
        # # ControlPlane definition example.
        # controlPlane:
        #     # Controller manager machine specific configuration options.
        #     controllerManager:
        #         disabled: false # Disable kube-controller-manager on the node.
        #     # Scheduler machine specific configuration options.
        #     scheduler:
        #         disabled: true # Disable kube-scheduler on the node.
        # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
        # # nginx static pod.
        # pods:
        #     - apiVersion: v1
        #       kind: pod
        #       metadata:
        #         name: nginx
        #       spec:
        #         containers:
        #             - image: nginx
        #               name: nginx
        # # Used to partition, format and mount additional disks.
        # # MachineDisks list example.
        # disks:
        #     - device: /dev/sdb # The name of the disk to use.
        #       # A list of partitions to create on the disk.
        #       partitions:
        #         - mountpoint: /var/mnt/extra # Where to mount the partition.
        #
        #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
        #           # # Human readable representation.
        #           # size: 100 MB
        #           # # Precise value in bytes.
        #           # size: 1073741824
        # # Allows the addition of user specified files.
        # # MachineFiles usage example.
        # files:
        #     - content: '...' # The contents of the file.
        #       permissions: 0o666 # The file's permissions in octal.
        #       path: /tmp/file.txt # The path of the file.
        #       op: append # The operation to use
        # # The `env` field allows for the addition of environment variables.
        # # Environment variables definition examples.
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: info
        #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
        #     https_proxy: http://SERVER:PORT/
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: error
        #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
        # env:
        #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
        # # Used to configure the machine's time settings.
        # # Example configuration for cloudflare ntp server.
        # time:
        #     disabled: false # Indicates if the time service is disabled for the machine.
        #     # Specifies time (NTP) servers to use for setting the system time.
        #     servers:
        #         - time.cloudflare.com
        #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
        # # Used to configure the machine's sysctls.
        # # MachineSysctls usage example.
        # sysctls:
        #     kernel.domainname: talos.dev
        #     net.ipv4.ip_forward: "0"
        # # Used to configure the machine's sysfs.
        # # MachineSysfs usage example.
        # sysfs:
        #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
        # # Used to configure the machine's container image registry mirrors.
        # registries:
        #     # Specifies mirror configuration for each registry.
        #     mirrors:
        #         ghcr.io:
        #             # List of endpoints (URLs) for registry mirrors to use.
        #             endpoints:
        #                 - https://registry.insecure
        #                 - https://ghcr.io/v2/
        #     # Specifies TLS & auth configuration for HTTPS image registries.
        #     config:
        #         registry.insecure:
        #             # The TLS configuration for the registry.
        #             tls:
        #                 insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
        #
        #                 # # Enable mutual TLS authentication with the registry.
        #                 # clientIdentity:
        #                 #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
        #                 #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
        #
        #             # # The auth configuration for this registry.
        #             # auth:
        #             #     username: username # Optional registry authentication.
        #             #     password: password # Optional registry authentication.
        # # Machine system disk encryption configuration.
        # systemDiskEncryption:
        #     # Ephemeral partition encryption.
        #     ephemeral:
        #         provider: luks2 # Encryption provider to use for the encryption.
        #         # Defines the encryption keys generation and storage method.
        #         keys:
        #             - # Deterministically generated key from the node UUID and PartitionLabel.
        #               nodeID: {}
        #               slot: 0 # Key slot number for LUKS2 encryption.
        #
        #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
        #         # cipher: aes-xts-plain64
        #         # # Defines the encryption sector size.
        #         # blockSize: 4096
        #         # # Additional --perf parameters for the LUKS2 encryption.
        #         # options:
        #         #     - no_read_workqueue
        #         #     - no_write_workqueue
        # # Configures the udev system.
        # udev:
        #     # List of udev rules to apply to the udev system
        #     rules:
        #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
        # # Configures the logging system.
        # logging:
        #     # Logging destination.
        #     destinations:
        #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
        #           format: json_lines # Logs format.
        # # Configures the kernel.
        # kernel:
        #     # Kernel modules to load.
        #     modules:
        #         - name: brtfs # Module name.
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: WxikpJfAwC5iuEmkmu3nEEukj9qfutUGlmSSL2sgQEg=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:HZyoNGrm7sbNul26STREHva4mzIILiS+irdWrs3ADXzjj1SZeIZIhaBzY/o=,iv:akn8uo2HcX5tUoVPz2/dCeW12t+S3hDte8fZM077TQY=,tag:Tk65tp4tGblM7f624ZizEA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.50.200:6443
    # Configures the cluster's name.
    clusterName: talos-default
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        # https://www.talos.dev/v1.1/kubernetes-guides/network/deploying-cilium/
        # The CNI used.
        cni:
            # Name of CNI to use.
            name: custom
            # URLs containing manifests to apply for the CNI.
            urls:
                # Install the cilium CNI manifests
                - https://raw.githubusercontent.com/xUnholy/k8s-gitops/main/k8s/namespaces/base/kube-system/cilium/install/cilium-1.12.1.yaml
                # Install the kubelet cert-approver manifests
                - https://raw.githubusercontent.com/xUnholy/k8s-gitops/main/talos/integrations/kubelet-cert-approver.yaml
                # Install kube prometheus stack CRDs prior to cluster bootstrap
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
                - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.60.1/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:fKgmMaOGmu+E8UshGAlDzpq0vVSjdh0=,iv:jt1VmGlJhLqn4POLWt81R0rVOgQaWaUgMlX3mM/l9rU=,tag:11Bcjo6zogs1C8CRbvkpDQ==,type:str]
    # The key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    aescbcEncryptionSecret: ENC[AES256_GCM,data:D6ysdzipsBs72pOKK+/GTpzyKDI45PNCn71nZlUdGHSfC/0SDJH2opcYMkc=,iv:GDOYbxD/LW8ARJ8FkW+az9IC96nlk4ou05g4xEfC5r0=,tag:GezVKMwFwNRhyBaQUdAftg==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:tvoBpIUKsgd/KaEuVKv9W3wNjUKhlxM+19qyYEwY3ZWO0pZXqAvjzfFuvmhsrHiQJGGVVOg82aqFLyhG0F3IcYphWkMwCuM5QxQ0DyMRu6U+aKo7B8CXhUHjJab70wsHVMBFD5Cy5A32zzItrgBivFx3uswWjIfTFZiAhBD+Q84hOxpQKaBdpHWvZMP7J+pvM1yPk4pBQFFvfDYR0i8YOfgz7jDSU12Fmw10BaY/jqBcegsTzJZI2f1N7yYLy7fFwShCmXteHaUfxNz7Rm1ElJmcQ26yzG8E0JO0zuHOTI5+VIxEx5eb1XjNqr7c+c+Jxf7UJvOp4HwsvxPDJ/2q5Uq9HWmBAAlOVmXsxPYL/Tulx0v8qG7vvxqYRvkoH1G6uEcGEpqrB0Bn3QL1P1tx0Ow45zyBeEwGk5y94/7f8vuEwEfZR88U/k1TkXp71dCbDwId32OGjfyJC9CjAzsd2U96SqtnF07/oooPVS98K1/VC2Gqf2ONycouAq9stzFMsB8daA7xwB3nsqktCnxI0ZsNpByWpmZtgQxfKTXD91mq3Q7gwVgE/DI1orsRftHSedUKtRvyGdps0B6bkBYJmq8Qot1qHeoRF/RjNXAGkU807fJylLlf8v8VP9ScN3dtW/vPQqyJuawovW48W/Dsf4P/P3Dvn2uMKo2B+70IsMTJ+5qBYg2siwutErOF0X9c/bIqUG7hXQbvNAtBapK//3VzU5IwbBbxcBkn+MvqXKTX70xxEZEQGf9ALzLsAKlbsAX1YYNEfzswY81E05YYVBNXqrp4c/9DxtV7lECedntaUzbAUxrUj9deSgNN3iJAI4i243+wd4nOqc+rc94ojKEgM7mG02ojChIJcBJvF3sFZ7MPcuQK8fmcUVslmmjPoqHPW8jy6Gynh35en3ZuglDHqqU5IpDWCTEpiymLBakCatc2juFgXc4T5JsLECK7m0rLp177obyiAJXyPfP5iJYGcaXGwFvIx7UC45+LrIlfuJYs6rXJBvlmy32QFWO/gtEbUSH7QIAqRdkITYU82v6pbnYTTTfcWtIReA==,iv:Zi3EBaDkF2CNIuUj7K69LvRr4s4LwWeOc4t72Jo42CU=,tag:+IJA0WxNMuMXBrO+sIP+kA==,type:str]
        key: ENC[AES256_GCM,data:PsPcm7epl1tq2wIzZw74Lh4MdAhTJnMOQh8N6y/oCe7x1vdlIaUsS6lFjoz52i5cZVb2IjzHR9NAaY5eZTcSCv+1U3O1Mjpq3r/LFflusau3ZUxmcNkrEfu6dQfm1TMlmwje42HFxq4DJdmJQH5NwRz2b39jVdXXZs9Mo2c2+tJvgX2a81a9sr4I8y3B/EzqBjpgwwpL3d3SipVZjJ+Y989m7qm+0Goc6SfThcQ6TcR1TQKRkB3rq1BCVRiBB+3ovj1CWRe5xYh4DjnLjbc+gwHn6QEt9LNGqaIQ0btIayPfqpLCHRgCbGQ1zUlwYL1Kgg3vTNd3Hi6KGF6lOFI2JIEb6YMHGizvcfdFM+O9oOnYC7d8X3Y5d646g6PLsrDpLi8C4dtLSDdb1nj6W+WiIw==,iv:6Hfk4nUdUKz2ufGNq1pqD8OpBG0HHjvYIj3mUjmjtbE=,tag:aiC5G8AfTJsfK6sPrw+7Lg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:CONc9tVCbb5TRODYgqGQTkXxKxLj0CC5jXEhZ+hnjA71wxv7o6uVDnqSKUJEp11Zy9g9oUMN+xUK34nyPq1Q+b9UHHUw1wzlKUAG6LFgubXfuDwaY3urBiFhbuOiFMYARmrds2Yb0cn8z4BRGrdPXCxw+UoH/VTDqR3VJEOKNV/yGeV+wETG0ZpH/jKOexKeC85ox9DWp6O19TJSATl1kF9K2g5TGvZLi+5rASwBHm5DXJvVGBDD44qWfAtdLnRjXxA2anSp27hx7VCew7kRkvZSkSKtC1Isw0pKH+ze1U9vvbNgZdn2w5eugq7yBeNGhcKFwRZNXP3YzpoaKOvvhC2Z6OwvH3XdgUE2uHzLFEwK/50GeUeLYFAbTqyw7iQu6TatVEfJFzuOsxlQoQ9pqXTUShO6BaRTQ8sDAndJ8QQdboejqpDa+/tC0oXVXpmNXxkg4tt7d8VUwSr0OqBHUi9i0HmZ0D2KZdfp8HaBbO/EmWmSS4mAMWxDrWDTDbbhDMOZACSAu+VLM0I+E+8CSffWded/Y4Its4j3UfSWiGGguWnqxYv/XMmSjIHZ0p6yDa1YHluaD8sd4BTuigALhTi8VY59Vi+RVNFl89R/OHbGdZOUVtFVpT0R1YuMNp/GHrcWKt/OI0QXsYXuou5MZJxyXmA1Cfo098oAjR4bjSQiWnYj6o4A3lSGOLA6slF7RKE8RZy8rCK4zluM+M6hCt4jdz7MbnX61Dzr6z6R4gcXmIPyxTnzGSgh4YfY7HqOrQpX7d2JdS/7F4Ob+sTqnSnRXCbMDAZcWj+wOePTtQYh/6sisXEDTej46gFGgFjnvIwF+ZkwAnnQr+g7Ypt7Pr6K3BrhMinHtBDqfMswbB9I1rGlDtnOpV4NdXlpIh7egviP+r86s5NoE3edd9SW5WlWy5Xx9O5NYLEcKdZ496DSqf9NJIr2nWJ/xFRWT+FQ,iv:WqxNBy1bXrae+lzDn+GD7rjYPvZOntb86TiBeHUHlog=,tag:5Z7nvSD6eHaNT6mgYvUadQ==,type:str]
        key: ENC[AES256_GCM,data:gvFvB7gpYFZ++9lh1eAgqEmX2rgHFnJzpA/ayYfYmcqBv0Ly+/AyVg4gb2ZZVixUXXun/N7mLEMLNHlpn1ZTKNCcrpM9wtANwc0v5d1+dyXmWVEl7QbErdCfO1Whq/dpRI4hLGvs7WIoIGHUn5WZcJ1FDLw5jAeXtuIIj3mnTQytBMnGjbtUXLhv+p8kEWmqw2UzJPBemlZgtcCc3zAzCmn2Z6O8n9vQRP3INVmAwoz3H9+WRE3Nbj+hhbpfXFuBtdiZUqae+yph9rd8ySvdIjJs/FmeE+vs8QEZnZIlJkcpe2Q+bBpNoBjYbduWeTWSRH+QhVGFIBcZrJFRMCp885vjJw4QYOtmFoKlbYxU2x9NYOb9jZZFcTCpZ3T0YVd54G3vbaMED0rsVF7t+jWmeA==,iv:3CAJVGgV8DN7mxgOzC9owsmw26EIopTn6978T+6wPjk=,tag:FNd9knfwpA5YXUOdV+/xnw==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:eZx4zj5y0Y9a9zLlwespGtsRpftS2YladNCD9M24nkarBeu4e4UpBYdr/u2S491GgDpDi6QLh4upFPF6ZqPZM3iHqs14yxJ2MrTL1Vvw+PhSmz9wfyhVUwOE/XhNkd3PLTOP/PtWMI/h1Rh9OQpbe1t5LfxXnmg1MIyWsjJ+8KCzt10HRdl7I7obW+cm9I8ZQKzx8hw6gnozPY7pk0emiwoGPt8nWXjrQRSVe6aHvHJk26sEPj/q7ZqP81eGEVPDd3n/fM7oPrtfJUnuxBCoD8Q5L8KEolCzYsh9xF2ECBdG5ycjrONPm4S1J6Xf+7InA4tw+Pm8vDb1spWMUT4OkDoeNVMPD3pORbj+0bDepVRFY5zzZCats7RVxtuR0z7+gmxs5vRkIamzYxIYuW4P8A==,iv:lPxM/opePc1lxV+er6LddSBHPqxvAykGHiriPwY/U9M=,tag:HnvWhxE+LpIdM+qtAfwAZg==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: k8s.gcr.io/kube-apiserver:v1.24.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - talos.api.raspbernetes.com
            - 192.168.50.200
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: k8s.gcr.io/kube-controller-manager:v1.24.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: k8s.gcr.io/kube-proxy:v1.24.2
        disabled: true
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: k8s.gcr.io/kube-scheduler:v1.24.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes: {}
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:n4KsR89fEck+qYYBSmIUOyScfr4RfXxx9Uc4XARV3yDDfk6m/4zBmD5lSyt8QhR1LTyJji4nVGrLvbSmiJCTQj1keHI1V+NyrCpg/l4X4AhwL72o4GPZQWJFeKFMHDYnL7qIMR6ORGayhrWH2J7ILdGIVZDDChfev51VptFXa5hhtTubTqJ8qkLoh/iT2ibHUQQH3uVMfgRdURJuYDaMPY9WB6bn10Q8Q/N8Yh4OM+Dc+NR6znU/m6+5ZOir7TtcP7m2JPDoFnqtCHcpwgdpBre7/7LDY6XmVZ82Mv4VM1GFW7dh8zju041HQL8bsQQur2RcCCgxsq8t7A9Vqu/twp4cusc4zZjcbSZP28JibbZOFIDGSqx9JF/pJkw3BlJq0yXgAQApD7Z47a4qFFNqu65+r6jBTkxcgqEJbWVAErBR6EIraLvx3f4DJtn+HjsU66r1Qacs+MmKjXlmxqR1IQ0CHoQLQwLbWOVSFdl37BFmP2q2fhvkf3SVBtKqIafqdvuoGDxqogSaBs8fZRRKr0HaMN+JQMtjFGp9LewDhVIkn2uLtQA1wwTb2gUCdwImN9Nyyfe/FKmKb4gHcdDbVrVg87UObydprVU1gsxPl0XUcz9VwwDsyxYYqWqK9lXWTs6xP/rWrNpdV8DCyWfySygh9bCF33/ZauxTpnDhrSwC3Zc/34dZCavawC9lOMiD92JIQUBSoQNjUEFjnlX2tRy1PFIul/OeElkEH1+EU4mDlvlwiSESd2XZgjmZIFv+su+/oMFpN+igLKW8FjHJPazUvUyhl/2NU2aDYLsu7KdIgS/ncRSXke+km6uu+YHh7sQiYTKMecg8axrGihuiWMepSIDrCqeeK3tlyBr+jcX66ODcj6x7UY8bQVh17ubk4sKNRg/jmV0+H4uwXpNUdXMWYXat1SeX1dSFDJZtkyJlT6+U+eR7uGCaqZR1YzYwlq7TvBaPS+CPwWppaj/R5c7pOJhJclcSOGKI8yzMEkcysg/p8uKDBJPx4GJUAUABT3WpYA==,iv:EpDAWQxuZuLeyclqZOC9MaUm+/g0a3bdukCwrsA7Ok8=,tag:5BJJqwLlsiKUCnh9oWidNg==,type:str]
            key: ENC[AES256_GCM,data:eSyR5bDBWwQNSk9P/WWyKDgEqnlLMuR5l1/U7tHXITpVt8rcxC4WjrzQrVuRTMwH7RqJCOBpV5G2VV3cUHh1dopxrtLTvKuURkX1iKtyjeH6Dq5/dxyvsLNitsxoKJlEZnA3XCy4jqm5nklLXNfRGjAgqQPajI5nnJafKBKy3UYBstBNY6SkgvG1M+noHoprDPJiZtsjffVdwd7B3DLLB4ix06HOrdoElEyLyRvR8XOLkFxum4XZLI/HYAr3+c0RhOsjX4XUOge+p51Yj9pidr5lyf3LK/W+tukgK/oi7mQjy/R6QgBYP756XObOkmhO4WH1CoWDqtdpTItEEGXa3UfE5s4jmb2WFx7M/8Oc3Ruh6qO5YHY5DR0xttXFNM0nhpkc+JlJMNyhTIF4n57AMA==,iv:n7dBxe7OnDANk+vM7MsQlqlOUs/6gWT42gJYUITWccQ=,tag:Kn7jlhclpAgqHhgVQNNEJQ==,type:str]
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.5.4
            # # The subnet from which the advertise URL should be.
            # subnet: 10.0.0.0/8
    # TODO: These files should be forked and updated; Include a network policy to avoid priv escalation
    # A list of urls that point to additional manifests.
    # Also doesn't work on intial install with CNI none set.
    extraManifests: []
    # - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.5.1/deploy/ha-install.yaml
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.9.3 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2023-02-02T21:56:54Z"
    mac: ENC[AES256_GCM,data:8TubO0KIeGhbzrvpcnW6JGLw+CUpZvQBYgUFshdggX5Fmn0EIft/PRkz34+U6JbV+9QhAvOOpcOUiZRgxt8b3OAYJUGzjxlzEceTjJjVeMvL++/XCqoi6U126xO3/FqO3pmHndJpx5IoQ0NlQjs5Bk33fo2+NSJrmTqHmr8xnTU=,iv:j+Y1+icJWzXNGolqnEy1L3+uJj/9tp7pwP/jyEoGe+I=,tag:Ggbv0E0u08fXN8ckeQhsOw==,type:str]
    pgp:
        - created_at: "2023-02-02T21:56:52Z"
          enc: |
            -----BEGIN PGP MESSAGE-----

            hQIMAx42lmLHwoZwARAAt0LblGxdOl3rL3WQD/ClDMh89gGirrJOsNEaM/bci+xL
            sc7RlUU8P/+KHIOezPxB39mBSXU1Oo0nx6rzLGYhbtBF/08ms4eQoHSyOilph2pr
            TNxdeGkohJFLGAKR0ARu3Rdoad7ZZy21ZyXpnj7CgJst4cdPjv7n/Jnmy/WIhwtl
            kbpMWK5uTt2m7cN/1/4qROerxwCF8eGGgF82haejYQgoXxO4M5VnkaJgHHT4mbHG
            J3kIh5W139AJzhK4gV6d/1yCjfovSyXw87UYsBD2xnFljOmUkr/ezHC4hE7Yxqfj
            4hCTb9qV/1HRMhe82H37IzwSBQZq7RZl16gSz0SsD7SHQbxJffRSwBTdYwvUx/kv
            wNF7VA1RqViRcaLPL8R8S9nPxdFF99JdufGTlDzteHIjQx+XfrGNKZuBo68n0Hk6
            cpR5USyBwgZcsBp8DP1wZCMKXDhvdcu8vctAn/WECiSccVQU6gLMNRTkMLHqxZP5
            cfVTy2zxqDZ2sD9xKQRtd36FF+GkRlR8UFFvFxURd9VKU6NqsGmFAgPRT4VOkVov
            NaLSksc1Y1xyvBDSLhp5F+1fRufso6k9oH8zeE76gVkQZeY/6g7O/w9brMW+JHWX
            dnBxbwoHrUR0vY64ag4q2POzemS5hlO3LNjAxXjVJzCgozBfPuP0FiRYi0rRmfrS
            XgE3eBCCRQQBs15PiPTO5Q7x4IGGiofgTzn2A4G0KtGyB+8nPIozye/lpIj3nUfG
            KTnIwGrB5CAgn+wibc+pgcG3Oh4GzxLZRE6QtZE2PlFZtyTX8997k+w+V97ylhE=
            =D2up
            -----END PGP MESSAGE-----
          fp: 0635B8D34037A9453003FB7B93CAA682FF4C9014
    encrypted_regex: ((?i)(pass|secret($|[^N])|crt|key|token|^data$|^stringData$))
    version: 3.7.1
