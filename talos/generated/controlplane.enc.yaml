# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
# Indicates whether to pull the machine config upon every boot.
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:XMAISKw7wqjtIMIg8XsEfKHAJhd1mt0=,iv:ew8C5kzmOeFFwBAcX9VtUy0a7kTvE7Q7NGI4M/HFQ4s=,tag:9TMIfydfyykLqoZQoW7uaQ==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:6Io/RDGo/VaWXx8IsjByo3x3vbS2rSH0VQa9pZGvZ/9juphjm17bfnCHUj4RynhwNanP5ayQO98HqieTkRMcI5ralryYVk1M2D3LamB0R459Zc2TrP4VjMWJRIsSn7K/jwN/Iq1i6ycLuMwkpiOB3nRxbmIXjuiwRsnLwxU51KIwgKyLebdjNQjz63HTMUz6De2JE6zskFI9DhydXb3nBRVIUSb1VkEWZkWxEVdwpnWka+9FeMU1uTZ+H18gFZ+aVW344i9clnmFVpNhvnZZkfxGi6TRnojoLAjnqm221SwH0xfQaIzVefsDIwU5nnyqIBWkYwQp3X06rRB2NHtnQpb1xQUATmB+KKKx29PEYoDourekcQ7bMVpcrzKjmNNt3lDldvhx7bNviowWfBmrMEay8Dk4U8y7bdJH0WLVL9+DL21bnlkNo0TlUePlvVOlffBm6Xsh6fAPZlYb/L5Yq1BwwEjWdsQXT2OrSqzA7Jy5XBIY+C+Gy4PocAU5oV/mGFhFp9if6e0mmbcNCMj0AF7Mal8MI5IZSUOcE7Gh0Qc8MnCQOv20SxR90W3I+GW9vr169PGr0hnSKSKPP3s62lXnVSdh3jdsv5h0GY3jKZvZVfRtPW7te2Ap/NKI6F5tdr5xf+DXu6Sz9H3935kTPwjOGvgDwXII1xb2TGL4VNk0vf5Y0o73oqXQLsszuDkGk/Crg26s/lrMQnkK2F52uCKCoP9jU2HNwJ3UuPjXJ8LJrg7/o7pQY7iTqrDxtLN4O3uNnMGBJplPGhPWLWvzL6e5owJC9jhIpqmtZ2KQtKOqUv+7/rA3x4mqvwWGP4eeRIfJ3oMTJ7C/0zeGdtO1ukToSWYH51eMLuriTMRTZsnMgfsz,iv:YLtFChDbt+S5GXbBomTkUZe/8SBXTygNSIN7iKDProA=,tag:wD1ZJQRLY0Fy8PEcmNOlmQ==,type:str]
        key: ENC[AES256_GCM,data:5NSFGzkNBrY18KvtXPOt8R9Ia071nJDEgAwaE2av1fjl4HMHmzZgYISBTOyscF1DPiq4tMR6mpXsrzL2owUAAsmwy0fErwIGsLiYp92dqPrtRAeOO9oPpW667E9A581ZYj8AWWUTj9b8cArdDEIn5VQcHxWzmyCjzLghmo4A8Wh3+TRBQa8qrvjNGiBQAckor3dLOChAGyMYOaNPtfETfnNdbtsF2uq4KjcrfTT3VYhJTNmj,iv:ehyNWa+w/WWSfzb3APudLhaw6Inhv1JmEUIyk1PBKBo=,tag:pJqbz7mOAB7+L60hXsGHNA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs:
        - api.raspbernetes.com
        - talos.api.raspbernetes.com
        - 192.168.50.200
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.28.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example
        #       type: bind
        #       source: /var/lib/example
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # `interfaces` is used to define the network interface configuration.
        interfaces:
            # The interface name.
            - interface: eth0
              #       # Assigns static IP addresses to the interface.
              #       addresses:
              #         - 192.168.2.0/24
              #       # A list of routes associated with the interface.
              #       routes:
              #         - network: 0.0.0.0/0 # The route's network (destination).
              #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
              #           metric: 1024 # The optional metric for the route.
              #       mtu: 1500 # The interface's MTU.
              #
              #       # # Picks a network device using the selector.
              #       # # select a device with bus prefix 00:*.
              #       # deviceSelector:
              #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              #       # deviceSelector:
              #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
              #       #     driver: virtio # Kernel driver, supports matching by wildcard.
              #       # # Bond specific options.
              #       # bond:
              #       #     # The interfaces that make up the bond.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     mode: 802.3ad # A bond option.
              #       #     lacpRate: fast # A bond option.
              #       # # Bridge specific options.
              #       # bridge:
              #       #     # The interfaces that make up the bridge.
              #       #     interfaces:
              #       #         - eth0
              #       #         - eth1
              #       #     # A bridge option.
              #       #     stp:
              #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
              #       # # Indicates if DHCP should be used to configure the interface.
              dhcp: true
              #       # # DHCP specific options.
              #       # dhcpOptions:
              #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
              #       # # Wireguard specific configuration.
              #       # # wireguard server example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     listenPort: 51111 # Specifies a device's listening port.
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # wireguard peer example
              #       # wireguard:
              #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #       #     # Specifies a list of peer configurations to apply to a device.
              #       #     peers:
              #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #       #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.
              #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #       #           allowedIPs:
              #       #             - 192.168.1.0/24
              #       # # Virtual (shared) IP address configuration.
              #       # # layer2 vip example
              vip:
                # Specifies the IP address to be used.
                ip: 192.168.50.200
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.5.5
        # Indicates if a bootloader should be installed.
        bootloader: true
        # Indicates if the installation disk should be wiped at installation time.
        wipe: true
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: ENC[AES256_GCM,data:xivlXQ==,iv:Cxw+IQaDkLxo+Ex0VE+odvSWadqZeP42xjai5VmBqa4=,tag:E12SBpJ3Asq+gM995PQnZg==,type:bool]
        # Configure Talos API access from Kubernetes pods.
        kubernetesTalosAPIAccess:
            # Enable Talos API access from Kubernetes pods.
            enabled: true
            # The list of Talos API roles which can be granted for access from Kubernetes pods.
            allowedRoles:
                - os:reader
            # The list of Kubernetes namespaces Talos API access is available from.
            allowedKubernetesNamespaces:
                - kube-system
# Provides cluster specific configuration options.
cluster:
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    files:
        # https://www.talos.dev/v1.4/talos-guides/configuration/containerd/#exposing-metrics
        - content: |
            [metrics]
            address = "0.0.0.0:11234"
          path: /etc/cri/conf.d/20-customization.part
          op: create
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # Specifies time (NTP) servers to use for setting the system time.
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: Uyj95Xbi-Vzyb69hSO_bUc7dyGSKO-Pz-vWsrNHz_as=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:M0NlNSnSERLim/B77kl6RF/ufaQlEOWZ3toV38iccXOcp3e5Emay5z2DbzE=,iv:wSUQ11+hQ6uwNikLr8lDJ8rXvCJ8KBSg8AShYiXHndY=,tag:M4uW02TQlT4JLQQOcVQs8Q==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.50.200:6443
    # Configures the cluster's name.
    clusterName: talos-default
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        # The CNI used.
        cni:
            # Name of CNI to use.
            name: custom
            # URLs containing manifests to apply for the CNI.
            urls:
                - https://raw.githubusercontent.com/xUnholy/k8s-gitops/main/talos/integrations/cilium/cilium.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:eoYRd87pZ8nR3tE0M5iwQY5nuv5Wa4Q=,iv:aEsMA1n2GvgiTX3PBjjlSzz+8BdRaypDIU//Z4zbJgE=,tag:Fmn5+QGjp5hhQRDG/oy1Bg==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:bLOA5ISjhONQuAwlyKxhURlDab6+vHUccjy7b3aAnF7aDlGrXi8I60jHULg=,iv:7ISg7YPysyNsfsA55ld2H7XKVzuzf0RmlkoQ2Ir0FF0=,tag:ULAQOuqO7j/sfJ+AncpvCQ==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:CCiTfD/5fsZdWY15e5gV7uyjb8NxUxHTqYp/5Cv4S8qF39xL8c+iQWlbUx0UPXW7Ud07jue/ckCzy7shW3nomnboAnzlVBam18hawqLJZVgRJH3n+n5ELbynuOiRHx945iQ5ak7MP1Q4LSVsNB57hN1/1ao4IpNwcJJbqFSpfJ5MKVZHmHO2IukxNDDHrAUbo7EXcnh99+1F2Mnm5OiFxx9AX20fUSOuR0KSI1H8GSUJvqA2mTUyncRlUX9db7+akfB6YGteRgOTJMTp0bfO+2fSJf93ZmMyCItveKy6a6nSghYTNrdWqRPY4fZqVIg77F1lMJ7ehi3W82c5QrK6F0TSCHTfcyhV/JIOlCJ9KUNP8e23NO/SbVwGn6T2eXhTT2nHVUjcw4WQ/d0aMEFS4eOapF5l02x7iiINEdSdcS9Iz9Cyt18J/KdgIIWnjKjQ04Lpbko8LYRb9jD42gQC+5rLWHkoOYk1Uvzhr/c/SbmFmAvC4SvBX0or7lKWx1wjf7HA0tURvGaXITqfTuJUmfdvnINYkPt1QvV1WXIPCw06JvH8+ChJsh/scz2OTVtTSHg3Og3wzBXsBhKMBdTLD9pBGNYQtp0r3rMXwK2Q2x08XSQGzpnxLDsThB/P+2fsq7gxKM3t5VhlFwP8ZOtK/2LenIp6HLSUJRj70sgJCdz09HqHwZUiUQW1ntYDVKIUgUi0D9Vl60y2fXtowIUTU0k3c6e0No/F3/yyvRM7zb7+Ze3NjcJpACxligNxp3WQzWQudl2gKp6r+vPhaX898IDX1023r2/xzjRln0ejS+4ge5FbKnlV85HmrORIQjTSeZRbqnLb/HyNg/5h6nOfo4jn3FesYPSFyca4jFtywl1jip8Gjhuguoz/+ZqFwxa0/gbw80LixWp1J+zc865MFyntZTCWB/7nL5d+ArdWCMDhLp4n3RKtJ2OYzRQUizeDD83tTsMU46V4F+0SbLjTrslQKLpN81wqz60MBIOpHdUWuhl9+C7W3bTZXBWmP27etD9bp5I3xWoZ0jZIJ1p7wqKxO3fxS1MdVl3I1Q==,iv:sWJfFuvZ90Nm9niMCPa+AZlMbEUrG84Usnu9gQCHPJs=,tag:Vi3f8AaG6C21whtjjUhcLQ==,type:str]
        key: ENC[AES256_GCM,data:v7Ob+lnnEWBlHNR0C3cJ0+FjQAYa0aP/BYyMY6gc7qQWGC7id46kDcy0BpOM//mriC6SLB0NiqqBJDVRzkSvNC5QMXmY5y5B1J4UEDB2J+IRNrv7olie4SNNoD8hljqJbWQOlotWSn4jciCSYBxncxyTTohL9dt3ADmKLh8s6Xbwg03khap2Ksg55hBwSfLLXTijoSCYpVkQ9PJmbEDNJ8gIdd5rr36K1SRUF/OulvoZelVKzvoFTX9Wk/3nihb2MzDwYaQxH/QYZT2nQnhZLTK0HrJtKXh9Lay74AjXDOUKNQ2CCgHDmaqblApoBQeIRpVKUVB7o7Tggsk1kKFAwye1dnt5/5w6k8zHUxOrhtsTps35D4gaxkUHv3oOxkm92jQT3QTxXOZOIKRhXk2LMA==,iv:8a15bN7uE2hf3QIoigTP4AW4dC3pwyiZSvPSdiWxN5k=,tag:Jm3VouSC9rlNXGPIES8fIQ==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:i+naI54nrrfAPMehD72+elezX0DnRmJfyY5+z980OFWsxDjn03nugnmPqd5pJaRQEFHq5tsbirNVFkmRevyDm6Cznf6z+R3Xd82I/BZsz8onihoIcMNDC034LGT85D29ZYNNAjM92zPdhYrIJaI2YdqWxvbnG1AFpJrhnhifGD/VJlyTyTh+Utur3R9MQMvk0Jd/GXr0yLz6Vd41xkI8s/f6QSOyKyDN/bhoigmbIPue8q9+y7tH9fp9DtoxMHZKR0Z+q3spsMNgTNdmvmJ04XHSi7+liUBw6lL9DOPG61DKtGTOWN11N+956FVMC+W/jvilngqxEaDC5g3KXI3hGDg0pFPHlQiB+fA3+TfLYSGKUbPnQjqSq5bvxswA9s/OnYf+BLAbt0hMEzyaTXiXbYf7wbgQ3mbZkIS2uqxRwDxIEC+wOYnpjEirjt3UlBwzIGYAGKAN9pca/tIwKjN2CIbZcN+JBfGEAfn1pJqRGpOX0HUFqc0Bahihb3QOlYUZb4ewqJHYI5j0LbOYE/lVVVP6JPFzN2mygwPFd7No0gKm+zrnQqMbw/pivEMs1GqTSGNu6Yr8CTbhDYha3ModvFdBS0zMO+PRkX36/8et175PZEsx3Gldnotj1cbPgpe5UyEVkNcnCYEMIPAdBHC4siKqGy9J0Z4N6+CMdQEoobkp5qQC7dLGHMSwGzTVJLmLesVJgwC3D1GLUFZ6fPXWXeouXsSuqepXDNM7Mhb0KXWeacQXK556yfxF+38SpKTICowq8GsQTPOsihG5IBVxnDnIRq7GAwliKf0MZUx5vwib7v26Y99oAqSWAro6B+1KF22d/gRqudBEfphAn/VadvGtC0frODdakFGGGtztTZIzy7OGz5G6rk042vKnFuE7TT9lGMlN7p5mCBpB1OwhCz21tvN5RsqTNxIWcFQkEr3HKEu2gWZg86qSVBiGlBbV,iv:7KmFHXneUabRR3vCP94qwK/MKoL2PXOpJCjzGwmwSSo=,tag:LyvV5W5dcsftO31aN1ZX+Q==,type:str]
        key: ENC[AES256_GCM,data:aQ14Nr04S8XXC3RWwhBqlgmkDnELytNxtIPs+hbl3vi+gsjvul6FgYvDMrZUWZ3dXMBks7mUtiPdrTLPxr1Z3LvPsKZxedZes1yd/Ior+1T0JJqwYBnvXsVdDsRQyoglQ/gLDMRHLh2n6x/hPnaM8QDMUjoxyr9us9nhNavjTveDLAeO9Qewqy6JuBlLO6XgK3jWg/IY6ktoUmnTmqvMkg2qEtvONO1QkL6UdWHhNKvs6wqWvqDiQxWlVtmXLiMKXf8wXbPfCXiOa1RIvniZDrNq0MeZpNO1Sj/IsOEvZeQ9k0vBJsaHpI8Jc2hbBMBw9LJvuqi9TcsGOCkcXT42O09F6bXtopLikeGvLFSfImiciSyS2a971IPRi3sLN9SmDbtgchfbOXvboda+J9gKtQ==,iv:IlTGZwyLC+mC7kBjg+xF0K63K+EkoSMXufld9AsJA8s=,tag:vnZzKwo+4uG/USSE+Wsd6Q==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:RG4hboric9vnOQZAFtbP3F/RiKJb9wFxgy4Uf87HjKIDzJDvSazUtASIaS9uYPDhRriC9cZm2LCEVetFWVa1BpTmT2J1JWYwCiWuT2IEArrwomYWaQTP93YBadWfyfDkRI1b44QXlL7S/4NQ+yn5bRWK1Vb4sOpfgQNgkb8ua1SMgLQMcZ/HFNwU63cgI9FG/AiXRUiwmLSHi2G3yugtGxQaQiNy8fR9uem9gpCc8ZNwgSxdHVdADrr2ihqQKk8Nsk/IiRlz816SI59+hshUIUrz6qNtsygjGr6hfFjDjEiD7VKblFSE1bVLoGjQsgpNHhjSIGwc1ncrjFJLD9yW5abeLKnEyt/5hVRGK3CzRCVtQbN1qz3XOkYD77YofatQl2giHbHT8QoKfMEJdisKpQ==,iv:RKCgByC/ojSa8tKKGUV6qaOLMbr7lw9m8yFfAKMP/8A=,tag:wTTw0OtX/7yaUNjNaI0QHg==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.28.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - api.raspbernetes.com
            - talos.api.raspbernetes.com
            - 192.168.50.200
        extraArgs:
            oidc-client-id: dex-k8s-authenticator
            oidc-issuer-url: https://dex.raspbernetes.com
            oidc-username-claim: email
            oidc-groups-claim: groups
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                        - gateway-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.28.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.28.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.28.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:+o2suNc6+KOSHqUkpkMc2yxDWrzRyEY/VVevlaDo6uh4I7SNYNUNHqzyaEg2orlNaLtXX+Okvd7oSHqUfQq4epZfEVZCkV5Mhwr91XpTSDEmKJLuZ2EIPYq+rer63DC6uIgJ1iz77UD/ettx2b86ZmFfsgYPWioILPKBcaRQSfPnGpJdHZwH4qTXld4MLYxTxiyheOHK3+Njf2iKqdKRC/W4qepMI0fESnw+2E2RQDRKbLlLjAVNOE6v1Uwry+sGOwSTALC7Lyk2B6RCCpKNybKb4vs0r1GeQghP2CI9B5QwxxpJH0E3z/FrweLVqg00cG+yqs8qx+OHuziZFSkzdK7W/GoMkYVF/+/RtRT5En0rKmiigz6/+6KrX0RXvcdeq2WEX4oGxtUoE5C/76dAA8rfupM+yV8eklUBI3lRscHQTCKzqs3/gQLs5y6JwFZaoQGOXysY8NlcxChH/mkiAJkEXHJx0zFkavlgz+FCJs12ImwjtJl47EHW9QJowkTSRaVnm/HI9mJSZEqpmpM4vpdjqqyprWUKEU7UtHWCtaV3lSJqr5sAnTbIkuQT/2QRf0uCOGrvwO29SZr7G9F1abq/sUaNGtSiKyynG2HWPt/9WBj638l9ZUmkiaUCSZ69eetEWzQDNc0KpdgWAcbAhrmTOVBYmRB5ge7+zEIhtmd+DRoTiL8gOgHDkwtgT3jh93yH9kmQBw/78qnh44Bif5+A4/A2BJprJjm0xZbPJxrtUT2KNEBpR3iyv30nEw1/GW+oIwnKAcwwEdmat90OUMImqaWv0SyzFKwcIjcTAn3TSOQbcnCimWVaVuekNAUr6eM7qwqb/wltzPFBppn9vFudt5iRV0drECRw4Tu5h1InywHIg135UdnVVcmouWStw/W2ECWLBJmJwdpX0oJ33LALE7J7gBXoeC6zqCaR3CkKzoC2sDo1V54STxmLlmUvL60UH0FYisY+k099u/OX45VaLn8skejOKqrrSZk87E9pxFjyTg04SYT8Pt5nkCnS28TcvQ==,iv:lCseR1ONHqJT5/CtNumaSNVOe5YOlfvdOilQLEZ+fK4=,tag:qFDvSac67opoIJ0xL458FQ==,type:str]
            key: ENC[AES256_GCM,data:GCMF5d+H9LTw3vd5JdBmD97tB4ZhPKsJK+4YAi1mJuBXA+1Dz5bSZU+2CERGRuC/sj6egcjo3G4uecBMFqFqIIohZhK7/R2FgYrX/sBYMuW+/E7Qt9DHPB/Ew+QT349As4XVKaV/hb4KRu3wgs72WzbxS5Ir7x/fBC6PtxdYG5Nak0d4FWpiYIC4/2fEQyLzJj7GkJAjSJCNeXcNfWCfOLAXlj1AQV22GeV0CexKtOcaINhyMywffW3BWBOHURZX8Z4iG2AA0A87O3zPliy0FQBFvKaaf7k38N1y2NdFl9cg0zbfSMAfhex+ZAia+fgq4J1ghGQZliPx6glCZfzKB3+/ieFI/R5AZ0k+itMVwSPOW69zcIMWGLlqRhrLBOX9ESknxAUy0AZgYs4VTzEEcw==,iv:AdEj/prbm4ih+BwpyUTDJL6eVLdWOWYaQGSqwL9bQEg=,tag:BZSLqusJsMeL6K1EvTiTwQ==,type:str]
            #ENC[AES256_GCM,data:Pzs+JMfS98htXli1GmNHA7GQ/BcSAamPKXgR5Gdpo5/mR9eoDtVUpmfd0hqor7pJAmILuRr/lA==,iv:JPOORYsVpb7jaDiEg+gjPIcUqZjAJKiZxvN5kEPmA0U=,tag:nlXigqI2u9EE4vNzWDOmXw==,type:comment]
            #ENC[AES256_GCM,data:F0rd5B0VRwjmzHtbd/81jlcvCx0KuL8gaGJn9MsHujgn2TYq/1t8kqFtDQ==,iv:cQ6rf9djsz2S9DZhIkcO3VEibmNbalr1Qc3uIn5tv6w=,tag:Td/QSQ4FMOxEx47x00aHQQ==,type:comment]
            #ENC[AES256_GCM,data:dNGpOC9m6+aOsc4YO3dVbjdNZ3xtlhfRpYSwIf8S5vE9GymLM+A6jSjLuAVKmtJUEQUMQw6k/doFiyNQC9xksR+j+t6pGTYLVx7Zvtt7jk/lNStKe8koMZA=,iv:1S1nAScNPbdl39eCT0sPjJjcxgGKgFLGZyCQs4aafFk=,tag:9r7hMzVcFpVc8uYKU26ULA==,type:comment]
            #ENC[AES256_GCM,data:1MsLchlwThNGoKqruz0HvjTC6g==,iv:LgrKd75J4cl14YZQD2GVAUimqs+Lc28JJWSB7MHlr/s=,tag:Iwg5G3nPrHAMAbIMR8Zatg==,type:comment]
            #ENC[AES256_GCM,data:KGibLCyOzga5MmLUyhDqy/M=,iv:4s90/7T5tGRapP+ODfFDAv75Dpy83vAsVmpkn/gRLcA=,tag:lkMbGTOB3XaBG6Zphk/LFQ==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests:
        # Install the kubelet cert-approver manifests
        - https://raw.githubusercontent.com/xUnholy/k8s-gitops/main/talos/integrations/cert-approver/cert-approver.yaml
        # Install kube prometheus stack CRDs prior to cluster bootstrap
        # Ref: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheusagents.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
        - https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
        # Install the Gateway API CRDs
        # https://gateway-api.sigs.k8s.io/guides/?h=crds#install-standard-channel
        - https://github.com/kubernetes-sigs/gateway-api/releases/download/v0.8.1/standard-install.yaml
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # Core DNS specific configuration options.
# coreDNS:
#     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2023-12-12T20:58:01Z"
    mac: ENC[AES256_GCM,data:Bi5JL9u2/kpER8GjFn0Wm+WtkkQIdP3E2ulLDcRom9jG8og451y+dx14APPH4V7UvmUhf++5Tygolw3LGbnxRmDGqZB2yb7Hhp41Fkk+wT1wfnD4Xia3SdcnNvevZxgU8HD/AV/3c0H2n3Eij/YFoLcHTAjyV9xVBonzkCo6MqU=,iv:aaLGYU0dBIGY1MWgHahqiaAk0DlaBhKAa6rFTPevSgI=,tag:2gndy1ytanD3QlFy9gCeuA==,type:str]
    pgp:
        - created_at: "2023-03-01T22:28:05Z"
          enc: |
            -----BEGIN PGP MESSAGE-----

            hQIMAx42lmLHwoZwARAA2kUJZUqarf2zlT4oVqbthYOthCrSiJYVUbGKb0HesQNz
            fULs97UZkwPW1si0AEQTALHl4JKbLotbVyLo5yi97y9hXQ0rxP/mOkM0soeHy6uW
            HZK73WvjT2IDJbX5JsRP+X4HVSPHirY3W2M19iRZSkfSpzw9vXo7CV4J0058fdKO
            o3EcKV0v1W0lA6sn5LRvSu9sgPFStna/5j23lD8I2wMrd+Mm5ODWOsCZetPhPNQF
            oQLSLS/RzLOvvLlpfzoL8ReS15hEninxnqqK6mSaXUGCE3X4N8B0EkXaQqTkLzAy
            ry+pukH1CHUVcSmD9KhNSnLOlrRcRHAj4dys7jEb6KObM8IPa32P8mmXgqerb0ty
            x7dMtHtQPCDbin1S0Wk48tJfbvabOCaMx8MarSgphX9QVG3/XYuSBzGHNMTmxiVv
            uC92xgF9aawNZFtWtqVwuWg6F1BKir1td5Bfvzx/YmTzvxXfuZzi8yOnNRJzjvuP
            JePG39tncrTzS3WiO1Y2z/OGq56Ccvmgh6OOSmh+wb7dK+404ZG1pqNhs6UBa8Tr
            xiXGkug6XWIxHITt7/p5/rzPeOR+LIcy9w19t9G+ytZF6ynyfJmuKCwaG7HdGifr
            IO2oddu0E+rkLMDctK0W6uH+4vCJHgCrwTKDxgELXmEL96V/zIdYq9haeTukgrXS
            XgHZ1yoPJxsugH/Hodh0x6zFdB/vw8Wu22dRLvPb7AaChUu1g7We1dRMfeX/gTAI
            ntvgPe+W1YOxcX6fZufjboMrc0AXs7Sas7H484TpRDYpXLRs5HBf330jOYv60SQ=
            =ieVA
            -----END PGP MESSAGE-----
          fp: 0635B8D34037A9453003FB7B93CAA682FF4C9014
    encrypted_regex: ((?i)(pass|secret($|[^N])|ca|crt|key|token|^data$|^stringData$))
    version: 3.7.1
