# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: null
  bpf-nat-global-max: ""
  bpf-neigh-global-max: ""
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  conntrack-gc-interval: ""
  crd-wait-timeout: ""
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: null
  enable-bpf-tproxy: null
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-legacy-routing: null
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-change-grace-period: 5s
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  ipv6-native-routing-cidr: null
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  tunnel-port: "0"
  unmanaged-pod-watcher-interval: "15"
  vlan-bpf-bypass: ""
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1hicncrWEMxVGJjZmtyMWVTYnVrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ETXpNakl5V2hjTk1qWXdNekkyTURNegpNakl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3kxZWxrWUIxSEFMWGt3OGVMQ2M4UzluUGJYYnFuSFNybnB0ck5oYkszK25kR0I3MnQKTkloRm4wZmpQOFpDdDIraGNYU3krR21rWFV6T09XeEsrVlZWVEQ0cm5XMGlRY2xVbzZSa2tCU0FSK1FyL2ZRcApWblovQkNaU2RDdDZWOGE1Nmd4cEhwb01pQzFQcGVwY01hM3BCc0ovQVVXcHByU2hsbkU3WDhyOENoOVZhcW05ClhvK0w2ZWg0YmhnUDc1VVdRZEZiSnorUWhBWVh2Nzd5djYrZDFFc2NxY3AvMS9kWExzMWVmdjVBQ0JjUkM4ck8KcDBrYjNMMFhMOVZNVmtwZVlmUzRnT2psYWZySzA1Q1l0c1BSN0FZVmwzWFdaWXBHSVVwaytTTXl5b2lrTVB0eQpoZERGNVF0QW1XSU01UHo3WFp5RXhUZ1paQmI4TWpjZWdaSHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzU29VbUhnSDRLUmZ5dzcyU2pvRHEyL3RhUm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNFlLVk5zeGVobDhkYnBqdVNNSnRkRStWZ3BzZTlEU2tGc3ZIYWhIVmxQNWxLU3E3bjlNMi9zCmdGcU9iTVIxcnNuR2s2clpMMTIxVW5TcitNdTlvZnB1L2hwSTFWejdOMUg1S0thMmVVa2xvTExGZW1uR2ZaV2QKbXloVnpnTzZFTUJMeUcrS2h1VENpVGJhQlBlMkJXNDh6SU5pUUllMUFCS25CSHNMQ2k5YXpyYjZaRHJtenU4cgozRkU3Z2dXUVhTbSs3K0pOWUJVby9mWVZUdWRyNVY3NGpOM1dQMDFLcW9UeldGVHZuR2hvZnNNUXBERG45ZW5aCjVzd0UxVDlQRUZoVFNEeXZHcEZpeUJpdmMyQjdWYWZDWDdaNGo2RmZqdHN3aEY3d2pvK2ZDQXAxWWx6RFJOQjEKdW9tUm9jOEdkbGp5OWdlc0ZoWmJrMGZrZDhQZGxRUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc3RYcFpHQWRSd0MxNU1QSGl3blBFdlp6MjEyNnB4MHE1NmJhellXeXQvcDNSZ2U5CnJUU0lSWjlINHovR1FyZHZvWEYwc3ZocHBGMU16amxzU3ZsVlZVdytLNTF0SWtISlZLT2taSkFVZ0Vma0svMzAKS1ZaMmZ3UW1VblFyZWxmR3Vlb01hUjZhRElndFQ2WHFYREd0NlFiQ2Z3RkZxYWEwb1paeE8xL0svQW9mVldxcAp2VjZQaStub2VHNFlEKytWRmtIUld5Yy9rSVFHRjcrKzhyK3ZuZFJMSEtuS2Y5ZjNWeTdOWG43K1FBZ1hFUXZLCnpxZEpHOXk5RnkvVlRGWktYbUgwdUlEbzVXbjZ5dE9RbUxiRDBld0dGWmQxMW1XS1JpRktaUGtqTXNxSXBERDcKY29YUXhlVUxRSmxpRE9UOCsxMmNoTVU0R1dRVy9ESTNIb0dSOHdJREFRQUJBb0lCQURKRnJkbFlwNEpKTWRqQQpMSHpxWWZxcnF6LzBaajhLRlFDUHlCeFVSRHd4dll2REswL2dYNXBxdnpPanZ1RU1YZVlkVmJmbDJ4U29ZYW5yClBJVUsrREVGUU1qVDlWVFc5M2pDazdqdFE4WVg3NDFxVTFPM2laSUZJWnkyS1c2MzlCWlpNK25zLzFNY2lOaEcKQk02cjdINkFOdmFxN2VGV0Nwc09Cb0N4V2dkbGZFdW9sT1FzaDEvdzNvVGd4RTh6alAvdmhHQ2h3M2VLd09KVgpCazFvMzZmUHZGRWRXR2NpUnFZSlJHY1ZxRlQxbHMwRmQwQVBVdXNvR1NEaFRQQXJJQ0t5UjlqY2g3YVI4SVZNCnJPTFRNa1hONkZEZ1hUZFllL0VoQnd1VUREbXpYS2hCM2k4bDdEdEJpQk9TZWcwNkxNN0lORGFKWXZ2WDJFNXcKenNXN3dTRUNnWUVBNmF1ZjNKa2VXcDVHTmNxQm9GYXRBNXpuWnZvZC84V0I4RFdIVzFqUXBrN1ZuZFA2Zlhtdgphc3JDQS9GZTlWUlZCbC96ZklveFZNdktuVEZGVU1uS3Jjd1lCUmRjTzJqRGdET2NEd3MxcEIxaGdMU2lWYkg1CnlydkNKcHRHUUJmVmlHSHcrUG5SVEgwNlhNRW9JT0hQa0I5UnNuOXJOSkFYODQ2R01lNEIyUEVDZ1lFQXcrelgKTEx1OFVMYU51UGE0R3kzT0UvbTIyR0FJbjF6NnFNWU9GUEljL1FzR2tWNmQ2UUtlbFBjSW9uVTV1TitBQ3lxdApxcU40clo1cUZJdXZmY2NsdlBxSFE1WE1sY1ArMnFYdCswSU11M25KcGJzYWE1WCtrTjdOVzV5K3R3ODhIVFZ4CjRBWWVzOE5Nb1k4NzdaNGpBRFc2bzI4NmN4TGQ4WkVYSnlnbmVTTUNnWUFYRndwNDlmaDE0K1gwTXNxVVdYeEgKT3gzeW93eUwxYXg5WEF6QURncXdKR0lmY203eUx6QVNVVzdTak90aE9yQWNMU2NXUzJHTWk0YTkrYnhydTBUMwozNDhRRWJyZmMvNjlrRnYvY0pBZ1kzYmJEUDV0a1dTcGo5d2pqSHhvb1BKTXc4RFlHWGVCSTI2ODg2bFBkb0RZCk1RQVZyMW1jbkJDQjFMZVYvM3JYUVFLQmdEbHhwSGtTSmhtSUhLOWhid05RLzczdGxrV0VpcUttOFRzd3JvcEgKbm1ZMnFGdFE0WDJpN2ZvQkgvLzUzTTJ1Z2UxRU94enZ4djhvbGpPbDdQTTB3NFRQODM3R1dmQ0RRYUs3eWJYRQpYTlZPMU9lSm55cHlGT3hHMXZFSVdRWjFLZ3ZxVXBQN1YxOGZZTVZ4cUlGM3Z3MWRzM1lkczRadnZyRUgrRURiCnpnNy9Bb0dBRG1UeFRLSXY5NEdMT2xWbzJCWkJITHh3bDQyNEVNdEtZSURJVFNEclNGbGRUbkJWVCsxd3RNOGwKMmxVN25FZWQ2Nk5GM2FJaUhLdS9iY0YvUWtFZ1l2WmN2UC8rTXQwdTN5TmlPM1E2RTZSdmxEWXJQVDh1ampBUwpnWXFKdVFJNXFPNnl6MXJnaTYvbDNhWVFMWk5CcVJScHZPQmZ6TjNkczhaazFkeXdWUTg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1hicncrWEMxVGJjZmtyMWVTYnVrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ETXpNakl5V2hjTk1qWXdNekkyTURNegpNakl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3kxZWxrWUIxSEFMWGt3OGVMQ2M4UzluUGJYYnFuSFNybnB0ck5oYkszK25kR0I3MnQKTkloRm4wZmpQOFpDdDIraGNYU3krR21rWFV6T09XeEsrVlZWVEQ0cm5XMGlRY2xVbzZSa2tCU0FSK1FyL2ZRcApWblovQkNaU2RDdDZWOGE1Nmd4cEhwb01pQzFQcGVwY01hM3BCc0ovQVVXcHByU2hsbkU3WDhyOENoOVZhcW05ClhvK0w2ZWg0YmhnUDc1VVdRZEZiSnorUWhBWVh2Nzd5djYrZDFFc2NxY3AvMS9kWExzMWVmdjVBQ0JjUkM4ck8KcDBrYjNMMFhMOVZNVmtwZVlmUzRnT2psYWZySzA1Q1l0c1BSN0FZVmwzWFdaWXBHSVVwaytTTXl5b2lrTVB0eQpoZERGNVF0QW1XSU01UHo3WFp5RXhUZ1paQmI4TWpjZWdaSHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzU29VbUhnSDRLUmZ5dzcyU2pvRHEyL3RhUm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNFlLVk5zeGVobDhkYnBqdVNNSnRkRStWZ3BzZTlEU2tGc3ZIYWhIVmxQNWxLU3E3bjlNMi9zCmdGcU9iTVIxcnNuR2s2clpMMTIxVW5TcitNdTlvZnB1L2hwSTFWejdOMUg1S0thMmVVa2xvTExGZW1uR2ZaV2QKbXloVnpnTzZFTUJMeUcrS2h1VENpVGJhQlBlMkJXNDh6SU5pUUllMUFCS25CSHNMQ2k5YXpyYjZaRHJtenU4cgozRkU3Z2dXUVhTbSs3K0pOWUJVby9mWVZUdWRyNVY3NGpOM1dQMDFLcW9UeldGVHZuR2hvZnNNUXBERG45ZW5aCjVzd0UxVDlQRUZoVFNEeXZHcEZpeUJpdmMyQjdWYWZDWDdaNGo2RmZqdHN3aEY3d2pvK2ZDQXAxWWx6RFJOQjEKdW9tUm9jOEdkbGp5OWdlc0ZoWmJrMGZrZDhQZGxRUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc3RYcFpHQWRSd0MxNU1QSGl3blBFdlp6MjEyNnB4MHE1NmJhellXeXQvcDNSZ2U5CnJUU0lSWjlINHovR1FyZHZvWEYwc3ZocHBGMU16amxzU3ZsVlZVdytLNTF0SWtISlZLT2taSkFVZ0Vma0svMzAKS1ZaMmZ3UW1VblFyZWxmR3Vlb01hUjZhRElndFQ2WHFYREd0NlFiQ2Z3RkZxYWEwb1paeE8xL0svQW9mVldxcAp2VjZQaStub2VHNFlEKytWRmtIUld5Yy9rSVFHRjcrKzhyK3ZuZFJMSEtuS2Y5ZjNWeTdOWG43K1FBZ1hFUXZLCnpxZEpHOXk5RnkvVlRGWktYbUgwdUlEbzVXbjZ5dE9RbUxiRDBld0dGWmQxMW1XS1JpRktaUGtqTXNxSXBERDcKY29YUXhlVUxRSmxpRE9UOCsxMmNoTVU0R1dRVy9ESTNIb0dSOHdJREFRQUJBb0lCQURKRnJkbFlwNEpKTWRqQQpMSHpxWWZxcnF6LzBaajhLRlFDUHlCeFVSRHd4dll2REswL2dYNXBxdnpPanZ1RU1YZVlkVmJmbDJ4U29ZYW5yClBJVUsrREVGUU1qVDlWVFc5M2pDazdqdFE4WVg3NDFxVTFPM2laSUZJWnkyS1c2MzlCWlpNK25zLzFNY2lOaEcKQk02cjdINkFOdmFxN2VGV0Nwc09Cb0N4V2dkbGZFdW9sT1FzaDEvdzNvVGd4RTh6alAvdmhHQ2h3M2VLd09KVgpCazFvMzZmUHZGRWRXR2NpUnFZSlJHY1ZxRlQxbHMwRmQwQVBVdXNvR1NEaFRQQXJJQ0t5UjlqY2g3YVI4SVZNCnJPTFRNa1hONkZEZ1hUZFllL0VoQnd1VUREbXpYS2hCM2k4bDdEdEJpQk9TZWcwNkxNN0lORGFKWXZ2WDJFNXcKenNXN3dTRUNnWUVBNmF1ZjNKa2VXcDVHTmNxQm9GYXRBNXpuWnZvZC84V0I4RFdIVzFqUXBrN1ZuZFA2Zlhtdgphc3JDQS9GZTlWUlZCbC96ZklveFZNdktuVEZGVU1uS3Jjd1lCUmRjTzJqRGdET2NEd3MxcEIxaGdMU2lWYkg1CnlydkNKcHRHUUJmVmlHSHcrUG5SVEgwNlhNRW9JT0hQa0I5UnNuOXJOSkFYODQ2R01lNEIyUEVDZ1lFQXcrelgKTEx1OFVMYU51UGE0R3kzT0UvbTIyR0FJbjF6NnFNWU9GUEljL1FzR2tWNmQ2UUtlbFBjSW9uVTV1TitBQ3lxdApxcU40clo1cUZJdXZmY2NsdlBxSFE1WE1sY1ArMnFYdCswSU11M25KcGJzYWE1WCtrTjdOVzV5K3R3ODhIVFZ4CjRBWWVzOE5Nb1k4NzdaNGpBRFc2bzI4NmN4TGQ4WkVYSnlnbmVTTUNnWUFYRndwNDlmaDE0K1gwTXNxVVdYeEgKT3gzeW93eUwxYXg5WEF6QURncXdKR0lmY203eUx6QVNVVzdTak90aE9yQWNMU2NXUzJHTWk0YTkrYnhydTBUMwozNDhRRWJyZmMvNjlrRnYvY0pBZ1kzYmJEUDV0a1dTcGo5d2pqSHhvb1BKTXc4RFlHWGVCSTI2ODg2bFBkb0RZCk1RQVZyMW1jbkJDQjFMZVYvM3JYUVFLQmdEbHhwSGtTSmhtSUhLOWhid05RLzczdGxrV0VpcUttOFRzd3JvcEgKbm1ZMnFGdFE0WDJpN2ZvQkgvLzUzTTJ1Z2UxRU94enZ4djhvbGpPbDdQTTB3NFRQODM3R1dmQ0RRYUs3eWJYRQpYTlZPMU9lSm55cHlGT3hHMXZFSVdRWjFLZ3ZxVXBQN1YxOGZZTVZ4cUlGM3Z3MWRzM1lkczRadnZyRUgrRURiCnpnNy9Bb0dBRG1UeFRLSXY5NEdMT2xWbzJCWkJITHh3bDQyNEVNdEtZSURJVFNEclNGbGRUbkJWVCsxd3RNOGwKMmxVN25FZWQ2Nk5GM2FJaUhLdS9iY0YvUWtFZ1l2WmN2UC8rTXQwdTN5TmlPM1E2RTZSdmxEWXJQVDh1ampBUwpnWXFKdVFJNXFPNnl6MXJnaTYvbDNhWVFMWk5CcVJScHZPQmZ6TjNkczhaazFkeXdWUTg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1hicncrWEMxVGJjZmtyMWVTYnVrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ETXpNakl5V2hjTk1qWXdNekkyTURNegpNakl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3kxZWxrWUIxSEFMWGt3OGVMQ2M4UzluUGJYYnFuSFNybnB0ck5oYkszK25kR0I3MnQKTkloRm4wZmpQOFpDdDIraGNYU3krR21rWFV6T09XeEsrVlZWVEQ0cm5XMGlRY2xVbzZSa2tCU0FSK1FyL2ZRcApWblovQkNaU2RDdDZWOGE1Nmd4cEhwb01pQzFQcGVwY01hM3BCc0ovQVVXcHByU2hsbkU3WDhyOENoOVZhcW05ClhvK0w2ZWg0YmhnUDc1VVdRZEZiSnorUWhBWVh2Nzd5djYrZDFFc2NxY3AvMS9kWExzMWVmdjVBQ0JjUkM4ck8KcDBrYjNMMFhMOVZNVmtwZVlmUzRnT2psYWZySzA1Q1l0c1BSN0FZVmwzWFdaWXBHSVVwaytTTXl5b2lrTVB0eQpoZERGNVF0QW1XSU01UHo3WFp5RXhUZ1paQmI4TWpjZWdaSHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzU29VbUhnSDRLUmZ5dzcyU2pvRHEyL3RhUm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNFlLVk5zeGVobDhkYnBqdVNNSnRkRStWZ3BzZTlEU2tGc3ZIYWhIVmxQNWxLU3E3bjlNMi9zCmdGcU9iTVIxcnNuR2s2clpMMTIxVW5TcitNdTlvZnB1L2hwSTFWejdOMUg1S0thMmVVa2xvTExGZW1uR2ZaV2QKbXloVnpnTzZFTUJMeUcrS2h1VENpVGJhQlBlMkJXNDh6SU5pUUllMUFCS25CSHNMQ2k5YXpyYjZaRHJtenU4cgozRkU3Z2dXUVhTbSs3K0pOWUJVby9mWVZUdWRyNVY3NGpOM1dQMDFLcW9UeldGVHZuR2hvZnNNUXBERG45ZW5aCjVzd0UxVDlQRUZoVFNEeXZHcEZpeUJpdmMyQjdWYWZDWDdaNGo2RmZqdHN3aEY3d2pvK2ZDQXAxWWx6RFJOQjEKdW9tUm9jOEdkbGp5OWdlc0ZoWmJrMGZrZDhQZGxRUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUGVzZVVoWHdFTGtIZ2tlSDQwYklsREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ETXpNakl5V2hjTk1qWXdNekkyTURNegpNakl5V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdk9MWUg5Vi9CL2FJMDFNUXBvbC9VS1JSd0VjZ3gKT0hqYkZrOGVwL2pYaXJPWXZRZC80dVQzRzllV0V1NzAydmVsTjVXMTBNOUc4VWNiK2p2ZjFMd1UvVTlMTUhrTApiQTJrSlk1L20wWDFaT0JVU3czeEFnN0xkemMwN2xxbGhYVVZjZC9pSk5yYzNNOWxkVENuVFdsZDJFSE9QdXNEClAxMWU0ZTBUZjBoYUxCQ0JlRytGSldpOGRTbWtCOWZ0MmpFVXFWS1F2MWx3NjJNalg0Q2pzS1JRSTNTbHZhSTMKTGFNakpQY1l2eG11VWs2d2J5OVVXc3IzRlZ5b20xZENNWU1TbUQyeGgzOS90R0hNSDlmdTlwdUhkZFJwUnlvaApta0lSVjRCM0dCTVpqNVhkMExRNmFPdDdUajNGeDlBV1dtaEYvQ3M5UFEycGRRM1hoUGNqQzRrOUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOMHFGSmg0QitDa1g4c085a282QTZ0dgo3V2thTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBbng3TmJKZDVuUHc3ZUNWQTNWR3VLbmU1aXdSSmxJREx2ZklGcDJBMk9mUU9aY0kKWG90NC9kSWdaT3B4U3JhMUZnOTdiWWpnMGdKenRjenZKV1R0K1R3TnZhSGZWa1BZMmNieGFwd2JXYXd6TFhpRgp3Njh1WUZTWm5OaWxROTdFY2ljS3I4LzNGRGF6eElXRkhUTXpFRGthMCs5d3U4NUhOZGhXdHF3OTMrcmlpTGp6CkpGRWhxVjdVUXF6TjFNcU5LZzlIMU1vbWlnYlhIUllEelZKR2YwS2FDaXBWdzVUN1paSklnWXYyOHZLM1BMK0wKN2FpU1I4SmZQZVpQZFNSKzMyMEJPNE41bmRqT2JSOUtxL1FHNGRsTmozL3NBUm1UTWVIL01ybExOMFgxRDcvcQpYWGxlUDgydnovbUQ1YTJXWWhKL3hnQmlwWDVoZjI2bFVnQmZvZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcnppMkIvVmZ3ZjJpTk5URUthSmYxQ2tVY0JISU1UaDQyeFpQSHFmNDE0cXptTDBICmYrTGs5eHZYbGhMdTlOcjNwVGVWdGREUFJ2RkhHL283MzlTOEZQMVBTekI1QzJ3TnBDV09mNXRGOVdUZ1ZFc04KOFFJT3kzYzNOTzVhcFlWMUZYSGY0aVRhM056UFpYVXdwMDFwWGRoQnpqN3JBejlkWHVIdEUzOUlXaXdRZ1hodgpoU1ZvdkhVcHBBZlg3ZG94RktsU2tMOVpjT3RqSTErQW83Q2tVQ04wcGIyaU55MmpJeVQzR0w4WnJsSk9zRzh2ClZGcks5eFZjcUp0WFFqR0RFcGc5c1lkL2Y3Umh6Qi9YN3ZhYmgzWFVhVWNxSVpwQ0VWZUFkeGdUR1krVjNkQzAKT21qcmUwNDl4Y2ZRRmxwb1Jmd3JQVDBOcVhVTjE0VDNJd3VKUFFJREFRQUJBb0lCQUNoWVZJR01uQm5jdnFhUApmd05mSWRXR0IvQ3VCM3hkMW1ZTHd2ZjZFUy8vL2M1amFBQ29TN1FpTXdlWklIQThvdHpsNlpETm5ZeG1MY3RoCldMdjNEYjkvZSt5Q0lyemdpbHVMVWo1TGtGWXFmZ1NxcTNFYzJpODdLZmtFRU5jZjNZK3NnckpkYmcrQXdEaEsKUFlPb0xXU3dVS2Fla2hwVFVycHdKdGhnYkZabWdXclVzMXp1N0dLMk1lTXMxbS9Ea3MzU2p1L2JEY212blI4MwpHOVdvNDA3ZGh4VFZIdllySW5tTitwZTkrVENaZmZqcGlxZ3F3YnYrcGxjTys5emJ2eVZ2NDNxRGhlRFVEa0RsCmZKeW5DZGg2VzJGNUFiYlczN1ZpNkNray9OKzNVa2lUcmVsUWNGbGpVOS9hUHp1Zm5FamQ0VDVSZHllemZQMHYKM1VGZWcwRUNnWUVBMmpIM0xQZTBGTFNycjVnN1UyUnAzQ3dYSXZYYjFobEMzcGMvSHJwSm9hVFNHdnZSMUREUgpoNGVvbCtPZ3d6VXlhTnNtSDBLRzllYUx6WEEzN0Fkd2NlU1o3M1hkaXZFbm9qSnZ2STRVb25NWlpXWWhHaUZJCnlFd3hUN1pLbmZ1MmI4WlNxaUNjM3dIRnlaSTVpYUlGTlVBcGUvMUFZOXU4R0dBYm9xRkNHUlVDZ1lFQXpaU20KMmRGTUhtMTI4d3pmVWtiVm91T3BlNW5FNmhwa0syWmIxL0M0RFZ4OEdrYmdjUnB4ejkxTlJtQXFiMVY4bmp3SQpieFB3NldqaVI3T0g2V0lOSytWdkcwT0V3dnJBdnBENDdiVG1FZXlnT2tuUldvd3FyMFhlUkYwWTgyelZXVUp5CnN0bTdVN3JyMEJBcU8xeVJVd3RaeW4zL244Wkg3VmlGV1R4NDZZa0NnWUVBd01rZS9PTkxnSFAxc2V0T2w2c0UKQVo0UFB6dDk1cGhoUmV6YXYxcVhUalFqMCtXbGl0Y3JlcFU1T0NMT1cwdjRZejhtV3I1Y0lvNTEvYWxtTDZ5UApCSUtZSkVTKzMxR2QxQ2krSXhwaVR2cGxlUHNZeWs2WVVTbEk5SVk3UFlVMnQySENqa0RNZWhuRjJRalN2N0dnCjZtRHJobnJIMXJOQ2FVTVpoOEwxZE5VQ2dZQm05VW5TME1Wa2Y4SVEyNk9FbTBFblFRbUNnM0poSkRLQ29kTGgKaFFkSWVjY1ZpZVdoLzNKOGZnTFRlaG9HaERQVE01R3R2N2pwek1OMjBXMEI3ejlWZXFSNGJRb3lkRTdQb2Q5cApmUzIwVUdPMmpYMng4WHozSnZDNElELzh1Y2JuMnlXQ2VSVWVUQUVKeE83QnFBeUlJS2twaG96ZFFmcUgzY3Q2Cjg1UkNzUUtCZ1FEVDU3SktxNVp2UDNFMXlPYnB2L05XcXlUeTNNbHoxUHg4SE12aDh6K296bFFrZUJVdWhUYmQKQnNwMGxrOVlEbWdSaDRvcXlZMUFKQnlaRHVIRHBzc2M3VUFxTUo2VWNiV0hFTnA3L0NtSUZzZmxVVk9sUXZLRApvTnJmbUxubUFuaDVCbTcrL3pYQ1JmbnFTYVNTZ1NRVXNyVzl4WlF5VGtncVEzbGhJUjdWM0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY1hicncrWEMxVGJjZmtyMWVTYnVrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ETXpNakl5V2hjTk1qWXdNekkyTURNegpNakl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3kxZWxrWUIxSEFMWGt3OGVMQ2M4UzluUGJYYnFuSFNybnB0ck5oYkszK25kR0I3MnQKTkloRm4wZmpQOFpDdDIraGNYU3krR21rWFV6T09XeEsrVlZWVEQ0cm5XMGlRY2xVbzZSa2tCU0FSK1FyL2ZRcApWblovQkNaU2RDdDZWOGE1Nmd4cEhwb01pQzFQcGVwY01hM3BCc0ovQVVXcHByU2hsbkU3WDhyOENoOVZhcW05ClhvK0w2ZWg0YmhnUDc1VVdRZEZiSnorUWhBWVh2Nzd5djYrZDFFc2NxY3AvMS9kWExzMWVmdjVBQ0JjUkM4ck8KcDBrYjNMMFhMOVZNVmtwZVlmUzRnT2psYWZySzA1Q1l0c1BSN0FZVmwzWFdaWXBHSVVwaytTTXl5b2lrTVB0eQpoZERGNVF0QW1XSU01UHo3WFp5RXhUZ1paQmI4TWpjZWdaSHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzU29VbUhnSDRLUmZ5dzcyU2pvRHEyL3RhUm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNFlLVk5zeGVobDhkYnBqdVNNSnRkRStWZ3BzZTlEU2tGc3ZIYWhIVmxQNWxLU3E3bjlNMi9zCmdGcU9iTVIxcnNuR2s2clpMMTIxVW5TcitNdTlvZnB1L2hwSTFWejdOMUg1S0thMmVVa2xvTExGZW1uR2ZaV2QKbXloVnpnTzZFTUJMeUcrS2h1VENpVGJhQlBlMkJXNDh6SU5pUUllMUFCS25CSHNMQ2k5YXpyYjZaRHJtenU4cgozRkU3Z2dXUVhTbSs3K0pOWUJVby9mWVZUdWRyNVY3NGpOM1dQMDFLcW9UeldGVHZuR2hvZnNNUXBERG45ZW5aCjVzd0UxVDlQRUZoVFNEeXZHcEZpeUJpdmMyQjdWYWZDWDdaNGo2RmZqdHN3aEY3d2pvK2ZDQXAxWWx6RFJOQjEKdW9tUm9jOEdkbGp5OWdlc0ZoWmJrMGZrZDhQZGxRUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUtmczBKVk50bXliKzdRcWVPQ1hGNEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeU56QXpNekl5TWxvWERUSTJNRE15TmpBegpNekl5TWxvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUlqTnk1QU1yK3AKR3FaS1htVVVnNy8wbEZwQzFFU2VTYW9jTkJTL0dSSXFzcXM0OW9QSWlCVnN2UzlvWUdhYUlWeVJVN2VxN0huTgp2d0NiajFVbnNKU1U2TmhtREZaRnNsWnF0WVc3eGR1Yk9qSXluYVVjaTlUWTRJd3hESGc5dEhJcDlldFRJVC81CjBBcTZWOXh4Rit3RmsxZ0UwQTRsUjNaVFIxdXZGZUhCblBFd200K3cxSlFYVkFLWmloUEZ0SDNCQzg3N2xiS0QKS2hGR2VUMTF5OTRQWWNHWmN4Q3ZhWmMyL1JENEZQWmdnY0JVRDl4b2hQeWxsYVdXSDQycDN5T0pwRkoyZllibgpBUWRiTXR1MCt2NjBPMUc4ZngrRTd5QTRld0VWSzRtejRXVHp6VUJra2NON2FucmNoVXhiRUtrL3F5TzNKcXhHCnRoNis1Y25yN0NjQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVM1NvVQptSGdINEtSZnl3NzJTam9EcTIvdGFSb3dNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFEblRsNXZ0Q3NmZEcKZUtQdWJPbFoxdndmeWdRSlp0bkRLVit3K3ZtZzNwSGk3YnU5aVAwYVpJNWJnUTVEL3drcDBSRHNvam9uM04zUApMQm5DWjlCWXh5ZDJMMExwdi9UWTlBNkJqcitIckZOL1VaYzV1OFRJdzhYZFNrNXpXZll6RzB0UkdJOWRTSjBXCjN1U3hOeWsvWGpjOGpwQzByRFEzd3ErOW5NWVM1Mzc1Mk5PRHpldE9HS1pTUkhBaDVlR0ZFQm90NGFqSTZERkkKV1JLRERVOHJRSXBzalp3VHJSeWlxb09WR0JkaWhJZDFwc1hsS0lkaDBlWUtpTlNOM0M4cXEyM0pMemc5R2JMQgp1aUZwbDFpVmFacEZtTlhZNm5ZT01PRnhWK2g3YVYrVGh5YlBZRTNabk1oL1hPekEzOFl1NzBFb0tPQWM0VlNICjFLU3B6cmkzUkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2lNM0xrQXl2NmthcGtwZVpSU0R2L1NVV2tMVVJKNUpxaHcwRkw4WkVpcXlxemoyCmc4aUlGV3k5TDJoZ1pwb2hYSkZUdDZyc2VjMi9BSnVQVlNld2xKVG8yR1lNVmtXeVZtcTFoYnZGMjVzNk1qS2QKcFJ5TDFOamdqREVNZUQyMGNpbjE2MU1oUC9uUUNycFgzSEVYN0FXVFdBVFFEaVZIZGxOSFc2OFY0Y0djOFRDYgpqN0RVbEJkVUFwbUtFOFcwZmNFTHp2dVZzb01xRVVaNVBYWEwzZzlod1psekVLOXBsemI5RVBnVTltQ0J3RlFQCjNHaUUvS1dWcFpZZmphbmZJNG1rVW5aOWh1Y0JCMXN5MjdUNi9yUTdVYngvSDRUdklEaDdBUlVyaWJQaFpQUE4KUUdTUnczdHFldHlGVEZzUXFUK3JJN2NtckVhMkhyN2x5ZXZzSndJREFRQUJBb0lCQVFDeGNUaVZhSTQ2Q2hsVwpsckRTbUw2WEs3aVJDM1l5eGE2MDhoUlVSaHBuTldtYkFIU3BIUmZzNVRmQjVoZitqN0FnaUtCSlJzdmZ4TU5vCmpjYWpZYVNQR2MvOVFzRFI5ZUE4QmtxbDBtdlUvbnRodUV2SXgxK3ppd3NxZUFaYXZLTjZtWW14cm9pOGpkdXUKZ29XZDhpeVlTTHhVL2drZ2RNaHRpVTYycVVCSjEzSE4zRGxvNHIvbXVYdmI5Ym5OYkJDYlNCcHBuT0g1Tzk3TgpxZW9ETXVocGp2QkNIVEdKNXVxQlFRWFVHcXYxRjM4RFJrMXVLZU1tRHpDei91NmtrYTRFMDFiKy82R25iQXA5Cmd2VGc1NDNGdURPYjM1VkVxWUFpQVF1ZzZLWE1IQVR0Vkk3UitNeHJ1aVBvY3ZRbCtTczA5WTIzVGduL1BBQ1QKRkpxRnI3WXhBb0dCQU84eTIxdVdnMC80eW5XK2pkQVVLLzJJTEVZUk5tOUFqM1VmY0IrUW5ySXd6UUJJdUxJMgpPeTNSYnRYWVVjbzdKVFpxbTcyY0g4eFpDcCtlSktvc3d5SzByS2V6WUcyNDlIekRlVFJ1UkRIZ2h1Tmp3eFhVCkl5d1BIa3ovRm9vdE1VOG1md3B1azBRMjFHVDNEOVlCeGNndEFVdUw4c2g2TEdua2FidEZ0TVZ2QW9HQkFNL0cKR0EycHBLcDRRaWJKOWRRNzhpZW15SmV5ak9Odzl5V2h2WkJwbHQ5THVpNnlKd0t1VnJuYTU1Sy9XL3dKUUN5bQppT0F3RnU5ME9zMnI2emJKcTQ0dEs1Mk5GajBLbzhQbUFqZE5nRkE4RGdkT09lTm03MzhYVmp4T3p5MGIxUmFMClFjdlpBd3NGd1I5cE92MjZLZzhlWUhETGo3RnQ4cFpTS3B3dTdaakpBb0dBZUdzdzlXWExpNW9qU3ExNHRUVkMKaEN0bXBvdUp6TzVDaW1NZVRqVy9QdFBFa0kwTHRtUUkzT01mbWphQnpuNkNHR2dKS2FhTWQ1S24vMzFjMWZNYwo5YjdoWUxlMEp1akM1SUIvNXo1UHhKQlZOK3FFVHR2eUxQOGJjUVhHY2grWVFGR1FDVTlyZ2g3Y1JFd0F3K3MyCmg3VG9md0RnWTc3bDF4VnZpU0RwaGE4Q2dZQW1CbUQ4anlGOXVVaVNCTUFpdVYzVjkrWWFMU2t2cnNyc2JpOWQKTUpYV0ErdnRBOW16MmVneFYyaXVLS3RTOHZaMXRYeXpXdG0zdFJQVjlESzE4aTZkZEpMWTRLdERQS0ZBQnVZOAo3TWdnNXZ6Q1JZUytvMllOWWwzNzU0aHUvdnIraHpuaGJyUHAzb0c3bCt5ZDV1WXZvaVdRUHhEckxlNEpxTHYzCm5YY0tVUUtCZ0M3blJFWWZIaUpJTUMydDdYOUMzUFZTWkNJUkdNRStTL1MrQm1yVUt0emZNSTkxYWdtQmtIb3gKaTNlaGx4Q1RQQ2QrYmtPTGEzbDBYQlB4ZzlpQkladjBJK2w4U1lTOGp5cURTT25tV1I1cmdPZm5vNzBpUmkxawpSMDU3bmNLNDQ5TTM0NlFNdUttWTlNZS9UWDhCdnZRa1ZqbzVqakZTM284ME5mRktzNEllCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 12fce0ce6327b3a011a89879d753d98c20825b9f7853b7ade5fd7bc798299075
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
