# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.network-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZUJnZEdWSFcxQjlCOXI5WnpkaHVNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXlOelEwV2hjTk1qWXdNekkyTURFeQpOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3hROWN3RUM1MVp4NGRYeEQxaFFjM2xkMGJRSFlJeUdqUVVhRGVxaTIxOGZQK0IzZmgKSFJoS1M3WXVUWmJzMldxbEFOQlV6OUdRaVpTaHFMOE04L3piUG5vZERpRWxjSk5lSGtZVVlDaTl4bllsSnFCUQpRbEZFU0crVVlqb1UrbVJOU2duN0w3VEhocUxNeTJXMGg2c3gzSDZyVm9tQTZ1UWU0cDVqRGZtcHl2WlFuRFMwCklrdmdYaXY0TXpjdTJhTHpwQ3JUZWxreWF1SEJUTjFzY0tvZTZzOEw1RE4xK2t1UC8zRUdyTjJRNFB2Q1A0RG0KVlpFYWFuRXlRaXZnSzVNR2toZlE5ZE9ELzgraW1KVmFKUEJ3a3BKbHRIclN0TU1pdk5lb2dYN0gwS0pLamJESgoyaDMwSko1cTNzcFV2NUdDZHZrYzd6MUxETlpwTFFPY3EwMkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU2dzdvUkJ5cFVDbENoZ3lkd0Eza2hZQ29HYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCSlNrOVQvMXAwSFZCUFNHSU45Wi9YcEZjdHMwVkFEQnR3Rjk3dTh6NDl3Znlqemc5K3NMT1JOCmpqQUJJclRzSVRzcWFZVTBWaTQ4RnJxYkRqYm80TjY0Mk0yVmxHMGY2aitoR0Z0RTNqWkNHaHBaWXJLZnJPNmMKN2ZoUzVMeXBoMTVRQ3U4cVh2V1k4WlZUU0ZoeXVIOWFuN1d0NG5nOUVQUCtpclVsMDAxTEkrN29DcmRIY0dQWAozSTkwbU9pdEQ5d1NIbitzbE5ndnJRTmdXNXVqclM4ZEFMSmlFY3pVS2VCWnJsWVFqWDh5SWxCV05Td3VXTFRyCi9wdzJqUjVaQ2g4MWp3V2lMNlEvUmsxdUd2YjhEOFBNci9TYWhBOGh6VDBxNlhOUzN3UUx0bzQ3anJwbTd2QW0KRmZWYzF2cnNMRlF4N2VWOURuNHhRNXhDcTkyWU8wcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1VQWE1CQXVkV2NlSFY4UTlZVUhONVhkRzBCMkNNaG8wRkdnM3FvdHRmSHovZ2QzCjRSMFlTa3UyTGsyVzdObHFwUURRVk0vUmtJbVVvYWkvRFBQODJ6NTZIUTRoSlhDVFhoNUdGR0FvdmNaMkpTYWcKVUVKUlJFaHZsR0k2RlBwa1RVb0oreSsweDRhaXpNdGx0SWVyTWR4K3ExYUpnT3JrSHVLZVl3MzVxY3IyVUp3MAp0Q0pMNEY0citETTNMdG1pODZRcTAzcFpNbXJod1V6ZGJIQ3FIdXJQQytRemRmcExqLzl4QnF6ZGtPRDd3aitBCjVsV1JHbXB4TWtJcjRDdVRCcElYMFBYVGcvL1BvcGlWV2lUd2NKS1NaYlI2MHJURElyelhxSUYreDlDaVNvMncKeWRvZDlDU2VhdDdLVkwrUmduYjVITzg5U3d6V2FTMERuS3ROaHdJREFRQUJBb0lCQUhOUHRrUEZ3dk1NU1VMQgovTDQ1OHgvdGxRK05OenN2WXo5Z1drMStWbzNzL3ROWStGcXdHb1Q2QzJERGlGSTZmRzBwd2x2cGRHR1puZDRyCmIxeDF1eDdEM1p2WS9TYmx2SGVWS2ZGSFBEbDNTSk9TTk9jQXZPeTJVaDhzWnF3TzFnQ1JFVDBkSTNSSDJNOXYKNEpFM1Q5MzNtVTdMMUZiUWRlVEJkbGJwV0dkaVV2VmprVk91eVB6SUp5bXBEaCtMSldwbGVXenBmY096czBmUApzbDFSVHkyblp4UVd0NkhRaHhSZzBsNHFoK3RIMWY0QU96WDRQM0E4a1grdFpBZnFxU2o5MnQwcDh3djBUczVnCm5EMEVNNDZBK3RzcExuczh3TnYzNzcrSlNHYUpoVUVYaXFIOUtEN0JaVFRJMnl2NjlUTnY1cG1KTGNlSE95YkQKdlRlUTMwRUNnWUVBMlJVS3RvVEFTUzZodURGL1hDMGE3Qmc4V21tU3V0b095M3VPV1F1U1FYUWo4S3lhVTJoSwpCQjFLcC9ZdHZ5NEZ0anBFVzdVWmdMSG5JaEpjelJxV0dRSTJxUEphSjdOOVhiWVExTjJPZnB0eHkyNGE5anZhCngrdG1YbWliRU1SUUhaR3RMeU9LOGd1dHdieVpKMWRLaE5tSHFhL0V5K0liT3ZYMFhxc054NXNDZ1lFQTBRdGsKMzFNVFB4c2dmbTRSdVoyNFYrWU5ocHlGTi9GYThLOVE3VkJGOURvSnFacTU0VUJTSGdKTG9xLzA3QUdnZ3lGVgpFU3U4eHJhbCs1dDFnMWgrdjJsWFU1MEJnenZ0djJVUVQ2aEFwTHpYVVQ4blViekliQ2JPdmJWWmI0RUVOL3ozCnI5cWdBZjZadHU3WkhlU1ZrSld3UlZSaEJQdEo0d3BQaVBjYWJvVUNnWUFxQXJ0M0JRdmRYY3ZvUkpQOE43SnQKSEdlWnE3Szh2SFIraHFQT3NjR1ZMeS9CWlBYY3pHTCtsdGlhMXJhVnVBZGM4N3ZFNzdCR3lxY0xYZmhkclJaOQpNb04zZ0tkWDVaR09jQ3lqdFZqZFFhSHRGNXJhS2swMXdXV25RYUU0eG5VbXM4bUxSTnFmNndpdVpKeFRFNzZWCkpTL3U4OWduQ05QeVBpVVRxUkRhbndLQmdRREU4OGs4SjVjd2s2eFBzZ0I5TXo0bGdwZ254WHcyTXUyTmFvQUMKdHVqUnE0VERDUVlzVlYrSTZueThjSzkvVkNFWXF1VHM0cHBmVm1LWDVlWVhzOTduRkthMEhtNzRhQlFkaVdpTwp4R1R6VVFCRWlnM1BrdC82RmE0ZlNxZFN5T2xpbnJIMk96TVo3ZmlCUkJQSGVELzZFeTRhZzk5TXhEemU3aTMxClMyclp5UUtCZ0VtdG5FK0dHR0FYSXRiYkJJdGI5QkdZZWZUY1NIczlxc0xEVVFoTS9GUTYxOXJhVWViQ0VveEkKTVBJazIzVktBM2czV3F5MXhNUE1aUFFteDRCVmdURzdjbk5jSHpsUGFua3djRVBHWStrL20rWkhoNnNucmFtdwpNL25FZGNlMjB4cGVTWnlCYjIxMFc2cDZhd3EyM1g2bDNMcW5LbWdFTWNySXJNTFEybEs5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZUJnZEdWSFcxQjlCOXI5WnpkaHVNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXlOelEwV2hjTk1qWXdNekkyTURFeQpOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3hROWN3RUM1MVp4NGRYeEQxaFFjM2xkMGJRSFlJeUdqUVVhRGVxaTIxOGZQK0IzZmgKSFJoS1M3WXVUWmJzMldxbEFOQlV6OUdRaVpTaHFMOE04L3piUG5vZERpRWxjSk5lSGtZVVlDaTl4bllsSnFCUQpRbEZFU0crVVlqb1UrbVJOU2duN0w3VEhocUxNeTJXMGg2c3gzSDZyVm9tQTZ1UWU0cDVqRGZtcHl2WlFuRFMwCklrdmdYaXY0TXpjdTJhTHpwQ3JUZWxreWF1SEJUTjFzY0tvZTZzOEw1RE4xK2t1UC8zRUdyTjJRNFB2Q1A0RG0KVlpFYWFuRXlRaXZnSzVNR2toZlE5ZE9ELzgraW1KVmFKUEJ3a3BKbHRIclN0TU1pdk5lb2dYN0gwS0pLamJESgoyaDMwSko1cTNzcFV2NUdDZHZrYzd6MUxETlpwTFFPY3EwMkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU2dzdvUkJ5cFVDbENoZ3lkd0Eza2hZQ29HYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCSlNrOVQvMXAwSFZCUFNHSU45Wi9YcEZjdHMwVkFEQnR3Rjk3dTh6NDl3Znlqemc5K3NMT1JOCmpqQUJJclRzSVRzcWFZVTBWaTQ4RnJxYkRqYm80TjY0Mk0yVmxHMGY2aitoR0Z0RTNqWkNHaHBaWXJLZnJPNmMKN2ZoUzVMeXBoMTVRQ3U4cVh2V1k4WlZUU0ZoeXVIOWFuN1d0NG5nOUVQUCtpclVsMDAxTEkrN29DcmRIY0dQWAozSTkwbU9pdEQ5d1NIbitzbE5ndnJRTmdXNXVqclM4ZEFMSmlFY3pVS2VCWnJsWVFqWDh5SWxCV05Td3VXTFRyCi9wdzJqUjVaQ2g4MWp3V2lMNlEvUmsxdUd2YjhEOFBNci9TYWhBOGh6VDBxNlhOUzN3UUx0bzQ3anJwbTd2QW0KRmZWYzF2cnNMRlF4N2VWOURuNHhRNXhDcTkyWU8wcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1VQWE1CQXVkV2NlSFY4UTlZVUhONVhkRzBCMkNNaG8wRkdnM3FvdHRmSHovZ2QzCjRSMFlTa3UyTGsyVzdObHFwUURRVk0vUmtJbVVvYWkvRFBQODJ6NTZIUTRoSlhDVFhoNUdGR0FvdmNaMkpTYWcKVUVKUlJFaHZsR0k2RlBwa1RVb0oreSsweDRhaXpNdGx0SWVyTWR4K3ExYUpnT3JrSHVLZVl3MzVxY3IyVUp3MAp0Q0pMNEY0citETTNMdG1pODZRcTAzcFpNbXJod1V6ZGJIQ3FIdXJQQytRemRmcExqLzl4QnF6ZGtPRDd3aitBCjVsV1JHbXB4TWtJcjRDdVRCcElYMFBYVGcvL1BvcGlWV2lUd2NKS1NaYlI2MHJURElyelhxSUYreDlDaVNvMncKeWRvZDlDU2VhdDdLVkwrUmduYjVITzg5U3d6V2FTMERuS3ROaHdJREFRQUJBb0lCQUhOUHRrUEZ3dk1NU1VMQgovTDQ1OHgvdGxRK05OenN2WXo5Z1drMStWbzNzL3ROWStGcXdHb1Q2QzJERGlGSTZmRzBwd2x2cGRHR1puZDRyCmIxeDF1eDdEM1p2WS9TYmx2SGVWS2ZGSFBEbDNTSk9TTk9jQXZPeTJVaDhzWnF3TzFnQ1JFVDBkSTNSSDJNOXYKNEpFM1Q5MzNtVTdMMUZiUWRlVEJkbGJwV0dkaVV2VmprVk91eVB6SUp5bXBEaCtMSldwbGVXenBmY096czBmUApzbDFSVHkyblp4UVd0NkhRaHhSZzBsNHFoK3RIMWY0QU96WDRQM0E4a1grdFpBZnFxU2o5MnQwcDh3djBUczVnCm5EMEVNNDZBK3RzcExuczh3TnYzNzcrSlNHYUpoVUVYaXFIOUtEN0JaVFRJMnl2NjlUTnY1cG1KTGNlSE95YkQKdlRlUTMwRUNnWUVBMlJVS3RvVEFTUzZodURGL1hDMGE3Qmc4V21tU3V0b095M3VPV1F1U1FYUWo4S3lhVTJoSwpCQjFLcC9ZdHZ5NEZ0anBFVzdVWmdMSG5JaEpjelJxV0dRSTJxUEphSjdOOVhiWVExTjJPZnB0eHkyNGE5anZhCngrdG1YbWliRU1SUUhaR3RMeU9LOGd1dHdieVpKMWRLaE5tSHFhL0V5K0liT3ZYMFhxc054NXNDZ1lFQTBRdGsKMzFNVFB4c2dmbTRSdVoyNFYrWU5ocHlGTi9GYThLOVE3VkJGOURvSnFacTU0VUJTSGdKTG9xLzA3QUdnZ3lGVgpFU3U4eHJhbCs1dDFnMWgrdjJsWFU1MEJnenZ0djJVUVQ2aEFwTHpYVVQ4blViekliQ2JPdmJWWmI0RUVOL3ozCnI5cWdBZjZadHU3WkhlU1ZrSld3UlZSaEJQdEo0d3BQaVBjYWJvVUNnWUFxQXJ0M0JRdmRYY3ZvUkpQOE43SnQKSEdlWnE3Szh2SFIraHFQT3NjR1ZMeS9CWlBYY3pHTCtsdGlhMXJhVnVBZGM4N3ZFNzdCR3lxY0xYZmhkclJaOQpNb04zZ0tkWDVaR09jQ3lqdFZqZFFhSHRGNXJhS2swMXdXV25RYUU0eG5VbXM4bUxSTnFmNndpdVpKeFRFNzZWCkpTL3U4OWduQ05QeVBpVVRxUkRhbndLQmdRREU4OGs4SjVjd2s2eFBzZ0I5TXo0bGdwZ254WHcyTXUyTmFvQUMKdHVqUnE0VERDUVlzVlYrSTZueThjSzkvVkNFWXF1VHM0cHBmVm1LWDVlWVhzOTduRkthMEhtNzRhQlFkaVdpTwp4R1R6VVFCRWlnM1BrdC82RmE0ZlNxZFN5T2xpbnJIMk96TVo3ZmlCUkJQSGVELzZFeTRhZzk5TXhEemU3aTMxClMyclp5UUtCZ0VtdG5FK0dHR0FYSXRiYkJJdGI5QkdZZWZUY1NIczlxc0xEVVFoTS9GUTYxOXJhVWViQ0VveEkKTVBJazIzVktBM2czV3F5MXhNUE1aUFFteDRCVmdURzdjbk5jSHpsUGFua3djRVBHWStrL20rWkhoNnNucmFtdwpNL25FZGNlMjB4cGVTWnlCYjIxMFc2cDZhd3EyM1g2bDNMcW5LbWdFTWNySXJNTFEybEs5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZUJnZEdWSFcxQjlCOXI5WnpkaHVNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXlOelEwV2hjTk1qWXdNekkyTURFeQpOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3hROWN3RUM1MVp4NGRYeEQxaFFjM2xkMGJRSFlJeUdqUVVhRGVxaTIxOGZQK0IzZmgKSFJoS1M3WXVUWmJzMldxbEFOQlV6OUdRaVpTaHFMOE04L3piUG5vZERpRWxjSk5lSGtZVVlDaTl4bllsSnFCUQpRbEZFU0crVVlqb1UrbVJOU2duN0w3VEhocUxNeTJXMGg2c3gzSDZyVm9tQTZ1UWU0cDVqRGZtcHl2WlFuRFMwCklrdmdYaXY0TXpjdTJhTHpwQ3JUZWxreWF1SEJUTjFzY0tvZTZzOEw1RE4xK2t1UC8zRUdyTjJRNFB2Q1A0RG0KVlpFYWFuRXlRaXZnSzVNR2toZlE5ZE9ELzgraW1KVmFKUEJ3a3BKbHRIclN0TU1pdk5lb2dYN0gwS0pLamJESgoyaDMwSko1cTNzcFV2NUdDZHZrYzd6MUxETlpwTFFPY3EwMkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU2dzdvUkJ5cFVDbENoZ3lkd0Eza2hZQ29HYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCSlNrOVQvMXAwSFZCUFNHSU45Wi9YcEZjdHMwVkFEQnR3Rjk3dTh6NDl3Znlqemc5K3NMT1JOCmpqQUJJclRzSVRzcWFZVTBWaTQ4RnJxYkRqYm80TjY0Mk0yVmxHMGY2aitoR0Z0RTNqWkNHaHBaWXJLZnJPNmMKN2ZoUzVMeXBoMTVRQ3U4cVh2V1k4WlZUU0ZoeXVIOWFuN1d0NG5nOUVQUCtpclVsMDAxTEkrN29DcmRIY0dQWAozSTkwbU9pdEQ5d1NIbitzbE5ndnJRTmdXNXVqclM4ZEFMSmlFY3pVS2VCWnJsWVFqWDh5SWxCV05Td3VXTFRyCi9wdzJqUjVaQ2g4MWp3V2lMNlEvUmsxdUd2YjhEOFBNci9TYWhBOGh6VDBxNlhOUzN3UUx0bzQ3anJwbTd2QW0KRmZWYzF2cnNMRlF4N2VWOURuNHhRNXhDcTkyWU8wcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYUN6N1RqSUtIQkZzYm5TYjdSYm9tREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXlOelEwV2hjTk1qWXdNekkyTURFeQpOelEwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUzlDdyt1Z2xVaXgrSHRGSjFLYTRZOG1JUUpwWjkKNTM3S2wxTTlpYkhUd250Y2srNElnYnl4NGdySXZ1SXU5L0d1bUlzTEcvcFd1bGh3MUphVzJhMlUzOGt4UEpRRQovUVg4NFVkNDNqSFRodWNBdHMxTkk4TnVTS2ZKalFWUnQxRlZiWkV3SVVBQmF6VVJDTTN3UG53Q1BqZTlkWHBmCjlpanhvL002VVRSSFRoeGl1UU0zWnNyTmRoNHYydEFnUWdxSEtuVVZpWlZaOXNwNE8yV2xYTzN4ZWFVWXdhaG0KZkhxR0xCSWlTOXBKcDF1aWsyaEY4by9lTlhpdWlhS1h6UlE2Ty9ZbnRpYkhsWlNELzNwTVBTTngvWmZtZ2draApRTHZ6VjZqbEx6SGtVMndFR3pYYXJHODAwOWxVaW9qZTdDUTdvR0h4Y2QrK2xGMTNLQWVpS0FiUEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPc082RVFjcVZBcFFvWU1uY0FONUlXQQpxQm11TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFITFZESjloYm5XS2ZNZzVDL1hhb2JGc2dpRGIrYWF5MEJMeExoWURST1BHaE1LMlMKSDY3aTFQWGNpUURZNjFWRmNWN1I4bzlNaGpXK29uSjFCcHErcitLdTNhOHlid01Ic0xlK0hoSWtmVy9lVW9tcwoxR1RSRWw4djdlK3FaOGxldlpLMmVKZTEySHZhZDdaaHlwY2RSWWg5dnhPUG9qS2VqTkN3bHB5YkI5NVNCZDFxCm5KYmVIYVFJakZpQVVQVmZkVWhLOEpzanZLL2JMSU5xWjZ0cEQ1NHNEL0FPOHJYN2l2S2ltMFZlNEF1aGsyajcKTitKNzRLREJZai96dXNCZktaZFdHQVRZclFwajRReEQxKyt4aGxGMk95ZG1qU3BjYUZtVUN4K254TmZ0SkFIVQp3NUtxWHBhVDRJWG92K2d3MnR3Y1cydk9pRisyY1FBZ3V2RUEzZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHZRc1Byb0pWSXNmaDdSU2RTbXVHUEppRUNhV2ZlZCt5cGRUUFlteDA4SjdYSlB1CkNJRzhzZUlLeUw3aUx2ZnhycGlMQ3h2NlZycFljTlNXbHRtdGxOL0pNVHlVQlAwRi9PRkhlTjR4MDRibkFMYk4KVFNQRGJraW55WTBGVWJkUlZXMlJNQ0ZBQVdzMUVRak44RDU4QWo0M3ZYVjZYL1lvOGFQek9sRTBSMDRjWXJrRApOMmJLelhZZUw5clFJRUlLaHlwMUZZbVZXZmJLZUR0bHBWenQ4WG1sR01Hb1pueDZoaXdTSWt2YVNhZGJvcE5vClJmS1AzalY0cm9taWw4MFVPanYySjdZbXg1V1VnLzk2VEQwamNmMlg1b0lKSVVDNzgxZW81Uzh4NUZOc0JCczEKMnF4dk5OUFpWSXFJM3V3a082Qmg4WEhmdnBSZGR5Z0hvaWdHendJREFRQUJBb0lCQVFDZVhoQ1pSckNhZDVkRQpHV3VONmF4NXJmMVFncWVYL2FLQ0ZQaTR5aFptRXlycFpXVGRuZ2c2d3FlMTdSZUFpME0wLysvaWR5Nkl6WHgzCnVDRVZQblhCdmY4Y3A0MjM4UHY5ekdJTHEwTmN1WG5TWDJuZzcyaFg4dE9EekFxaVBpMGhKUkJLUWF2N1pMQ0MKQ1VvUmdkYzNGOTVnclVFaHFYc3piUkc4UmhvcExHeFBhRFk2YVAwUDN0Y3VnUy9VanFNTS94bG1XYmI4N2VPSgpvelVza1dTN0NEN0J6WkJSeTh3WU1KbExIOWorVkZ2WG9pNWNwbU5hUldOQmJ6STdQNXJwaVRSTEk4Rmhja2EvCkdTMDhSaC8yTXdtZVJBNHdTVHBxYTFuVEdvcU1XVVNIQkVsL0cwcVdwOUxSZEIzTlVvWDFYTklzV0hxdW5YeUgKYTNxUHprV0JBb0dCQVA4dlcrUWQrK3NYanNGQittbS9RVlkrdFhnRXFjZENlUkxvN0NyWm5GN1F4a3RJL28rMAp0ZE9iK1RXQkRMK3Q3SkFWWmdIRytjMWpscWxtYVdUNzB5aTh1aW9RV2I0eE0yeU9qZUgvQlhVYTgzVHlQRnNTCmhuZElBelZRY2ZiYWdqNkoxdnlkVmNOUVdZZHBhOElZdGxrMkg3ZG9TQzVPaURBMXdaTjFMMHFsQW9HQkFOT2cKcG0vc1lkZ0JXZmJnUTAvZStKYlZwQ2krc0RMZ0dtVVo0NWRLUXRkK0NyYnJGb0VETjNnd2tGaWRTVDFBS295MwprQnNvc3FsVlhIaC9aSHorTkQ5Y1dlNUpCVU1EZ2YrOXFrOEM4Ry9XTzZ3bGtjcHNnNWxtbmZEaUpBOGc4UG14CmYvN3lEY2FGNUJXREw0T1ZGdmtFMG5hMGtLT3FDQjlvL0l3Q29qVmpBb0dCQUk3VXFUQlRnQStrRGVrcHpzbWwKblNKeTB3dXNRSU1oTjdkWDIraFlDT2doSHZ4QWpRdE9jSDlTeS9nZ2xVd3NRejZhVzVBZkdPN1hFUnNjRVYzTwpmZkJOUWo0TkRNNGhwOURaTVowUEtyVFRNdldBS0R3cGNFNFBab3hPekpzSXp1SEdNU2tQdjFNbEJCZUE4Q21oCnYxN0xwcEQzczM4SHdiNktPQ0VhOUM5cEFvR0FSQzA0RVV5TXhPTENrZGJ6dUhKemtWd29NM3dqRlhDKzhCMGsKQmVSRm5saWJxUXdaUnR5N2JQdndOS3dQSVMxZng4K0hIRWpETGV3ekN4cTNTOUUxRWNoMXJGOVgwNXY0c0dQdwp6dDE2aWZ6eFltY0VEYnRodGZTcUl5VW5TcnhwQlhmYWJVNmJnMzQwMlgxV3ZFUTJqMml2U05DbzNDRDExdkNpCms1UnhuMU1DZ1lBZmNDSDdvMEg5MzVBak9hM2hmR0NpZFkwS0JoWVdEVk12cjZLNFhwOTZ4clY4VXFVd1FsRVIKQXp1ZWlMaGlsWk9hWm0ybGhvUVVHeXBGcnZodTVlanJqcjlweEZ3b1k2T0xBcDdFZXhneEhWbWdFSlBFTWY5ZApDNVYreDU2MG9QQncyMUFubUVaU3ZVZ3FnaXBTV0QxRnhzeFVCcjMrVEdCYlhXZXZEUWtXakE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZUJnZEdWSFcxQjlCOXI5WnpkaHVNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXlOelEwV2hjTk1qWXdNekkyTURFeQpOelEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3hROWN3RUM1MVp4NGRYeEQxaFFjM2xkMGJRSFlJeUdqUVVhRGVxaTIxOGZQK0IzZmgKSFJoS1M3WXVUWmJzMldxbEFOQlV6OUdRaVpTaHFMOE04L3piUG5vZERpRWxjSk5lSGtZVVlDaTl4bllsSnFCUQpRbEZFU0crVVlqb1UrbVJOU2duN0w3VEhocUxNeTJXMGg2c3gzSDZyVm9tQTZ1UWU0cDVqRGZtcHl2WlFuRFMwCklrdmdYaXY0TXpjdTJhTHpwQ3JUZWxreWF1SEJUTjFzY0tvZTZzOEw1RE4xK2t1UC8zRUdyTjJRNFB2Q1A0RG0KVlpFYWFuRXlRaXZnSzVNR2toZlE5ZE9ELzgraW1KVmFKUEJ3a3BKbHRIclN0TU1pdk5lb2dYN0gwS0pLamJESgoyaDMwSko1cTNzcFV2NUdDZHZrYzd6MUxETlpwTFFPY3EwMkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU2dzdvUkJ5cFVDbENoZ3lkd0Eza2hZQ29HYTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCSlNrOVQvMXAwSFZCUFNHSU45Wi9YcEZjdHMwVkFEQnR3Rjk3dTh6NDl3Znlqemc5K3NMT1JOCmpqQUJJclRzSVRzcWFZVTBWaTQ4RnJxYkRqYm80TjY0Mk0yVmxHMGY2aitoR0Z0RTNqWkNHaHBaWXJLZnJPNmMKN2ZoUzVMeXBoMTVRQ3U4cVh2V1k4WlZUU0ZoeXVIOWFuN1d0NG5nOUVQUCtpclVsMDAxTEkrN29DcmRIY0dQWAozSTkwbU9pdEQ5d1NIbitzbE5ndnJRTmdXNXVqclM4ZEFMSmlFY3pVS2VCWnJsWVFqWDh5SWxCV05Td3VXTFRyCi9wdzJqUjVaQ2g4MWp3V2lMNlEvUmsxdUd2YjhEOFBNci9TYWhBOGh6VDBxNlhOUzN3UUx0bzQ3anJwbTd2QW0KRmZWYzF2cnNMRlF4N2VWOURuNHhRNXhDcTkyWU8wcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUtjam84M3VKbDJ5RU4zSmFUN0dmaVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeU56QXhNamMwTkZvWERUSTJNRE15TmpBeApNamMwTkZvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVQ2b3FaVEExVlgKVkhPU0xoVmJXeXN1VlQ2dkNLZUV6bFB6ZGp6Ujhxd3JjQVppaWZ2SS81UlZManpNbTR0dDh5WTNONXMrVkxiTwpuNTZ2Y1NNS2lva2dLZWc4WWoxVGJPUHJuYURwclRBcDZjUjBMK1R5Y092TWFETTZNdWVNdDRQMmR3Q1VJdGVNCitaUHFTaW9SVFdZMlAybmQ2ZVlmNHNkZHpJSHpOWmc3ZGRXeGtVeTlDdmhFYTh1Mk5BdXhIUml1dDBPQzE2dDAKb1YyejBGdVF4SExHNmFPbFFyL3JhSWtrcW4rTDEwcXdRelBQMVA2WFR3ZlBFRVEwWTNYZUxsczR1TDRzK1FoUQo0NE1DamNyZzFOOFNZa0xHSnBacmc2Z2tMMHBDVkt1Rlg4QTd6dkliNmtlL05KRHJpMjJoeHg2NDFKb1ErVElCCkdhTkNMa2VnTEhjQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVNnc3bwpSQnlwVUNsQ2hneWR3QTNraFlDb0dhNHdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSTkoxWHdRcTE2ekkKeGo0d3l1Mmo3aEFTYTYwa1czZDhhUkdZd2FLY0JHcHZzUmdCSkhmZHhiY2J6MEw1WWxXdVd2aDRQSzVob0VGVgo5S1hsNW1ITXZTSUdQbjZuQUwzcStYMmhNMU53aHNkWW5NZ3JuZmlIUEJpc3duWW0rNG42NGJZT2orVmpmbEtECkJDTWpBSGpGMlowZ09sdU9QbzBmNUxkcnY5QnVBSlMvWTJDb2E0VUlzR2RhUGd4ZlplTE5WSDBWcVBiVFc1ZU4KckVuSEZvMVNsUGJWTitoa0pBSzBoV3QxRzJ1YW9TamNiQVNlMnJxV1pYNEVpV0RtMTZmZ2lsRGkzVFg4MDNLbApoeW1VWDBxUXkyN29uUm1nTlpXY2N4dmNPbVk2OGh3dVVybVBIbnpjQ2xucHJMK1hUcEUyV2YrOWRvZ2U3d0dPCnBEa3pyanBmOFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFBxaXBsTURWVmRVYzVJdUZWdGJLeTVWUHE4SXA0VE9VL04yUE5IeXJDdHdCbUtKCis4ai9sRlV1UE15YmkyM3pKamMzbXo1VXRzNmZucTl4SXdxS2lTQXA2RHhpUFZOczQrdWRvT210TUNucHhIUXYKNVBKdzY4eG9Nem95NTR5M2cvWjNBSlFpMTR6NWsrcEtLaEZOWmpZL2FkM3A1aC9peDEzTWdmTTFtRHQxMWJHUgpUTDBLK0VScnk3WTBDN0VkR0s2M1E0TFhxM1NoWGJQUVc1REVjc2JwbzZWQ3YrdG9pU1NxZjR2WFNyQkRNOC9VCi9wZFBCODhRUkRSamRkNHVXemk0dml6NUNGRGpnd0tOeXVEVTN4SmlRc1ltbG11RHFDUXZTa0pVcTRWZndEdk8KOGh2cVI3ODBrT3VMYmFISEhyalVtaEQ1TWdFWm8wSXVSNkFzZHdJREFRQUJBb0lCQVFDbkJ6QnNnTy9PcWVLKwpyVEhPZ2t6b2JMMTBEYy8wM0xSb2s0V3JSUXZWMm05L3VvYnVyaDJxbGlCREJlelBha2hJRzRKWGJaOC85QzE5CnpaN042OTVWTUtUWWZIdUJMUUNrcytKUjFGUTdCdzltdW03eVlISklRR2dMS0VxSjlkU1hYYUxESnRuMGxXSDgKZnlxc1NVZXNhRXVWWmNzMGk4MHM2T2pGT0lvMXJwakxPT3hvZk5iaWFZZWxSV0ltREgxTEtubkppMno5eWliSwpLKzE1N1puenV1bHFORUVMdjZCMmYxTDFYWUJpWjQ2Zzg0YUZsUldwMFhjSms5dHRlejd5NTJlVUp4WjN5SXMzCkRSS0ZJT0RRVmRIdWNjOTEwUzVnOTErdFYxSDFlYVE3VTNHbnBrY2xLUko1UFpjZHhqM1QxMzR0MUpaeklaeXIKQ0luT3JXd2hBb0dCQU9oTHJNUGltcXU1ZzBwM0wrOForWjBnWndjVEFNUUxUdUhETmdTbDRPN2lNdFFNWDIzOApHTDZvWlJkOGhXemNOaksyZHEydGkvZkpBMUZhRXhZSkhWQUowWC9mbkIrTC9scnJIMlRMT1RQTWdlUUIvcE42Cm5TRkYrYVZiWGlIQUZZNjJpYlE2THFyRzFPQXNrS0MzREV3NjVOdnhDV3p2aVU1MzBZekNnSE1yQW9HQkFOa1UKWURNa0c0NmZqQklZMFZkNzRxT3pWRGJDS2hRR2ZoQndjcXJ3VXdub2o2elVzdjVSR0p3YWY0UlNtM0VNRDVkUQplRDNZM2tFb0xBNnYvOXFIZGFZM3VXU2liWDdRVldUd2wyYkJHWFdkL0dneCsvaVJJQU5VVnBORnFxZnhhS2pBCnc5T0JDTTBoOGFXTTMvUnlBekdLN3FsK1pXbFMvd3VmYmZTSkEvWGxBb0dBVDMvZW42ZUU0Yko2c1ZoN0NpeHMKbGc3SjA4ejRIUi8xbmlRdDc0ZEpwTmU3SjRFWWc4NmNOVnZ5UlFoenJWN3NHWTBDcnN2UE5EMFNLcHhXSGR0KwpzYTY2aVRYZys1Ynd0UEwwNm96MmhiaSsxMmFyVnBQSEJPVXEzQ0daNUprVmg2TUhHNnd4M25adjBrek9Mb0tXCjdkdldDVVBEd3dsemgyeFFSZ2ttNXNNQ2dZRUFrSkhQVjMvT2tuZVRFMkpQMk5GNnFNYi9hTkI2c1lkNVlYMWkKQUpHNDI3cDBKUWdxaE5DQmNVVDhjNldJUEF0cVByMnF0cFc5dnVzQUhHLytGdzFydnQwUnJRRzNwbU1jMi9LWApBaW5MeU5jRWlHZnhoU014ak1ZWU9sQ0ZUUCtyVWVlL0F4YkdROGM5WmFHaWJPdVpVTjlUL3JGYzNINFh1U2ZlClZLTURiamtDZ1lBTTZKN0VLeUVPVkt0Y0dFWkFxMUhxbGJRb2FPMHdUeDc4aklwa09JNW9MQXgxQVQ4UEFTdlUKQ1NiQ2Q4aFlMRTd6cXQ0emFOSkJpdDhoYVRUdlJsZ3ZudXBKTGNmUzJ4VDdRZHpnYndOU2JLY3BDMk1WUEhyVQo4VmY4eEZMUEd4TzhFQ2hNb29YRGpsQmhpblhkRjBXMUtKWWhzVWYrWTd4eUViaXdEUXVMbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 2182eb569d5d802d01caf956ffb1e5d832f8db18c1aab019a945ea0d39b7947b
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 81566c8f4708fe07ec78c5a1fa70417642f2db293a63ba1db4139d0f066b9dd2
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 074e65b0cf3630f934806782a764e8c18797a0a79e73b531e25c964007a5a75b
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
