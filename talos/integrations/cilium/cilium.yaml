# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow port-distribution http icmp
    httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction
    policy:sourceContext=app|workload-name|pod|reserved-identity;destinationContext=app|workload-name|pod|dns|reserved-identity;labelsContext=source_namespace,destination_namespace
    httpV2:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
    kafka:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xQ0RmajRpWENGUEFVRUVGK05SNE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlORGt4TkZvWERUSTJNRFF4T1RJeQpORGt4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVkJlOFhla3JwTjliQWtUVGxJdEFRWHhkTHRldHdnY3k4eEJicHpGT2UwNlErSEIKQzkwZEd5UEJZcXhPbHFPOGVhYTNzc21kOFhYQkNhSlNJOFdNY2ZxWUx4aUFlRUFMMHpDcm4zNUh2RDA0Y20vQwpCWEd1QzZYZkFGZ3k0LzhVZVNjL0c5aDIvbFh6R1YyVEVGSU9qeVhjem9HODZ2cjhLcUhsTVpsS2xmeWx5UmJ0CkMwaVNrNWNMRHBWZ0J6Q0xjeVVMbzhwN1ViVWpGMGlCWFBMRitMTU1PT3VibHYzQXg2S2pQaGlPeHp5SG1xZWUKRFlpVmZDNGZjUk1wZWxHRFJHTktCL08xcHFGVldkSnpDOUxneHVsUjRUd1E5RkNieWtaMFppZkZZNmhoYTk5cgprbEZrK2w0TXUrWE1xaG9PcXl3UExlY3JSSFA5eU5YVmRsYlBIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUFZpVm9GOGZMdHFkTEtVSy9FblVmWGorbWVLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1tL3h5Zk9jS055blJKdFdubFhxVWpKNHVyZDUwYVVpSmthWGNYdWs2UVlhVmVTN0FxK3hHClhRZ1M2YzVUSUQ2OXZ6d2J4SkJWbEdDK0JhTStnVExJTzR3WHhZWWhCTVVRMWs0Rm5WR1I2UnlOMU8wTTBIY0oKQ0d5WVhxWEo3b1NKRUFHMC84WE8zWFRrS01ybHg0ck9ISlBtaS90b09yN2hNRjFyakV2SlB2eEJZQkJ5M2g2NQpDNDVJblR5YjVUc1M3QWRGOGZRbUhFOU9mODJSbUxEaWJPTkxzOTdOU1o5MDhzejlJczNKdXNuWktqMDhqOUMrCjlyemhKaU85OGJMMmJWUlVvRS9JUWc1R3JsUDBHall0YzJaVXZna0RmRjVqcU96aGNZaVhoNXRubURvQzVBOFUKaVBlM1I4Z3RtSjdaVEcxcXZpVERrR3c0RUhhWE5WcGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFZCZThYZWtycE45YkFrVFRsSXRBUVh4ZEx0ZXR3Z2N5OHhCYnB6Rk9lMDZRK0hCCkM5MGRHeVBCWXF4T2xxTzhlYWEzc3NtZDhYWEJDYUpTSThXTWNmcVlMeGlBZUVBTDB6Q3JuMzVIdkQwNGNtL0MKQlhHdUM2WGZBRmd5NC84VWVTYy9HOWgyL2xYekdWMlRFRklPanlYY3pvRzg2dnI4S3FIbE1abEtsZnlseVJidApDMGlTazVjTERwVmdCekNMY3lVTG84cDdVYlVqRjBpQlhQTEYrTE1NT091Ymx2M0F4NktqUGhpT3h6eUhtcWVlCkRZaVZmQzRmY1JNcGVsR0RSR05LQi9PMXBxRlZXZEp6QzlMZ3h1bFI0VHdROUZDYnlrWjBaaWZGWTZoaGE5OXIKa2xGaytsNE11K1hNcWhvT3F5d1BMZWNyUkhQOXlOWFZkbGJQSFFJREFRQUJBb0lCQVFESFlaSisycVBRODRkRwpVTUxHR1RyclBaa0p3NjF1RmRrd1BBbWI3dE5qNFZoZDd2NXZhWmxmRDhrWFQrQ3dWNW1pRzYvaUszRTYzeHNaCkxUaW5BSGRPM3hEMTA1WVVkWldOLzArTDVzTTRTT3lxL1UvSTFjZWZLc3BvVHB0eldMaE15NWl1MHB4T210cXQKTDloMWRHU1A4TllMRThRNzVRWXRLZmZqTGd6QkhxVWVSRTloZ0xhbzFJRWRrdnY5MGlnSzBsWTNVUGtidjEyVQpwZ1NwMFl0QkxLTjZRT01laWJUbVVPK2I1ZyttcVBtVStUL25tRktiZ09iYnhaQmljUnV1OENKb1IzZ1hYOUpmCmsyVzFwQ1puSTl1YUxVQWJVNTJrUkNRdE1HZEV4VlllTXNabU9NdkNRM0NPTVloMTNBZzVlT2hVUWhkSCtTbjQKRGZwYmFLNEJBb0dCQU5hbHR3d083V2ZtbE8vR0p5bEtzd0R1TEx4ei9OejUyMEEya3VxcHBPUmhoRDJqVDh2NgpDRitHTUd0K3lYYXE4c05IVlRHYUo4WjhMTzN1T3NDdGlyNVFUVWl2cTEwQjVDZHZERVFYanlCRmZJWTlBWjhECmhjbWNyQU9mZUJ6MnJPQTgvYkp6NWdnV1U1RCszbXBibFErTTZkdW1VbHZTN3FQVTRFSGJVdU9kQW9HQkFQbWoKbmVSMnlPbFBwQW50bGRkdVBoeFN0WWszNnZwN0dYejNBdFYvR0tIVko0ZU5ESDJ2a0lQY3MrYUIyZzR0OWNIUwoveVFsYmU0bmlNQncvaTFRVnc0Y2doaTN1SVdYeVBJUWZvRXBtN25kZmFGWmxRMEZtdHU1cXFsVUtUbFVtK1VwCmpBcjVoaFo0eHBtQTRNcjdXNHFVYzNYMk05VW4wL0JzSHU5NllJR0JBb0dBYjllQS9VTjU2RDE1TlVabWVWbDIKMC9GR1ZodUprZ3FPZDNMNE1sV2FtWFZHVm1lVjJJNjdkaXFSYURGei8rVXJBUjFXQXJaMEt6UGdwVWtRUy8wZwo0ZkV0azhZVTRDMXdHQ3dBbENwQ1pXcFBiQksxbVlsWVdLak42RVZiYkp3TGovdTNwUmhHcjhnU1d1YXlOWERxCnhtT0NKdlVPek5HbmpxNEkrOGV2OVBFQ2dZQW9pMTVWZ01WWXYwcVJJamszNS92R2RkaHVGTnJoRzZVa0dxb24KS3FGQmgzRUlIdXhzYlZzM1QxMFlqdlp2WHgrTy8wblpBUXM5cHNZYkd6N3M5U051YzByZDROampPYWUxU09DQwo4ZE1NK09BeW1HNFEwMXczVzR4UVBBOEY5S3Z0S0RaS2dnUTVHaHlIU2RzNG5HSmR1NGFWSGd1RkR4Ym84V2FFCjFvZGVBUUtCZ0htYTRFdzRTVExURlpKaFREdi9zOVBoZGVremw1N3htNFMyL2xidS9TWCtwb3pPNDk4Njc1S3AKWWpsRkl2b3h6anMyZFRsTlRwcE1MdDgxT1hIZTNoM2VkUXJreVJ2TTdpbit1MDJDZU9VS1A4S3dYTGwxMzVkKwpGQkZmTG1LVTMvcjF4cS9PUFZnTnRlRlRFWjB5K1ZaVlBiV2JsL3hYZ2cxbytLb1Ard3duCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xQ0RmajRpWENGUEFVRUVGK05SNE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlORGt4TkZvWERUSTJNRFF4T1RJeQpORGt4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVkJlOFhla3JwTjliQWtUVGxJdEFRWHhkTHRldHdnY3k4eEJicHpGT2UwNlErSEIKQzkwZEd5UEJZcXhPbHFPOGVhYTNzc21kOFhYQkNhSlNJOFdNY2ZxWUx4aUFlRUFMMHpDcm4zNUh2RDA0Y20vQwpCWEd1QzZYZkFGZ3k0LzhVZVNjL0c5aDIvbFh6R1YyVEVGSU9qeVhjem9HODZ2cjhLcUhsTVpsS2xmeWx5UmJ0CkMwaVNrNWNMRHBWZ0J6Q0xjeVVMbzhwN1ViVWpGMGlCWFBMRitMTU1PT3VibHYzQXg2S2pQaGlPeHp5SG1xZWUKRFlpVmZDNGZjUk1wZWxHRFJHTktCL08xcHFGVldkSnpDOUxneHVsUjRUd1E5RkNieWtaMFppZkZZNmhoYTk5cgprbEZrK2w0TXUrWE1xaG9PcXl3UExlY3JSSFA5eU5YVmRsYlBIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUFZpVm9GOGZMdHFkTEtVSy9FblVmWGorbWVLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1tL3h5Zk9jS055blJKdFdubFhxVWpKNHVyZDUwYVVpSmthWGNYdWs2UVlhVmVTN0FxK3hHClhRZ1M2YzVUSUQ2OXZ6d2J4SkJWbEdDK0JhTStnVExJTzR3WHhZWWhCTVVRMWs0Rm5WR1I2UnlOMU8wTTBIY0oKQ0d5WVhxWEo3b1NKRUFHMC84WE8zWFRrS01ybHg0ck9ISlBtaS90b09yN2hNRjFyakV2SlB2eEJZQkJ5M2g2NQpDNDVJblR5YjVUc1M3QWRGOGZRbUhFOU9mODJSbUxEaWJPTkxzOTdOU1o5MDhzejlJczNKdXNuWktqMDhqOUMrCjlyemhKaU85OGJMMmJWUlVvRS9JUWc1R3JsUDBHall0YzJaVXZna0RmRjVqcU96aGNZaVhoNXRubURvQzVBOFUKaVBlM1I4Z3RtSjdaVEcxcXZpVERrR3c0RUhhWE5WcGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFZCZThYZWtycE45YkFrVFRsSXRBUVh4ZEx0ZXR3Z2N5OHhCYnB6Rk9lMDZRK0hCCkM5MGRHeVBCWXF4T2xxTzhlYWEzc3NtZDhYWEJDYUpTSThXTWNmcVlMeGlBZUVBTDB6Q3JuMzVIdkQwNGNtL0MKQlhHdUM2WGZBRmd5NC84VWVTYy9HOWgyL2xYekdWMlRFRklPanlYY3pvRzg2dnI4S3FIbE1abEtsZnlseVJidApDMGlTazVjTERwVmdCekNMY3lVTG84cDdVYlVqRjBpQlhQTEYrTE1NT091Ymx2M0F4NktqUGhpT3h6eUhtcWVlCkRZaVZmQzRmY1JNcGVsR0RSR05LQi9PMXBxRlZXZEp6QzlMZ3h1bFI0VHdROUZDYnlrWjBaaWZGWTZoaGE5OXIKa2xGaytsNE11K1hNcWhvT3F5d1BMZWNyUkhQOXlOWFZkbGJQSFFJREFRQUJBb0lCQVFESFlaSisycVBRODRkRwpVTUxHR1RyclBaa0p3NjF1RmRrd1BBbWI3dE5qNFZoZDd2NXZhWmxmRDhrWFQrQ3dWNW1pRzYvaUszRTYzeHNaCkxUaW5BSGRPM3hEMTA1WVVkWldOLzArTDVzTTRTT3lxL1UvSTFjZWZLc3BvVHB0eldMaE15NWl1MHB4T210cXQKTDloMWRHU1A4TllMRThRNzVRWXRLZmZqTGd6QkhxVWVSRTloZ0xhbzFJRWRrdnY5MGlnSzBsWTNVUGtidjEyVQpwZ1NwMFl0QkxLTjZRT01laWJUbVVPK2I1ZyttcVBtVStUL25tRktiZ09iYnhaQmljUnV1OENKb1IzZ1hYOUpmCmsyVzFwQ1puSTl1YUxVQWJVNTJrUkNRdE1HZEV4VlllTXNabU9NdkNRM0NPTVloMTNBZzVlT2hVUWhkSCtTbjQKRGZwYmFLNEJBb0dCQU5hbHR3d083V2ZtbE8vR0p5bEtzd0R1TEx4ei9OejUyMEEya3VxcHBPUmhoRDJqVDh2NgpDRitHTUd0K3lYYXE4c05IVlRHYUo4WjhMTzN1T3NDdGlyNVFUVWl2cTEwQjVDZHZERVFYanlCRmZJWTlBWjhECmhjbWNyQU9mZUJ6MnJPQTgvYkp6NWdnV1U1RCszbXBibFErTTZkdW1VbHZTN3FQVTRFSGJVdU9kQW9HQkFQbWoKbmVSMnlPbFBwQW50bGRkdVBoeFN0WWszNnZwN0dYejNBdFYvR0tIVko0ZU5ESDJ2a0lQY3MrYUIyZzR0OWNIUwoveVFsYmU0bmlNQncvaTFRVnc0Y2doaTN1SVdYeVBJUWZvRXBtN25kZmFGWmxRMEZtdHU1cXFsVUtUbFVtK1VwCmpBcjVoaFo0eHBtQTRNcjdXNHFVYzNYMk05VW4wL0JzSHU5NllJR0JBb0dBYjllQS9VTjU2RDE1TlVabWVWbDIKMC9GR1ZodUprZ3FPZDNMNE1sV2FtWFZHVm1lVjJJNjdkaXFSYURGei8rVXJBUjFXQXJaMEt6UGdwVWtRUy8wZwo0ZkV0azhZVTRDMXdHQ3dBbENwQ1pXcFBiQksxbVlsWVdLak42RVZiYkp3TGovdTNwUmhHcjhnU1d1YXlOWERxCnhtT0NKdlVPek5HbmpxNEkrOGV2OVBFQ2dZQW9pMTVWZ01WWXYwcVJJamszNS92R2RkaHVGTnJoRzZVa0dxb24KS3FGQmgzRUlIdXhzYlZzM1QxMFlqdlp2WHgrTy8wblpBUXM5cHNZYkd6N3M5U051YzByZDROampPYWUxU09DQwo4ZE1NK09BeW1HNFEwMXczVzR4UVBBOEY5S3Z0S0RaS2dnUTVHaHlIU2RzNG5HSmR1NGFWSGd1RkR4Ym84V2FFCjFvZGVBUUtCZ0htYTRFdzRTVExURlpKaFREdi9zOVBoZGVremw1N3htNFMyL2xidS9TWCtwb3pPNDk4Njc1S3AKWWpsRkl2b3h6anMyZFRsTlRwcE1MdDgxT1hIZTNoM2VkUXJreVJ2TTdpbit1MDJDZU9VS1A4S3dYTGwxMzVkKwpGQkZmTG1LVTMvcjF4cS9PUFZnTnRlRlRFWjB5K1ZaVlBiV2JsL3hYZ2cxbytLb1Ard3duCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xQ0RmajRpWENGUEFVRUVGK05SNE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlORGt4TkZvWERUSTJNRFF4T1RJeQpORGt4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVkJlOFhla3JwTjliQWtUVGxJdEFRWHhkTHRldHdnY3k4eEJicHpGT2UwNlErSEIKQzkwZEd5UEJZcXhPbHFPOGVhYTNzc21kOFhYQkNhSlNJOFdNY2ZxWUx4aUFlRUFMMHpDcm4zNUh2RDA0Y20vQwpCWEd1QzZYZkFGZ3k0LzhVZVNjL0c5aDIvbFh6R1YyVEVGSU9qeVhjem9HODZ2cjhLcUhsTVpsS2xmeWx5UmJ0CkMwaVNrNWNMRHBWZ0J6Q0xjeVVMbzhwN1ViVWpGMGlCWFBMRitMTU1PT3VibHYzQXg2S2pQaGlPeHp5SG1xZWUKRFlpVmZDNGZjUk1wZWxHRFJHTktCL08xcHFGVldkSnpDOUxneHVsUjRUd1E5RkNieWtaMFppZkZZNmhoYTk5cgprbEZrK2w0TXUrWE1xaG9PcXl3UExlY3JSSFA5eU5YVmRsYlBIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUFZpVm9GOGZMdHFkTEtVSy9FblVmWGorbWVLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1tL3h5Zk9jS055blJKdFdubFhxVWpKNHVyZDUwYVVpSmthWGNYdWs2UVlhVmVTN0FxK3hHClhRZ1M2YzVUSUQ2OXZ6d2J4SkJWbEdDK0JhTStnVExJTzR3WHhZWWhCTVVRMWs0Rm5WR1I2UnlOMU8wTTBIY0oKQ0d5WVhxWEo3b1NKRUFHMC84WE8zWFRrS01ybHg0ck9ISlBtaS90b09yN2hNRjFyakV2SlB2eEJZQkJ5M2g2NQpDNDVJblR5YjVUc1M3QWRGOGZRbUhFOU9mODJSbUxEaWJPTkxzOTdOU1o5MDhzejlJczNKdXNuWktqMDhqOUMrCjlyemhKaU85OGJMMmJWUlVvRS9JUWc1R3JsUDBHall0YzJaVXZna0RmRjVqcU96aGNZaVhoNXRubURvQzVBOFUKaVBlM1I4Z3RtSjdaVEcxcXZpVERrR3c0RUhhWE5WcGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYmxOTUMxOUN6WHY3VElWdER5UCszREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBPVEUwV2hjTk1qWXdOREU1TWpJMApPVEUwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDWVJxZ2hGeVBMd0F1VDZadWlUcG9MdW96ZmhaajcKY1RlenlIcm5tcEhSSVBCbmI0V1V4RUtBS2ZpcmljVTI4Y3ZacHBqK2s1c1NybFAyRXFWcnVadWZEdmRKMzNuMApiY0NCV0ZyNEJHaFlEbUxZVUpkVUFzUzV3UGpkcEdydnJRN3JEaUY4WWh3dS8xUnFJR1VvTlBreURoV1c2WURpClZ3ZXNyQ3VPK21yKysrTVRtajZldU9odzhDeWNZN0t1TUg5U2l1dXhWMEhDU3pURFRQdEVhbkRud0o1QWJ0QXkKVlpDdjhKNGJ4OTg2U0J3NkV1eDdFK3NYbDZ6c3BHNk1mQWJHbUQ4RmRpVGdhdU9SbnY0N3FZMjFXbW9qU3NPdgpwUzk2SGh2Y0pFR3Q2M0FRTmdNQW82RGhKK3Yzb2pjbkc5bWk0UU5oSGdoYmJVOW1xRXcwT1hhYkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQVmlWb0Y4Zkx0cWRMS1VLL0VuVWZYagorbWVLTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFQVTY3WVlaVWcvaFI0cUo2NjA1VU9SRmhFVm05RkdLM1duQU9kcUJNQWdjVEoydHUKY1U4L1dxTFNwbGZqbnlkYWZsRXlBRXJxaCswKzNxMHljQkM3QTE5YWZuelBlVXBEVXpma083aXQ2VisvVjRVcQpCVG9IckFSbzNpNDJmWWJQZGxlWlhYQjJXc0MwTkR4Ylg0RlR6QnRvQTdxUUdyMUFKRmFWZnZhRUZDQzJLWW9WCm4xazRsRmFiWDdkcWxoUEdZVy9XZStkN00rTjJFSWRBdVNzVytxRGZaeUxLR0ZUZDBvSGR3MzhaUDh0YTg4UXQKVmoyWDRUWFJERE5MQmR1RENVeUV0WTBBckpZRm1oQU8yOEZCYmJ6VnFsVzJWelAxUzFBS0xUaDBicHRsWHpLQwo5VTh1dlVrcU9JbHlLUVNyT2ZobnVlNGJWYkdOdnBiaEV6ZzJhZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbUVhb0lSY2p5OEFMayttYm9rNmFDN3FNMzRXWSszRTNzOGg2NTVxUjBTRHdaMitGCmxNUkNnQ240cTRuRk52SEwyYWFZL3BPYkVxNVQ5aEtsYTdtYm53NzNTZDk1OUczQWdWaGErQVJvV0E1aTJGQ1gKVkFMRXVjRDQzYVJxNzYwTzZ3NGhmR0ljTHY5VWFpQmxLRFQ1TWc0Vmx1bUE0bGNIckt3cmp2cHEvdnZqRTVvKwpucmpvY1BBc25HT3lyakIvVW9ycnNWZEJ3a3MwdzB6N1JHcHc1OENlUUc3UU1sV1FyL0NlRzhmZk9rZ2NPaExzCmV4UHJGNWVzN0tSdWpId0d4cGcvQlhZazRHcmprWjcrTzZtTnRWcHFJMHJEcjZVdmVoNGIzQ1JCcmV0d0VEWUQKQUtPZzRTZnI5NkkzSnh2Wm91RURZUjRJVzIxUFpxaE1ORGwybXdJREFRQUJBb0lCQUQ1TEdWaUFHTnF2TTQxTQowYWd5TTM1ODBFaFlaTjduei91eUZlVk5MRDI3RmQyYWw3RG1JTFpCZFVMblYxQkUxam14bDREOWJVRFZJKy9VCmJPdUd3SXp2R0dhV0QxUFkyaG1QeFpjVVpvTXZUMnhpZTZXWWhGWGhCVzNXWnhDcFlTTHpZdXQ1VDBKQ25ZdlUKdU0wYjdwMTFlWXVFOW42aFQ3aHBybUFOUFZ3Vm1aVFF5c0hwb05vUDhoY1RmVUtjU0g1eFhpSlZCYmRnNVh2Lwp1QWlsUFlWV1M1Mld3cmhCK0MrMnJSQm1YWEU5Vi9HWTRTK1dMZW00U3Q4ZkdmRVZEWGp5RUl2UzFvTlVHQmJqCi85dVJmL0Ruc3VvWmxzWTY5UDA3d3ZPaFN2cEZ0ZUIxSnF2bzVOVWh4WTRGenlrMTViN1VMUzZ2Q1dON3BFdHIKZk9Ed0RlRUNnWUVBeXFlM1ZSOEhKb0QxZUkzN21jMUI2dDhrL040SCtxUHpFaVZWaVZDblN5N0llekUvMWNVQwordTQ4ZmNZaWg3TXdFNndlTWhKWHdGV1FvYlN0WFdNaEI4MlB2Ry9XZjl6VUJEK1g3eWk1Y1YwMWFrNEprUHNqCnBvcFlHdzNvcVo4RlBSbEF6RGV3RHV3dmRRL1VzZ0pkZU9tYzJzZjJJVlJsdTdMMWhtK29XQmtDZ1lFQXdGd04KRlVoRkthaDRvVHhTR0FTdndoWWxxakZCOG9oVUo1eXM4aS83c1dvRnlFOVBEdy9DRWpLeHhSaWlvYSsrb0o0awpoWGVBMnYwL0ZzSk9mQXcwRWY1bmJjVDR5YTNwcnh2N01UbGpGTnF5alBiaFcvVUUrR2Z5SjRwME5qb0RzL3dhCnRkNGljbkl2cGpZcVVtbEdJYnZUZHdxK3JPUGhjUkY4elBIQzZ0TUNnWUVBZ2dKdXZ4RVV5VUxhTitqK2pJRDkKMU93ckVuNXVxQUVlSTNvSUVmdklGNWQvem1pZUIwcEl5eXFqYkJ6OGNnb213YmdkOXdtRmVrSnFjeE15VlVNUApJYTVpbEFVN212UFVvSlVicDdaOG9abW1kdmh4Y3ExckJhQ2pQVmdDOXk2cGNiVU51UFhRNFFIc3dERFR4dzkxClgraWZWRXdNUHYyaDluU3N4djVEQmFFQ2dZQkpuUENFekh0clRjV2NMbkZjTDY3ekgzYWFndTh4MldvYkhxSXcKckp3dGNOMTFvcVFtcDJrbGZiRDZORXRJaFBEMmxvNXpaU0F5cmVlTzFoMGk2NmlobWpJS2wrNTlmOGlGOHJkVwpSeGZieXpXNUxHRmh4NHAzWlpBT0FiWW5hbHd3YkxIc0YyNG5UZnRlS0N4YURWK0JXVmU3bnFrSmtNdWRjWXZKCkFsd05jUUtCZ0daT1czMU5rTFVUdHBFVW1aMXJsSldQOTlhUFp3Yk1ST29wWHhNVEVZT2tqa1FFM1JDbWZrQ1IKS2hWaEFnRVdvL1NvMmhBbzVoNi9uTHQ1YXhMMUhiYUFtaXZOdlp6YUJnOXBxWmgwQnorSWdobTRUdHJiR2RTUgp0TzV6Yis2alM0WE9FN1VOTkIycXU4WnM4K2YzdUQ4alBkcUhPUGduaTBhdVJtQjEyVUIxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9xQ0RmajRpWENGUEFVRUVGK05SNE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlORGt4TkZvWERUSTJNRFF4T1RJeQpORGt4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwVkJlOFhla3JwTjliQWtUVGxJdEFRWHhkTHRldHdnY3k4eEJicHpGT2UwNlErSEIKQzkwZEd5UEJZcXhPbHFPOGVhYTNzc21kOFhYQkNhSlNJOFdNY2ZxWUx4aUFlRUFMMHpDcm4zNUh2RDA0Y20vQwpCWEd1QzZYZkFGZ3k0LzhVZVNjL0c5aDIvbFh6R1YyVEVGSU9qeVhjem9HODZ2cjhLcUhsTVpsS2xmeWx5UmJ0CkMwaVNrNWNMRHBWZ0J6Q0xjeVVMbzhwN1ViVWpGMGlCWFBMRitMTU1PT3VibHYzQXg2S2pQaGlPeHp5SG1xZWUKRFlpVmZDNGZjUk1wZWxHRFJHTktCL08xcHFGVldkSnpDOUxneHVsUjRUd1E5RkNieWtaMFppZkZZNmhoYTk5cgprbEZrK2w0TXUrWE1xaG9PcXl3UExlY3JSSFA5eU5YVmRsYlBIUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUFZpVm9GOGZMdHFkTEtVSy9FblVmWGorbWVLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1tL3h5Zk9jS055blJKdFdubFhxVWpKNHVyZDUwYVVpSmthWGNYdWs2UVlhVmVTN0FxK3hHClhRZ1M2YzVUSUQ2OXZ6d2J4SkJWbEdDK0JhTStnVExJTzR3WHhZWWhCTVVRMWs0Rm5WR1I2UnlOMU8wTTBIY0oKQ0d5WVhxWEo3b1NKRUFHMC84WE8zWFRrS01ybHg0ck9ISlBtaS90b09yN2hNRjFyakV2SlB2eEJZQkJ5M2g2NQpDNDVJblR5YjVUc1M3QWRGOGZRbUhFOU9mODJSbUxEaWJPTkxzOTdOU1o5MDhzejlJczNKdXNuWktqMDhqOUMrCjlyemhKaU85OGJMMmJWUlVvRS9JUWc1R3JsUDBHall0YzJaVXZna0RmRjVqcU96aGNZaVhoNXRubURvQzVBOFUKaVBlM1I4Z3RtSjdaVEcxcXZpVERrR3c0RUhhWE5WcGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRT3BVYkdTRTlhREpJVmt6Z0JBWDhzVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBPVEUwV2hjTk1qWXdOREU1TWpJMApPVEUwV2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6Qyt4YXphT3ZxdzQKR3dLRXNmcFpOY2UvZEZxbXZCTzJRWGxIR1VrSUVwUWZ2MHQzQnljZWJEYlJYN3hQNnk4NHlLSjBrZ1A5UmhYeQpjN1BGS2RiY0JxYUE3WTAzdUErUEVtOWJpeHhyZStUaHFDa0JzMEdibnhWRmxqc0NCamU4TW5pcDV1aWxNZGMrCkc1U3k4c2JId2wvRUFxdWVoVDRxQ3dydEpIaVp5b0o1NjcxS2VnRjhlMk9yby9rcHlYU1kzbWpIdGVkRXlaYk0KRUhGTlZQcmticnNmTUJjYVN1VkVDVURORGdZOUh1R3lwL2hMblQ1UXFnZlQrQjR0UGR4Q1RHbWFVNzA2dEhGTgpRU2h3OVFWSHNwQWtia0dqKzQ2QjBZamhuWUFHbVlLSUtUTkNqZXVGcU12dFNoUkF1d2lNUFE1dG5wZjYwNG9PCmprcTFHayt5aVFJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQxWWxhQgpmSHk3YW5TeWxDdnhKMUgxNC9wbmlqQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQS9PMGpuZzIrL3NLQ3kKWXJxUkZOeU5scnI4RWNtV285d091d0llQW9jRVRlWldOYWtYSHI1eGs0Qzh6QThabW0rK3BpTStxVlcxMS8rRwpCaTMwRlR0UjVMRjJsSWRySFA1QkpYU3J4SStoZVpxQU5RSTJMSmp1WXpVQTdXZFRid1BON3FXSElnbHZSYVFDCnRkV0FGbnZQQmNHczZUanVjdUgwZ1lkSzN3MTBia29zNDNsWjFkY05QRVVoTmc0eGlGQWVybDNWTWtiVWQ1aVgKZzQycGExRXA4TjJURGYwQTZ2S0l3Rkhzd0pBcklmVDlrcGFyekQ1UUpLais2dndqb0l0S0EzdVFJT2RBVXpoNAo0Y3dmYmV4SUVSVE1WR09ZSng1OGNvOGZ5TVBCMitJTmd3c0xDQlJzalI1ZTlJRkV4VHlmdDhIL2FFdDJUdWJkCmRCUUVVcDZzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBekMreGF6YU92cXc0R3dLRXNmcFpOY2UvZEZxbXZCTzJRWGxIR1VrSUVwUWZ2MHQzCkJ5Y2ViRGJSWDd4UDZ5ODR5S0owa2dQOVJoWHljN1BGS2RiY0JxYUE3WTAzdUErUEVtOWJpeHhyZStUaHFDa0IKczBHYm54VkZsanNDQmplOE1uaXA1dWlsTWRjK0c1U3k4c2JId2wvRUFxdWVoVDRxQ3dydEpIaVp5b0o1NjcxSwplZ0Y4ZTJPcm8va3B5WFNZM21qSHRlZEV5WmJNRUhGTlZQcmticnNmTUJjYVN1VkVDVURORGdZOUh1R3lwL2hMCm5UNVFxZ2ZUK0I0dFBkeENUR21hVTcwNnRIRk5RU2h3OVFWSHNwQWtia0dqKzQ2QjBZamhuWUFHbVlLSUtUTkMKamV1RnFNdnRTaFJBdXdpTVBRNXRucGY2MDRvT2prcTFHayt5aVFJREFRQUJBb0lCQVFESHF5L016dW9oek5tRQptQjdZeUI1cXQrMGh3Ky9lWlV4SmxHWVJkTmcvQ3JoTTRXZ0JCNkQ1WTFXMVQ3bTdHMDlrNjNBZ3hXUHNJRlFhCkRzYVVGbmJNemcrdnZQT3F1eFJHaTd5eU9WVm1MemozcnpucGFCUGRLZmtGWXFpbEdlV2dXVnlUNEJhQ3VhQVQKYW9MZlk4RTk4MVlDNG40K2Y3NnZVN3o0ZURLejBzbS8ybmQ3WnRDZ2FnTTU0Z1RXdGhHUlpxZVVkYWIxZmN2cApWSTVGem1uQnh5WEVSQ3hCZzFwMDI5V1k3WjAxNEJ6R3diamg0Q0FzbFNkcE9SYUpKOWE5WmU0bHJnS0ZTdGs1Cm5NNHhDL0MrS1EzTWdISHE0TVdTM2VoS2xTaUxlUWRyejdac1M2WVBEVUZJRS9BZmpzUlIycXY2aWUyamdTRmgKeUxPZkZTOGRBb0dCQVBHY2FDZFpOaGF6L043cDdZWHdVQkFFQzhJTm12aXJxMnpVNENDSnJ2M25ZdllqbW5MRwpZaUpPd3pzMGxoazhuVVZEdVUxNjdHRHY0Y29UMVpiL2dNNkNmbWhnNWM0T29FaUdzU0lPNUgzZFljOWU4RTFkCmc5S0pzallibEVDTHVERFhVRUdsTVFYLzdNUEFQUlhCZXE3cWg4SHc2dGJHbU10Qkw4SnZoc0NyQW9HQkFOaFkKdGdFVExnb1VJbnRsMEtNcGg2RjVRQ0FkOHYwekYzUlg3a0FDczlJcjdkU3BiZ2xCQjQ5U21UdjZvdFd2SjgyNQpvOVpLTXFTTTdjSlk5SGRaUGtHajFQSjUrQngxb3ZGcXNzZTNIWTdCczBXUEJlMWI4TnFmaG9LaUUxTEl0c2k2Cjk2UitvL092NTZoSjd6cjRtWkszb08rQ1prZkswREU2NTlvTXFTR2JBb0dBYjVSbDNWWXJ6b3hNeWIyS3ZnSmYKVnlZbkwvVU1qcTdwT2hlTmNqbGpvVXFNdjFOdDduZUR0b2hkVFNoWjhVbTI3OWY0NmJsTkZPOXpmTmx3R0kzaQp0SHc3V0lUM1hCUVJIYTFtZkc0WVE3QkxqWE13MHVuUENSb2lQUzY3WnB1ZjhwNWRLQlBiOGdOaEduM2JPQUxrClg0ZGNMc3JPQ1dZcUJpUVNwRjdSQW9VQ2dZQlBHaEJoMER0ekgrMkRwTFJtRTljdGFRSFRQR0FOeDlKNWpYVGwKSHBmVTdvN2t4SllnK0EvbGpWUE5wRlJKUU9PU3lwOW15SFkveCs5ZXNkdWdqNWE5dFVNMDdQZVVvRVpWY3FldgpjZnB5cWN2OFVORGYray9ULzZQVXU2SEpFTzRUOHBoOUluaWJydU5LbXMzSGlBSE9yU2xBcVRMd2FPMDZNc2wyCjVrNG9wUUtCZ0MvOTVhZnM0ZnRQS2dPL0ZuOVR3SStIZUhHWWNlaHhVTU5xemNFY0QxV1krTUhUZGZyTW9iTUcKVjBVVUNVb05nNkxqdmFkc1JSbnl6WmkrZFVocnhQb2VhaHl2aEM3dG9qaDZpaGcrUFl3QVhGYjhmOG42M0VnSQorLzF0cFVrV29ibUtKSHhtb3F1VHlzdEZ0a0VVU2dYQzgreXNNcjJiWVdTYlk0cFlsZ0ZVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c35573df7bc1122971dec322ce57085e6cbed25914e800a22516456f2163c3fa
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
