# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtJbnZYWkVzeExZbkVuOXVnRlh2Y0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4TENIL0RLMHRIYTdobGpHOTJ3TFY5SThDV21mdGxVS0xqQnVoUzc3OTZSRGFVT3gKNVNtZzdlSks2ZmFOeExJbmJoQXB3M09uQy9uRjlMK0NwK2g4R2xaVUd0UVZhc2R2bmM2dFUwdCtkSGp3S0srYQo1bHRHazc2TU1NMTFXd2MxL21mVHhUTjJKRkZNWVFtWlpueSs0TnFqS21ScW4vRDdsN0ptbUJUUlBpTzFQMFBRCmF4em1sZExaMlZFRUcxQUVqcUdpUDlzUUY4T2FyemJvOGFxaWp3Y09PVDdlczdWTCsxMGhLcFQvZnNoNVd0cysKNVRiWFUyNjZEbFgvWFRtOXE0ZEF1MkhmaHJCMFN6WWQwdFI1dUZKU0FqbnZNR2padWxKSVQrQnJTR3Q2ZGszbgp6VFlCcDhFOXdqdjJMM284clhWSjJsaHdnM0p1UTVIRUJEQ2JyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWlaM3N0bkNiUTRaUzdBWFF4VERsaitLazh1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzlXZG9uY1lGd09TWExXZGtDNmNqNkdiekdEb3p5ZzIvYjBDQWF4Z3AvdWdnNnRudmlKUWxDCmVIR0ZZdmdhNE8waExSTTY5MUY1VGlEbUxTbWxOY2R5L2lkQmZmSUxmd3RlU2tZTmhFZTh2anFQMzRwUHp1MzEKZ2FCUzNwcGxMeDFsa0RzbmpwV09LUVB6MWVORHhwdkE0OG5iRHlDR0JMcFN3SVYxWU0xQ3g1bENWNERaOGtRVApFRFNBZEx5TWtGaGU4VENHcm5uYUhSQzNlaE1qT0ovUmRBZFcxS3hBcFhBTWw5bVpFNjZMRlFENkRHVTVhTSt1CmZ6bmlsSXlGT2g1d2Z6bnFOY2pxSlpVc0lLZjNUaVY0TWZvMUMwN1YwSnF0eThJd2lXTTNhVjNDM21IR2k0WmMKazhTUHM4RGIwRVE0SVdrdUlGdzUxOTFyd29rWU4zYnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeExDSC9ESzB0SGE3aGxqRzkyd0xWOUk4Q1dtZnRsVUtMakJ1aFM3Nzk2UkRhVU94CjVTbWc3ZUpLNmZhTnhMSW5iaEFwdzNPbkMvbkY5TCtDcCtoOEdsWlVHdFFWYXNkdm5jNnRVMHQrZEhqd0tLK2EKNWx0R2s3Nk1NTTExV3djMS9tZlR4VE4ySkZGTVlRbVpabnkrNE5xakttUnFuL0Q3bDdKbW1CVFJQaU8xUDBQUQpheHptbGRMWjJWRUVHMUFFanFHaVA5c1FGOE9hcnpibzhhcWlqd2NPT1Q3ZXM3VkwrMTBoS3BUL2ZzaDVXdHMrCjVUYlhVMjY2RGxYL1hUbTlxNGRBdTJIZmhyQjBTellkMHRSNXVGSlNBam52TUdqWnVsSklUK0JyU0d0NmRrM24KelRZQnA4RTl3anYyTDNvOHJYVkoybGh3ZzNKdVE1SEVCRENiclFJREFRQUJBb0lCQURVMjJhTzNDRUxtK0xkUgpYNHRqVlBKT3MrV01DU1RvZnhlZUROakZySEFFcGlSZHAweXI1WmxXcHhRRG03bUN4YjQyYTBZeERSbmxXdFJyCjErcWJzSy9qZVYvRXo0S1RNTFNPVFVDQzVWU1h2OG9TTUtOd1FIa0tqWjFLaVJ5MnA3b0wxelM4UnBOdTEyNU4Kalk0MzQrQ3I1b2M2b2NwaUJYKzJTYUdOeUVxNkhxNStLSXZTTTJjT2ZCUkNjZ0t6SEh1NUlMRGdTeWV3dktzeAovSTkxNmhLUG14MFMyUkxCNTM2RWc1OFFCODgrNjdrVFQxeWNzbm8yK0RUdStuRDFVb3czMnlQb1BYQzl2MDBiCkRQTEhTZS84cHlkN2RzejZxc2VadG04T1RzSTM5M1ZGeG9xdU1qa0ViNnM5RTd0cWNjdFJDbytXaEdFQTFlN08KZjZZTU9MVUNnWUVBOG91akltZGRVd21DK3NrS255UjhXZzNkejRzOFJ5dk1iS045b25OOU5FNGplTXhRWXJXegpmSW9wNUhqUW96U0ZKUGNiQmh5Sm1DSnB4TGtIZjVxZTM1cjRsclhTcjZ3ai9iaEdSVXo0WFZ4NkliN0YyUVFPCmtMRWErTFpXdEI4cnRiRHhuTjVubndFdnRSR28vUThUYXJPUW54dGhuUnJ5dnpIQ2ZFblNwWHNDZ1lFQXo1bXoKQjZWZThJM00vUzlXaEltM21JOFgwVHVaNnpaU24vb1psSTE1a2FZSUlZV2ZBRWRkNkJpZmVnaDQ0V3MyNG5IeApaQ3ZTVW9MQ3hMeUJ1RHBpekNPcTE0aWZOVVNxU3B6SFRacGZiYXRuV29XRFJYT0dkRi8rNXJZSzBwbWpiSitoCmRBOWgwQ1V4MElteVB3cnFWVFRjUUZ1V0d5KzJCNFdZbklPeE52Y0NnWUVBNGF4UFE0bU5hZCtsd1JZaURlVHkKMXcrajNLSWVtZElFeU9odDB5TkYwYzhLYmpFY2NsdkIveFRHMmRBWHdHTHpwMnRMOTZuQjFJM2dmNnZ4Y0NjNwp2NjMvc3FyR3Q3R2hZMGQ4Q3FzTlJFRHhXa2lZNmMwK2lCNWhqQnlNRzlnTTRXY2J4K3VmMm5CT0pWbWpOS0k4ClhNRnF4TC9EV1Z4amxNWUZ3WU1tdmRVQ2dZRUFnZmtoakV6dDVyOXdzcWNiakxsSU4veUdsZG14NFFCT3RKZjUKd2ZiZFFPSHBQMHVRSTdXS3hvLzc4SVF6WWpZazA1c3czVjFPUFpoZVpwdjZ2eVBXelNZYmhQdWxhYzFHckpZQgpkY1dMcjNiYnEySGhzTzdHSkVBaHI4SVRmb3p3TTBheDU1N2x4MUl5SVBURW94R3JhcE5Bdmc1WktVWXl1ZnpiCmNrcEUvanNDZ1lBOGU2UmtpNmROZjFGRlFseVovdXczMDNNZTVzeFNZOVZWc0MrQ3U0dExtdjl1MzZiVUV6dEkKUTg2bDhHSnVpcHk5LytZVHU4c0p1b0hJaXl2WVVoekMyUDI0Qm5vK2x6SVNmODFWcGZwd1F1VEo4SUNLNWVVbQpGQkRiVXc1Z1NrWEpQSkE0S0Mxekh3SnBubzNnRDFyMnBQSHBaYVRlbE1FUVpkbkN2SDVNMUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtJbnZYWkVzeExZbkVuOXVnRlh2Y0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4TENIL0RLMHRIYTdobGpHOTJ3TFY5SThDV21mdGxVS0xqQnVoUzc3OTZSRGFVT3gKNVNtZzdlSks2ZmFOeExJbmJoQXB3M09uQy9uRjlMK0NwK2g4R2xaVUd0UVZhc2R2bmM2dFUwdCtkSGp3S0srYQo1bHRHazc2TU1NMTFXd2MxL21mVHhUTjJKRkZNWVFtWlpueSs0TnFqS21ScW4vRDdsN0ptbUJUUlBpTzFQMFBRCmF4em1sZExaMlZFRUcxQUVqcUdpUDlzUUY4T2FyemJvOGFxaWp3Y09PVDdlczdWTCsxMGhLcFQvZnNoNVd0cysKNVRiWFUyNjZEbFgvWFRtOXE0ZEF1MkhmaHJCMFN6WWQwdFI1dUZKU0FqbnZNR2padWxKSVQrQnJTR3Q2ZGszbgp6VFlCcDhFOXdqdjJMM284clhWSjJsaHdnM0p1UTVIRUJEQ2JyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWlaM3N0bkNiUTRaUzdBWFF4VERsaitLazh1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzlXZG9uY1lGd09TWExXZGtDNmNqNkdiekdEb3p5ZzIvYjBDQWF4Z3AvdWdnNnRudmlKUWxDCmVIR0ZZdmdhNE8waExSTTY5MUY1VGlEbUxTbWxOY2R5L2lkQmZmSUxmd3RlU2tZTmhFZTh2anFQMzRwUHp1MzEKZ2FCUzNwcGxMeDFsa0RzbmpwV09LUVB6MWVORHhwdkE0OG5iRHlDR0JMcFN3SVYxWU0xQ3g1bENWNERaOGtRVApFRFNBZEx5TWtGaGU4VENHcm5uYUhSQzNlaE1qT0ovUmRBZFcxS3hBcFhBTWw5bVpFNjZMRlFENkRHVTVhTSt1CmZ6bmlsSXlGT2g1d2Z6bnFOY2pxSlpVc0lLZjNUaVY0TWZvMUMwN1YwSnF0eThJd2lXTTNhVjNDM21IR2k0WmMKazhTUHM4RGIwRVE0SVdrdUlGdzUxOTFyd29rWU4zYnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeExDSC9ESzB0SGE3aGxqRzkyd0xWOUk4Q1dtZnRsVUtMakJ1aFM3Nzk2UkRhVU94CjVTbWc3ZUpLNmZhTnhMSW5iaEFwdzNPbkMvbkY5TCtDcCtoOEdsWlVHdFFWYXNkdm5jNnRVMHQrZEhqd0tLK2EKNWx0R2s3Nk1NTTExV3djMS9tZlR4VE4ySkZGTVlRbVpabnkrNE5xakttUnFuL0Q3bDdKbW1CVFJQaU8xUDBQUQpheHptbGRMWjJWRUVHMUFFanFHaVA5c1FGOE9hcnpibzhhcWlqd2NPT1Q3ZXM3VkwrMTBoS3BUL2ZzaDVXdHMrCjVUYlhVMjY2RGxYL1hUbTlxNGRBdTJIZmhyQjBTellkMHRSNXVGSlNBam52TUdqWnVsSklUK0JyU0d0NmRrM24KelRZQnA4RTl3anYyTDNvOHJYVkoybGh3ZzNKdVE1SEVCRENiclFJREFRQUJBb0lCQURVMjJhTzNDRUxtK0xkUgpYNHRqVlBKT3MrV01DU1RvZnhlZUROakZySEFFcGlSZHAweXI1WmxXcHhRRG03bUN4YjQyYTBZeERSbmxXdFJyCjErcWJzSy9qZVYvRXo0S1RNTFNPVFVDQzVWU1h2OG9TTUtOd1FIa0tqWjFLaVJ5MnA3b0wxelM4UnBOdTEyNU4Kalk0MzQrQ3I1b2M2b2NwaUJYKzJTYUdOeUVxNkhxNStLSXZTTTJjT2ZCUkNjZ0t6SEh1NUlMRGdTeWV3dktzeAovSTkxNmhLUG14MFMyUkxCNTM2RWc1OFFCODgrNjdrVFQxeWNzbm8yK0RUdStuRDFVb3czMnlQb1BYQzl2MDBiCkRQTEhTZS84cHlkN2RzejZxc2VadG04T1RzSTM5M1ZGeG9xdU1qa0ViNnM5RTd0cWNjdFJDbytXaEdFQTFlN08KZjZZTU9MVUNnWUVBOG91akltZGRVd21DK3NrS255UjhXZzNkejRzOFJ5dk1iS045b25OOU5FNGplTXhRWXJXegpmSW9wNUhqUW96U0ZKUGNiQmh5Sm1DSnB4TGtIZjVxZTM1cjRsclhTcjZ3ai9iaEdSVXo0WFZ4NkliN0YyUVFPCmtMRWErTFpXdEI4cnRiRHhuTjVubndFdnRSR28vUThUYXJPUW54dGhuUnJ5dnpIQ2ZFblNwWHNDZ1lFQXo1bXoKQjZWZThJM00vUzlXaEltM21JOFgwVHVaNnpaU24vb1psSTE1a2FZSUlZV2ZBRWRkNkJpZmVnaDQ0V3MyNG5IeApaQ3ZTVW9MQ3hMeUJ1RHBpekNPcTE0aWZOVVNxU3B6SFRacGZiYXRuV29XRFJYT0dkRi8rNXJZSzBwbWpiSitoCmRBOWgwQ1V4MElteVB3cnFWVFRjUUZ1V0d5KzJCNFdZbklPeE52Y0NnWUVBNGF4UFE0bU5hZCtsd1JZaURlVHkKMXcrajNLSWVtZElFeU9odDB5TkYwYzhLYmpFY2NsdkIveFRHMmRBWHdHTHpwMnRMOTZuQjFJM2dmNnZ4Y0NjNwp2NjMvc3FyR3Q3R2hZMGQ4Q3FzTlJFRHhXa2lZNmMwK2lCNWhqQnlNRzlnTTRXY2J4K3VmMm5CT0pWbWpOS0k4ClhNRnF4TC9EV1Z4amxNWUZ3WU1tdmRVQ2dZRUFnZmtoakV6dDVyOXdzcWNiakxsSU4veUdsZG14NFFCT3RKZjUKd2ZiZFFPSHBQMHVRSTdXS3hvLzc4SVF6WWpZazA1c3czVjFPUFpoZVpwdjZ2eVBXelNZYmhQdWxhYzFHckpZQgpkY1dMcjNiYnEySGhzTzdHSkVBaHI4SVRmb3p3TTBheDU1N2x4MUl5SVBURW94R3JhcE5Bdmc1WktVWXl1ZnpiCmNrcEUvanNDZ1lBOGU2UmtpNmROZjFGRlFseVovdXczMDNNZTVzeFNZOVZWc0MrQ3U0dExtdjl1MzZiVUV6dEkKUTg2bDhHSnVpcHk5LytZVHU4c0p1b0hJaXl2WVVoekMyUDI0Qm5vK2x6SVNmODFWcGZwd1F1VEo4SUNLNWVVbQpGQkRiVXc1Z1NrWEpQSkE0S0Mxekh3SnBubzNnRDFyMnBQSHBaYVRlbE1FUVpkbkN2SDVNMUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtJbnZYWkVzeExZbkVuOXVnRlh2Y0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4TENIL0RLMHRIYTdobGpHOTJ3TFY5SThDV21mdGxVS0xqQnVoUzc3OTZSRGFVT3gKNVNtZzdlSks2ZmFOeExJbmJoQXB3M09uQy9uRjlMK0NwK2g4R2xaVUd0UVZhc2R2bmM2dFUwdCtkSGp3S0srYQo1bHRHazc2TU1NMTFXd2MxL21mVHhUTjJKRkZNWVFtWlpueSs0TnFqS21ScW4vRDdsN0ptbUJUUlBpTzFQMFBRCmF4em1sZExaMlZFRUcxQUVqcUdpUDlzUUY4T2FyemJvOGFxaWp3Y09PVDdlczdWTCsxMGhLcFQvZnNoNVd0cysKNVRiWFUyNjZEbFgvWFRtOXE0ZEF1MkhmaHJCMFN6WWQwdFI1dUZKU0FqbnZNR2padWxKSVQrQnJTR3Q2ZGszbgp6VFlCcDhFOXdqdjJMM284clhWSjJsaHdnM0p1UTVIRUJEQ2JyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWlaM3N0bkNiUTRaUzdBWFF4VERsaitLazh1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzlXZG9uY1lGd09TWExXZGtDNmNqNkdiekdEb3p5ZzIvYjBDQWF4Z3AvdWdnNnRudmlKUWxDCmVIR0ZZdmdhNE8waExSTTY5MUY1VGlEbUxTbWxOY2R5L2lkQmZmSUxmd3RlU2tZTmhFZTh2anFQMzRwUHp1MzEKZ2FCUzNwcGxMeDFsa0RzbmpwV09LUVB6MWVORHhwdkE0OG5iRHlDR0JMcFN3SVYxWU0xQ3g1bENWNERaOGtRVApFRFNBZEx5TWtGaGU4VENHcm5uYUhSQzNlaE1qT0ovUmRBZFcxS3hBcFhBTWw5bVpFNjZMRlFENkRHVTVhTSt1CmZ6bmlsSXlGT2g1d2Z6bnFOY2pxSlpVc0lLZjNUaVY0TWZvMUMwN1YwSnF0eThJd2lXTTNhVjNDM21IR2k0WmMKazhTUHM4RGIwRVE0SVdrdUlGdzUxOTFyd29rWU4zYnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpyRS81UUhsc1RtSlFucGZLTUdhVG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBWaFhtVDZOL0VGYTFKVTMxUnBkYkdQZ3YzZTQKV0ZlU2FlTlV5Sm9uY0tiSkM3ZXpSREwwRzY1azNOTExzRVJCbDROVGZLUEdNcEJWNkRhY3FhSmJISmZpeFNTcgp0QjlFblY4MTZJNnBDbUdCSGtEQnZWUzFsSXV5UjdNVCsyaUdZaFdyNjBLaUNzVVFSdm5rMmovazltd1lQTHBTCktLekt4M0NMc2c4VGRBOGVFaWhYVlpnbE5VSTgrczF4eWN2NzFtbzN3RVNPbmRpYnI2aVY4OXZHOWpaVkdGSUgKdk9KTWc0LzhvYjVQQnFBcnBiOC9nRUpMelZSYy8rWVBpUWwrRUJDUmU5VnlFSW41c3NXQkFsOGZTRFc3KzVSYgoycktzRE1SMnpWS3hKUnFiSU9rcDE3am9mMXN6MjFwV29LL2NLUWgrU2trTVUzQ3JoZTFsM0d6b2R3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUltZDdMWndtME9HVXV3RjBNVXc1WQovaXBQTGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSVREVkZrN0dDYlVCbnAvbU9XMlVRcWNiNGlCWmpENzk5MkhXYWNQVFdzZm05TXUKd3lmQ0xZS3FaUVZLVW1rUVN5eXpKWHdQcDBPNUxLTVlVdXYzVlZMdnVUdTZ4d3N4SUk3cVN5NXJJUkd3V3h3QgpUZEE1bUp2N3BIdGpHK2wwQ25hY1k0NmVneityTlBMNHpHNkwzaTdKRUE4dUxCZ1hLY3VCZ1NPZnNBVHVSMEN6CnZRZVlNTzZYQUpTVUhwT1cxd0c5bjNCbmFobE5paHNIOE5pTzQ2dEk3dDcyb2RPQ1FpQ0xkTy9qaXFkSUUxVkUKaXpIeWg4RlIrMWpLYTk3azN4VytoTVIxT0tNTzUrSWtQMnJsRzZZb213djdkdnFCR2ZvRG4ySzZBRy85TmsrYwpSMFBTSldYM1A1SXF2a0xGV3VhWUQvMDBCTzJQYk5tMnA1TEoxV0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMFZoWG1UNk4vRUZhMUpVMzFScGRiR1BndjNlNFdGZVNhZU5VeUpvbmNLYkpDN2V6ClJETDBHNjVrM05MTHNFUkJsNE5UZktQR01wQlY2RGFjcWFKYkhKZml4U1NydEI5RW5WODE2STZwQ21HQkhrREIKdlZTMWxJdXlSN01UKzJpR1loV3I2MEtpQ3NVUVJ2bmsyai9rOW13WVBMcFNLS3pLeDNDTHNnOFRkQThlRWloWApWWmdsTlVJOCtzMXh5Y3Y3MW1vM3dFU09uZGlicjZpVjg5dkc5alpWR0ZJSHZPSk1nNC84b2I1UEJxQXJwYjgvCmdFSkx6VlJjLytZUGlRbCtFQkNSZTlWeUVJbjVzc1dCQWw4ZlNEVzcrNVJiMnJLc0RNUjJ6Vkt4SlJxYklPa3AKMTdqb2Yxc3oyMXBXb0svY0tRaCtTa2tNVTNDcmhlMWwzR3pvZHdJREFRQUJBb0lCQVFDd09mN2IyT1hyZ1JTMgpPYnJiWUt0ZWNDR2s3R0k1czlaajN1UGpUcWwrMGxnUnpoMVJmdGN4YWpnc0VDTTVpZXZ4WUxMcURHL3U1c1A2CmkrYUxna25Tb3lWWnNjbjlBZ2xmdE9PTGxuUkVjZG9nbm9DNUlkTU5iaCt3N2RZWFlHRW50bmlYdmVyc3lBRXcKem5KUksxSlNBcUxRbEVSUFMwNFVYL0NvL3Jud2lyWDRtUjRmcUFGdklKZmVqSWw3L0EyR1YrcmVnY2FwN2NRegpBeWhYNjlOcW5vTVRsSHF4OVdabUtKanhVRWpzWGJvMGQ0dm9LMFd1d2Z0KzRRTnMxOXg0VytpeUZ4dmxLMlBqCldaTTNpdlc2Q0dFWWFCaXVHNm13TjQ0Nk1vWENOOTlrZ3FaUFZiRW0wZWJyRkpUVHZENFRDUHNvTmNXcEt0d1gKbFdnekg1SkpBb0dCQU5OelQ5QkxFMzgzREZIQkdLbzREdERqWkZ6QzBhTVY2UWJMdUhwNU9IVFhTTVRMRXNzegpCTDJoYkZweklrRXZvYVRVZCtKYmdPak1rVWVyaEphSkhIeG8vS2pEOFEzM0MxU2xSM0NkNkwwZDVMUlN5Q0pHCnhsc0FzV29UV09DWGtGSFJTWlNHaVltSDdyNWJEdDVZUEQ4TVlHTnIrN0g1MnpTZnB0MzdTWlM3QW9HQkFQMXoKZWk2MjJtb1hSdjdBUnZudXU0RVNPZ3hqZU03S1dhMHhUY1BuRFlmZk1IZ0FDT0l1U3lqNXRRemxLWDBwZENvZgpTYXhIeFN0VUkrazRQVnhMcWNwYWMzRnFvdzBiV1hpYjl6WER4eHJKMXY2UjdmV2JINDBLd0RSZy9YNmUzQVIrCmFVUFFzTnNkY1BoMnpHZkI2bHJiVEVjRkVuUlJPRG5ZWHZMd0RGMTFBb0dBUWsyWUsxSS9UTmF3RURxaVIwM0kKcDR1Ri91Zy80QW1ReGthL0UvaEswYWhuOHYxU2FWRVlIWFl1aWJZc2VaQTcrWGwrRmdablI1aE52ZEYwZzlkKwpqU3hHZll6alcyT3BzK01Yb2FLQ1JqckhhaHZERWF4cnFrRnZZRG1zMXMvdnV4Z0xJSDJIUnc3T3QvWEpsY0xKCk1XUHFIWUxRcTZBVE1rOFZmZW03eXQwQ2dZRUFnQmkwSVJZVHI5a1I3Y0Y2WGVtVjVQYzBWWHlVMjFjVUdkKzQKWVJIUEdlUG8yRTJVTDlTYjhocTZzY2pFdmxpTU9KblZuM2dxbytxRHQrVFB4bTBMWkpWd2tWc0hDNkhPQjVJMApVSDBoalYyRUJ1ZjBiOVMyRG8vbmN0R3ViU2VYSmNKS0s1YzNPNWRXdUkwNlpCcHkrdmFwUjUrOW93SkZ1NTZxCjVuZ0NsOTBDZ1lFQW1TaUlKb1laTU10YWI5RHUrWjFjaW5GakZSWEE3Q2ZkVS9CR1NxajUxSjRIdU05djF5UXoKWUJ6ekU1MXV5b2tESGdDczRQRm02WEgrWmRiOHFQQ1JwdGlqQ1Z5OUQzdktNNkQ3MFVIaDdtUHdscnhscEZlWAo5NHFMZXN4U3loWEhkNG4yd0hneW1SakNJR3JGVGpMdG5Bem1yY2Y3RjRKeE1Za004d3B2SGZzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtJbnZYWkVzeExZbkVuOXVnRlh2Y0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4TENIL0RLMHRIYTdobGpHOTJ3TFY5SThDV21mdGxVS0xqQnVoUzc3OTZSRGFVT3gKNVNtZzdlSks2ZmFOeExJbmJoQXB3M09uQy9uRjlMK0NwK2g4R2xaVUd0UVZhc2R2bmM2dFUwdCtkSGp3S0srYQo1bHRHazc2TU1NMTFXd2MxL21mVHhUTjJKRkZNWVFtWlpueSs0TnFqS21ScW4vRDdsN0ptbUJUUlBpTzFQMFBRCmF4em1sZExaMlZFRUcxQUVqcUdpUDlzUUY4T2FyemJvOGFxaWp3Y09PVDdlczdWTCsxMGhLcFQvZnNoNVd0cysKNVRiWFUyNjZEbFgvWFRtOXE0ZEF1MkhmaHJCMFN6WWQwdFI1dUZKU0FqbnZNR2padWxKSVQrQnJTR3Q2ZGszbgp6VFlCcDhFOXdqdjJMM284clhWSjJsaHdnM0p1UTVIRUJEQ2JyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQWlaM3N0bkNiUTRaUzdBWFF4VERsaitLazh1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzlXZG9uY1lGd09TWExXZGtDNmNqNkdiekdEb3p5ZzIvYjBDQWF4Z3AvdWdnNnRudmlKUWxDCmVIR0ZZdmdhNE8waExSTTY5MUY1VGlEbUxTbWxOY2R5L2lkQmZmSUxmd3RlU2tZTmhFZTh2anFQMzRwUHp1MzEKZ2FCUzNwcGxMeDFsa0RzbmpwV09LUVB6MWVORHhwdkE0OG5iRHlDR0JMcFN3SVYxWU0xQ3g1bENWNERaOGtRVApFRFNBZEx5TWtGaGU4VENHcm5uYUhSQzNlaE1qT0ovUmRBZFcxS3hBcFhBTWw5bVpFNjZMRlFENkRHVTVhTSt1CmZ6bmlsSXlGT2g1d2Z6bnFOY2pxSlpVc0lLZjNUaVY0TWZvMUMwN1YwSnF0eThJd2lXTTNhVjNDM21IR2k0WmMKazhTUHM4RGIwRVE0SVdrdUlGdzUxOTFyd29rWU4zYnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUtZSUdPOHhCZ3lwWDRhK0duOUZuNEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNREUwT0ZvWERUSTJNRE13TXpBNQpNREUwT0Zvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1JrOXBodXNSQVQKN0dRZ0VmK25XUXNCN2NJZUg0TTBwMGN5c2FvWmlDc045YzE4TSswdWVpeWM3ZHBXN1ZmVjJ3OThhN0FxOSs4RAptbXovS0pLeVByZWtOOU83Qk5qaDJqZ2V2MGdpc1B5dnFaTmh2NjROUUdmNk1PQmpFZEVoL0VoeEJaUnJlWUtwCkJQS3QrSTZEekFJQ1dJSVZVR2l4WlV2R1ZneGVaaEJoV2xwMlZvUVRoc0pSaXovSUt6Qm9sY1hERjNuYlNuN3cKM2lSTW5jVjRtR2lidkUrTVZvTmhKcEFMOEM1Z3g3cGlnVlV6UUtFbTNiWHh6UEFPTjVMNWR3N1NHSGlSY001bwo3NEhreEhOR2NzOTlqWVVHOS9MYXJZUW1SQmpqVnUrQ2s3WTZRNGpRL0Q5UlYrc2hBbDB2c09VR1hJWEhLNTd3Ckt2ekVEYndicCswQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQ0puZQp5MmNKdERobExzQmRERk1PV1A0cVR5NHdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF1KzZ0czc4VEFDdm4KMitnblRaeGg3MnhHdksvbTFaV20rWkc4S2NqUWJua0ZNSS9TZXNlVTlBZWJoVWdVY1pjNTZOajlrNG1IeWhsZQp1MXlvL2J0eDk5V24yNGpNNkhOdDc0ODJHUHVuNWtNSEdSMmJydjJzYkx4eXpiZ1FnZ3dISkUvZE1SQUVaRjlHCnNubmdLSFVHS3R6TW15SnN2NklUWThpV1IxV0VTYld3R0g4aHlDU1U1ZHF6dEhVSnhucTBjNzFQQXNuMUNHRkYKM05vcjk1NHFPTXp6UzRHSE1kcUs3bGNSOTdWcHFBZ0ZMRUVqZWIzYm00WE1pZFdiZEk5NnBNN2pubmVReWE5YgpvVDBQeTA1ckRWcGErYjY1bTFYWnhKeXl5eFdHeWdMdTdyQVZxWDVGV2I5S2JGQ0d4eVRPZDV0VDIwYjVESWUzCjV4MkJzVkdZMXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNUdUMm1HNnhFQlBzWkNBUi82ZFpDd0h0d2g0Zmd6U25Sekt4cWhtSUt3MzF6WHd6CjdTNTZMSnp0MmxidFY5WGJEM3hyc0NyMzd3T2FiUDhva3JJK3Q2UTMwN3NFMk9IYU9CNi9TQ0t3L0srcGsyRy8KcmcxQVovb3c0R01SMFNIOFNIRUZsR3Q1Z3FrRThxMzRqb1BNQWdKWWdoVlFhTEZsUzhaV0RGNW1FR0ZhV25aVwpoQk9Hd2xHTFA4Z3JNR2lWeGNNWGVkdEtmdkRlSkV5ZHhYaVlhSnU4VDR4V2cyRW1rQXZ3TG1ESHVtS0JWVE5BCm9TYmR0ZkhNOEE0M2t2bDNEdElZZUpGd3ptanZnZVRFYzBaeXozMk5oUWIzOHRxdGhDWkVHT05XNzRLVHRqcEQKaU5EOFAxRlg2eUVDWFMrdzVRWmNoY2NybnZBcS9NUU52QnVuN1FJREFRQUJBb0lCQVFDcHNuS2VzN0FQbUI0TwpEdDRRckJDMjR3bjdMMUtPdERLTjdoYWZvalRRZUtEbnVwOENYWVFkWGNSRWRFNEk4emErZk4ydW1WNTZVcDBNCjIxRVVIaWdIWHBhMFZNSzNPcWhmQmtsdG1Za1RWcG1TamhCVGpEa01pSktFUmxmWW9YM0hmV0o5OHBUb0JobE4KRHdJZE1jUUV3aVZ0RWRVYTFLUEU5MnE3NmUrL3ZvNkNNelk5bEJiblJpcmNUZWc5NzZ4dktVTHRqYjZjNjBqOAo4TElIQjBCTTJSNGxVb09rMGRsTVkxUDZxMkZTNjcyeUUrdDhRRzhuUU53WEtXK3Vibld6YS91NUZSZjJ2blc0CkEzYkwyeHRaMTBkc1Y4dENhQkF3VEJNL0I3WHFNZVc5UEUwL0xrdVlya014a2E3OEhDOGFQTUh4cDBGNFl1RjMKeDliNk5xcnBBb0dCQU8rSm9WVmgweHdMRE9vL3ZHVHkyM2Fwb3BmcTl2KzE0YStBMFRnSzljYSs4Q2VsZ2MrRAo1dFZKQW90NVhOMnBRSW1TNTdsMGt4MUN0NXYwOEZvVXdQQjdoRnl1K042dkJjcG5yb2NpYlBXQ3grZVBUSzMyCnRMU2RlSGNpdU8veGFFYWdRaWNCcDRDaWZNSG0vT0V5MmVyczR2d083dnpkTlU1NFBEb2FNaTRQQW9HQkFQUVgKU0JocmFTaVh0L0U1YzdBT0xEZDFGOHFycFZHdDgvM203TEsxTEdHenpJU1RFdHhCRWlDVk94VnFpeDlFK1l2WgpIOVRhKytSVDVNTm9ZSFhrbWVQODlOamxuUHMvdFFKdTRVeElIM2YwQnBnSHEzY25vVU9LNm81L3NTOCtsRnI5Cm9LaWJWTjlwbCtLNHJFVXQyZStkbGpvd1U3UG4wcGY5aEFRekJzWkRBb0dBZjVYRUMvRkYrNnJiSHk0Qmo1ZFgKVTdYNDk0ZmNOY2xQd3lZT3loWDBZUDYwZGJtUEVkUEVzSmZwdGhaWFkyMVNCYlRzbmZnOG41bzRwK1huMjJNdwpmU2FkRXF6VHUvQm5XaTZ0WkNidStEbkhka3Y2WUxLRi82bmNUMEI4VnJremZHTEJ1WHNGRjl2MExXZDJEQkVFCnh6K1Rpd1A5UVV3bHAzMGRQeWxTenZzQ2dZQVQxVFJ4YjRESzRKRDhrNnQzdVo4VUhucUJhREwxa1FuTExwRTYKOEFlY0pLelFkTmJLZUtzTlpMSzVTYi9tR1llaE9sSWd6RzQ5SGlmdlRMTFJ3WEpUbVFFWUFvZ2Z6Z3hhRjBKTgpIV3NaSndYR0lwRm5EQnhKVGFkRFR0TEp3Tzd5K2JxdEdIbnI4VHQ3RzRBNzJyN2pmazF2aXUreUpYcnlDSkpLCmVRN3Eyd0tCZ0RteUl6aGV0MnE4QUFwQ2YwNXh3TFlHYzhld2NxdFV1R3dhUlBxNzFWQTRlWDRaTzc1azVvVnUKQ1BwRmVPY3VtMk81eTNVdVp1STRJUkw1a29VTmN4cFNlbjVhTjNtOCtYS2RSRDJ4aDJQNEJhdDB0UDVPWHFGawpzVk82YlhYbVhkUmYzKzR4Z1dyR2ZWeHFFMS9DUXI5SmFYRk9iY21RNERnSFZJZXpTSzlhCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c281fa3075d86b905861397b6a92141d9817fa780cd26dde3bd0287c3e2bd76a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
