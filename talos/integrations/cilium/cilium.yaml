# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow port-distribution http icmp
    httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction
    policy:sourceContext=app|workload-name|pod|reserved-identity;destinationContext=app|workload-name|pod|dns|reserved-identity;labelsContext=source_namespace,destination_namespace
    httpV2:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
    kafka:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtEbUVUSlo3Vk9PSlIxdlJqU3NhbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlNell4TVZvWERUSTJNRFF4T1RJeQpNell4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1M29CYVBlNjZYK3c3a0s2WUV6aHNzcDA4d0JuZDdTVytQbTE3N0RRTjJzMnkzeU0KaUdsTGh0MnhDaktyUzcyUUdXenZhdm5PUktBOW9vMlQ5RURPNmZjNDYxcUdxRzRJZUx3SXY3SlJxMlg5YzFGVQpSbC9MMU9jVHJXQzI0RjFzUVIxa1kwem5SejZoMnB3Nk9wZ2dQbU10ZEVJSGI0cG9LR2RQRzQyeUhQeXhaSmRyClAvazlRTlNOK055ODZDUHNITzZaRVpFK2JndktrTk9JRUZUTnhYOWdYY003VXpBRDhmTlR3cXB1QzVDQTRUS3IKRUdadm90RFg5Y0NvREMvbERVc1lleXhyNHJ4cGVWajZybFZaaGVWc05xZDc2dktybDF5VEZBREZ5cGhmTi9RNwppWDVBNGlCWnU4Rjlqa25GK2FiRXlkcUpENFRaYVI0bmNmaDhid0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUs0d3o4SHBBeHQ0OEFYME5BcUZVNjdHQXNwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzRzTjhnOTZDZVh4UTZ5cWd5MEo5ZFE1QjVyMnd5U3hIT2tRamhXQmxIcDJaTlhidTFsNm91Cmp5aXkyQloxQSt5UDU1b1N6UWNydVpTaGNod1N6QVAxcmFvMDZKc3NPYzJ4RFNQYUNlaWNqWnRFQXgxSUtoSUkKTHpOWHNJZHNIRlhjRnlNSlU1clRWOG5HOGlyY0k1dWRZQkhNdnRTdExrajhVNHR1MTd2TzJTdmVid0R6SDA4MgpZOXFDWTJ0T29tdzdtOXBpRFBISEFSMDZ6YUNIdkMzMU0vL2lka0lDUlBadUZZbHVkOGNiMDBzd200c3pqV0xTCk1vWmdQaVNiejhlSVNhckhoUllSV3BocDVDS29uOHNyY2NPV1BKVnpvRVB2NVZoQ1R3Ni9vZXNoYWs1MlM0Yk0KUmt1ZDlWMUJWbkZoenJKVzdYZHpFc0Zrbm1NYTFBRDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdTNvQmFQZTY2WCt3N2tLNllFemhzc3AwOHdCbmQ3U1crUG0xNzdEUU4yczJ5M3lNCmlHbExodDJ4Q2pLclM3MlFHV3p2YXZuT1JLQTlvbzJUOUVETzZmYzQ2MXFHcUc0SWVMd0l2N0pScTJYOWMxRlUKUmwvTDFPY1RyV0MyNEYxc1FSMWtZMHpuUno2aDJwdzZPcGdnUG1NdGRFSUhiNHBvS0dkUEc0MnlIUHl4WkpkcgpQL2s5UU5TTitOeTg2Q1BzSE82WkVaRStiZ3ZLa05PSUVGVE54WDlnWGNNN1V6QUQ4Zk5Ud3FwdUM1Q0E0VEtyCkVHWnZvdERYOWNDb0RDL2xEVXNZZXl4cjRyeHBlVmo2cmxWWmhlVnNOcWQ3NnZLcmwxeVRGQURGeXBoZk4vUTcKaVg1QTRpQlp1OEY5amtuRithYkV5ZHFKRDRUWmFSNG5jZmg4YndJREFRQUJBb0lCQUVIc1MvU2lMK3FOaVNTdQorQ1NHeEZKL1dKSmVVUVBKejlDcTFpdjdxNnZoR25xQlNGVnJXVENLWWdlbys0ejlrbDh1YkIzY3k0aGNKSEExCmdwSS8rOEpQdVljZzVQcnkvaTJlU1NGSFRlcU1TWXcwVEFNWENuREo5S1JodnN5MGJTMlViVWx4c0YzZ0N6LzQKOFl6TEU0TjhrbTR3RGJkT0h3UWVGN1lqcEQ4R2pXWEVSZSsvQ25LbHRGYkRwK0M0Y2cwbTd1TkVCTTFaSWI3egpIMFRBS3NHVGVCUS9iT3I4MmVUcDVXa2IxZXlzL1M0clZ1NXk4THhnQVlTSEVEbWVHQ2p5NHk3L1VrK1lWTFFyCkl2UWQ3UWYyU3lxNmRtRFpkbGpLT3BVTDVQaHVJVGhnYjYwRTFZaytWR01QWHZQUUVhc253Z0NuamRSTkIwZUwKNHdZQmVLRUNnWUVBeGNmaFFETitOUTJ4Z1ZYWVBqZ0xubHFSZnJ2TkgxcGxwbGd6S0MrZ3hUYUs2TlQ3cWtBYQp6WEdvYTYzd2tWajFvZ1d0REVDWkw0Sk9Mazk5cWZFQ2d2OGZVSEdpN2plekFXVktUVXEyS1FTcFlxUVBaMEc5CjAzSVMzbWkwdkZXMFhxY2VyRENPOW1TcUpVSmgrb1VUdjE3WEJlT1J6RzJnbVhmZU1oeXZhUEVDZ1lFQThxbWkKZWNsNUlWcHk2OHRVd2x1ZTYrZzd3UTFjVWlsZUF2dXAwMXFtVksyWEdpV0hZUGdpdnA1Z2xrOU1xY2ZqNDc1YgpHRnEzck9PR3lRTzJkWXpxYkJqZVFKY1VHaEdFdTJZdmkrMUxGWGV0YkNhbnFqOU1QNGdTT1ltSVNsUHJQT1E0ClRmcVBoeDdadGErcC9BVFB6eTVSdHpyZTVoMG53eEwvQ0dMQk8xOENnWUFkRkhxR0dnd2dlTmIwa1U2dU4wZGUKRFNyL1cxV1ptb3ovbkZCSlJGZDdKNzNjNWhQcXdHb3djdG0wbTJxWHRHREpaZFEvek8rNUVJdTJPM0hhbnRragpzYWRGQ0xCUUhsaHZpQmtZckRlRWFHOFBWZGY5OHFpYWdsZEw1RkZPcjd0SmY0RC9DRlM4M2FnMnVqLzF1Y05oCmkreEpyV0F1a3AvZWNNVjIwTWpwd1FLQmdDZWFsL0hZZC9TQmxvLzFOM2doQytia21Cd0IyamR1bVBGVHNYdlYKSjZCYVZIYm4rUmhTWnhsRkwrNVlNdUxpeE1hK29vOXUvdHN3cHliWGZFZmpINzlVcjdGSzl2VHFOd2QrdmZQUQpYcGk2VjR0M0k1WWRqb3d2NFFtUzhMTnd6c3U1VTVjbWRaWlA2cWhFYXpHK2Qwd1ErelUwWG55ZjlZVlk3RmFxCkIyOXhBb0dBZTlZYXdDZWpkQ1FzSGRnQWh6N096MW91Nzh1MVhEalY5OHVuaVdkRHNvOWVuNFlRa0FheVVVdjYKaDZGbkpabndpc3dmOXE3OG5WMng5ajE1SUF5dHowTEZNYXl6dkQxckZnNi9vOXR4cjllSVJnUWxUR2IrRTZHagpvK0xzS2JMZWFtNnNiNlV4cWFSS2JYeUhDeklzVDBvYzR0K3FJRGJHdVJwZndZeWFvUEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtEbUVUSlo3Vk9PSlIxdlJqU3NhbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlNell4TVZvWERUSTJNRFF4T1RJeQpNell4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1M29CYVBlNjZYK3c3a0s2WUV6aHNzcDA4d0JuZDdTVytQbTE3N0RRTjJzMnkzeU0KaUdsTGh0MnhDaktyUzcyUUdXenZhdm5PUktBOW9vMlQ5RURPNmZjNDYxcUdxRzRJZUx3SXY3SlJxMlg5YzFGVQpSbC9MMU9jVHJXQzI0RjFzUVIxa1kwem5SejZoMnB3Nk9wZ2dQbU10ZEVJSGI0cG9LR2RQRzQyeUhQeXhaSmRyClAvazlRTlNOK055ODZDUHNITzZaRVpFK2JndktrTk9JRUZUTnhYOWdYY003VXpBRDhmTlR3cXB1QzVDQTRUS3IKRUdadm90RFg5Y0NvREMvbERVc1lleXhyNHJ4cGVWajZybFZaaGVWc05xZDc2dktybDF5VEZBREZ5cGhmTi9RNwppWDVBNGlCWnU4Rjlqa25GK2FiRXlkcUpENFRaYVI0bmNmaDhid0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUs0d3o4SHBBeHQ0OEFYME5BcUZVNjdHQXNwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzRzTjhnOTZDZVh4UTZ5cWd5MEo5ZFE1QjVyMnd5U3hIT2tRamhXQmxIcDJaTlhidTFsNm91Cmp5aXkyQloxQSt5UDU1b1N6UWNydVpTaGNod1N6QVAxcmFvMDZKc3NPYzJ4RFNQYUNlaWNqWnRFQXgxSUtoSUkKTHpOWHNJZHNIRlhjRnlNSlU1clRWOG5HOGlyY0k1dWRZQkhNdnRTdExrajhVNHR1MTd2TzJTdmVid0R6SDA4MgpZOXFDWTJ0T29tdzdtOXBpRFBISEFSMDZ6YUNIdkMzMU0vL2lka0lDUlBadUZZbHVkOGNiMDBzd200c3pqV0xTCk1vWmdQaVNiejhlSVNhckhoUllSV3BocDVDS29uOHNyY2NPV1BKVnpvRVB2NVZoQ1R3Ni9vZXNoYWs1MlM0Yk0KUmt1ZDlWMUJWbkZoenJKVzdYZHpFc0Zrbm1NYTFBRDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdTNvQmFQZTY2WCt3N2tLNllFemhzc3AwOHdCbmQ3U1crUG0xNzdEUU4yczJ5M3lNCmlHbExodDJ4Q2pLclM3MlFHV3p2YXZuT1JLQTlvbzJUOUVETzZmYzQ2MXFHcUc0SWVMd0l2N0pScTJYOWMxRlUKUmwvTDFPY1RyV0MyNEYxc1FSMWtZMHpuUno2aDJwdzZPcGdnUG1NdGRFSUhiNHBvS0dkUEc0MnlIUHl4WkpkcgpQL2s5UU5TTitOeTg2Q1BzSE82WkVaRStiZ3ZLa05PSUVGVE54WDlnWGNNN1V6QUQ4Zk5Ud3FwdUM1Q0E0VEtyCkVHWnZvdERYOWNDb0RDL2xEVXNZZXl4cjRyeHBlVmo2cmxWWmhlVnNOcWQ3NnZLcmwxeVRGQURGeXBoZk4vUTcKaVg1QTRpQlp1OEY5amtuRithYkV5ZHFKRDRUWmFSNG5jZmg4YndJREFRQUJBb0lCQUVIc1MvU2lMK3FOaVNTdQorQ1NHeEZKL1dKSmVVUVBKejlDcTFpdjdxNnZoR25xQlNGVnJXVENLWWdlbys0ejlrbDh1YkIzY3k0aGNKSEExCmdwSS8rOEpQdVljZzVQcnkvaTJlU1NGSFRlcU1TWXcwVEFNWENuREo5S1JodnN5MGJTMlViVWx4c0YzZ0N6LzQKOFl6TEU0TjhrbTR3RGJkT0h3UWVGN1lqcEQ4R2pXWEVSZSsvQ25LbHRGYkRwK0M0Y2cwbTd1TkVCTTFaSWI3egpIMFRBS3NHVGVCUS9iT3I4MmVUcDVXa2IxZXlzL1M0clZ1NXk4THhnQVlTSEVEbWVHQ2p5NHk3L1VrK1lWTFFyCkl2UWQ3UWYyU3lxNmRtRFpkbGpLT3BVTDVQaHVJVGhnYjYwRTFZaytWR01QWHZQUUVhc253Z0NuamRSTkIwZUwKNHdZQmVLRUNnWUVBeGNmaFFETitOUTJ4Z1ZYWVBqZ0xubHFSZnJ2TkgxcGxwbGd6S0MrZ3hUYUs2TlQ3cWtBYQp6WEdvYTYzd2tWajFvZ1d0REVDWkw0Sk9Mazk5cWZFQ2d2OGZVSEdpN2plekFXVktUVXEyS1FTcFlxUVBaMEc5CjAzSVMzbWkwdkZXMFhxY2VyRENPOW1TcUpVSmgrb1VUdjE3WEJlT1J6RzJnbVhmZU1oeXZhUEVDZ1lFQThxbWkKZWNsNUlWcHk2OHRVd2x1ZTYrZzd3UTFjVWlsZUF2dXAwMXFtVksyWEdpV0hZUGdpdnA1Z2xrOU1xY2ZqNDc1YgpHRnEzck9PR3lRTzJkWXpxYkJqZVFKY1VHaEdFdTJZdmkrMUxGWGV0YkNhbnFqOU1QNGdTT1ltSVNsUHJQT1E0ClRmcVBoeDdadGErcC9BVFB6eTVSdHpyZTVoMG53eEwvQ0dMQk8xOENnWUFkRkhxR0dnd2dlTmIwa1U2dU4wZGUKRFNyL1cxV1ptb3ovbkZCSlJGZDdKNzNjNWhQcXdHb3djdG0wbTJxWHRHREpaZFEvek8rNUVJdTJPM0hhbnRragpzYWRGQ0xCUUhsaHZpQmtZckRlRWFHOFBWZGY5OHFpYWdsZEw1RkZPcjd0SmY0RC9DRlM4M2FnMnVqLzF1Y05oCmkreEpyV0F1a3AvZWNNVjIwTWpwd1FLQmdDZWFsL0hZZC9TQmxvLzFOM2doQytia21Cd0IyamR1bVBGVHNYdlYKSjZCYVZIYm4rUmhTWnhsRkwrNVlNdUxpeE1hK29vOXUvdHN3cHliWGZFZmpINzlVcjdGSzl2VHFOd2QrdmZQUQpYcGk2VjR0M0k1WWRqb3d2NFFtUzhMTnd6c3U1VTVjbWRaWlA2cWhFYXpHK2Qwd1ErelUwWG55ZjlZVlk3RmFxCkIyOXhBb0dBZTlZYXdDZWpkQ1FzSGRnQWh6N096MW91Nzh1MVhEalY5OHVuaVdkRHNvOWVuNFlRa0FheVVVdjYKaDZGbkpabndpc3dmOXE3OG5WMng5ajE1SUF5dHowTEZNYXl6dkQxckZnNi9vOXR4cjllSVJnUWxUR2IrRTZHagpvK0xzS2JMZWFtNnNiNlV4cWFSS2JYeUhDeklzVDBvYzR0K3FJRGJHdVJwZndZeWFvUEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtEbUVUSlo3Vk9PSlIxdlJqU3NhbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlNell4TVZvWERUSTJNRFF4T1RJeQpNell4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1M29CYVBlNjZYK3c3a0s2WUV6aHNzcDA4d0JuZDdTVytQbTE3N0RRTjJzMnkzeU0KaUdsTGh0MnhDaktyUzcyUUdXenZhdm5PUktBOW9vMlQ5RURPNmZjNDYxcUdxRzRJZUx3SXY3SlJxMlg5YzFGVQpSbC9MMU9jVHJXQzI0RjFzUVIxa1kwem5SejZoMnB3Nk9wZ2dQbU10ZEVJSGI0cG9LR2RQRzQyeUhQeXhaSmRyClAvazlRTlNOK055ODZDUHNITzZaRVpFK2JndktrTk9JRUZUTnhYOWdYY003VXpBRDhmTlR3cXB1QzVDQTRUS3IKRUdadm90RFg5Y0NvREMvbERVc1lleXhyNHJ4cGVWajZybFZaaGVWc05xZDc2dktybDF5VEZBREZ5cGhmTi9RNwppWDVBNGlCWnU4Rjlqa25GK2FiRXlkcUpENFRaYVI0bmNmaDhid0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUs0d3o4SHBBeHQ0OEFYME5BcUZVNjdHQXNwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzRzTjhnOTZDZVh4UTZ5cWd5MEo5ZFE1QjVyMnd5U3hIT2tRamhXQmxIcDJaTlhidTFsNm91Cmp5aXkyQloxQSt5UDU1b1N6UWNydVpTaGNod1N6QVAxcmFvMDZKc3NPYzJ4RFNQYUNlaWNqWnRFQXgxSUtoSUkKTHpOWHNJZHNIRlhjRnlNSlU1clRWOG5HOGlyY0k1dWRZQkhNdnRTdExrajhVNHR1MTd2TzJTdmVid0R6SDA4MgpZOXFDWTJ0T29tdzdtOXBpRFBISEFSMDZ6YUNIdkMzMU0vL2lka0lDUlBadUZZbHVkOGNiMDBzd200c3pqV0xTCk1vWmdQaVNiejhlSVNhckhoUllSV3BocDVDS29uOHNyY2NPV1BKVnpvRVB2NVZoQ1R3Ni9vZXNoYWs1MlM0Yk0KUmt1ZDlWMUJWbkZoenJKVzdYZHpFc0Zrbm1NYTFBRDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBYNUkrVWJaL04xTVBPNHM3UGh1cll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlNell4TVZvWERUSTJNRFF4T1RJeQpNell4TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZEQkpKaWVtREQ5bkRad0NGbDZQL0Q3U3FjK2EKMkRHeFBIM05wc3k2T0FCQWZUYURPT1dCaUQrUGZ6VGFzM2xWM2VVS3gzRm9vUW92ZlI0clBQc2xmdTlrRldJKwpkQ25QUXQ4UTJNdnZGejdhU0pCQ1dlZWpzRkJucVdtMGNuQTZKVXpBSGQvY3h4cnMrSEdpZlV1RzdySUxld3p5Ck8walg0cG11SWRuSzNmOE52ZUk5eHJ4YzNGc0ZLTGN0MGlLQlVUZzFTMk10bjk1K3FVajVISXdSYnViVVV0czgKbWIyWHVrdEFWeVluVjFNOUpZeU91YnJ4S0xFRW9LeWxDVHB6WEVadWYwbzM0ekZ1MHFDblFzQytWbFduZ0pPUAo0c0xmbW9KaEVmcWoyM0xHY0ZmUG1aaXo4Mm1iSkpmY1ZGdnYvaHR4VVl5OEdhM0JyZmZlc1hqMXl3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVEN1TU0vQjZRTWJlUEFGOURRS2hWTwp1eGdMS1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRHpObWJndTA0V0RreUlzcnNjUGpEZGUvWENBOUtYa1VjZW5pZHpPV0I2YjdKWXMKcG9tTTlXRFVoSWczSFBxRUhwbTl1QkUvc1hKOS9xTXBhRDdzNWhKZk9oNzVNc0Y5cDJEWUZ5YzN6UHpWQXc1WQpaZmp0NVFOTGdUNzhXY3hPYlZtOXlyWnBIdGpWek1VV0dVMzROY1NEcTFJSHVLTHBuMnZOcWhPd0I4ZEJTMW1ICk1ZLzFpaCtTTVdOWkd0SG1pcUpoeXZnQlZ5NG1oZ2U4OFdyWG5TZDMwa25QckhzdG1kODdYclJuRitVbWt6ZHMKcitoRW8wSERDRUdnWVp6SUpmcE9wVTlqMldXS1ZRM2R0T0JibHUzWmhUUk1adDNCeTF0cnJFZjM1VTV3dm5SMQpRL0JIbDkyWk84Y2hici95V3hKZkVQdkdZZE1qOENoVzJ3Wmhad2M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkRCSkppZW1ERDluRFp3Q0ZsNlAvRDdTcWMrYTJER3hQSDNOcHN5Nk9BQkFmVGFECk9PV0JpRCtQZnpUYXMzbFYzZVVLeDNGb29Rb3ZmUjRyUFBzbGZ1OWtGV0krZENuUFF0OFEyTXZ2Rno3YVNKQkMKV2VlanNGQm5xV20wY25BNkpVekFIZC9jeHhycytIR2lmVXVHN3JJTGV3enlPMGpYNHBtdUlkbkszZjhOdmVJOQp4cnhjM0ZzRktMY3QwaUtCVVRnMVMyTXRuOTUrcVVqNUhJd1JidWJVVXRzOG1iMlh1a3RBVnlZblYxTTlKWXlPCnVicnhLTEVFb0t5bENUcHpYRVp1ZjBvMzR6RnUwcUNuUXNDK1ZsV25nSk9QNHNMZm1vSmhFZnFqMjNMR2NGZlAKbVppejgybWJKSmZjVkZ2di9odHhVWXk4R2EzQnJmZmVzWGoxeXdJREFRQUJBb0lCQUVCM0FmZlNDUzJVNG9aawo5TW9ZNXBYd0oxWUlTZkRaUk8rRjROYk10dFhNTUVzMFMwdElRMUViQk5yOGpoYUE4QXN0Rkw0eGVUZ0JOemRUCkNGakJaNXpPQUtqYW1LNU9URE9LR2tsSndzTmh3b0NzK2kyMkRmcXQ4SFMyUXh3WW1iS0JVaVpwczBWNVVjZmgKbFZuNmIyU0JGVEczdzVyUFh6UytsRW9BUTJBOEVpbzRBSnh1ZFhqZFhRcjNiOHdlU2RyZm5yZGo0NzBrVno1dwphYnpsS0JGNy9ONkxlSnZnQW1kV21TTThLWk85U3hkQkFXeTlBVVJqRzFnejFQSEYzbGl0eEdpdy9lTXlqa2lICmt6MWo0TmhQZllTSnZya2xiazIvQW9Ic2FVWi9sOTFQRm9qSWVxd3pkc20xak5CQ3VrRXhKUTF2WDBvVmJTYWwKekZwQk5NRUNnWUVBejQ5OTBweFVTN20wNU1SNVlLRlIvVUJTcFdCb2Jsa1JvVjZSQkxrcUl3V3d5R2xjV0R2RQo4ZDE4SmpCczdwR1g4b1FGQTNtYnhPQUg4QXVkbGZCZ2xPU2xHSk1MNWE0MW5yTHcwcG9Sbm4ySFZBVFpBQ3BsCnBIOUswb2ZTVUw5dGlKd2tXL2JKSHl0L1AvUnlFcXNqZ3B2ZkF4dzYrelNnVVdpNitzZW1RbkVDZ1lFQTZCdHcKT1FoWU43c3d1Smk4WStZOHRYOGw1enRBSWppWFQ1eFN2UkZ6ek9hOGFyWW5xdmlpMlFCbDZoUGU2VVZlUVdOaApvZHE0YUhRZitPMFpySEVhRndzWUUwY2NQZlB2YVkwLzVudDkvMEV2c0JsZnRiU0g3akMxVkk0NnR6SVdSZzA2CmdDaDNkczVHM3F6cXF3TDMyMkVPbGxGZHZjYkh6QXE2b2VsWllmc0NnWUVBbnd3YVkwZXRoSFZpT3lhZXg3LzIKSHJTcVg5VTNVTTlwcGhqYjBSMitQeVgrS0NRc1FlUlM3dTlFVWRNcnRjZlZBbDNOcGJNSy9OcWEyb05jRnVnaQphaFdtdU9UODZkd0xkSGN6K0gxYzRQRFp3VFVSdjRHOWIwYW5aQm4xdkRCajA1bXFkdG50bGJmMEEyTGlBcEluClhNN3FIZTBFK1RlRFhiNStBT3I1Nk5FQ2dZQTRRR1liUEYxODdEM3Jqd0NoU1d4UEpFaUFXTWk3UW5IUlZuWnEKNGU3cHFzWGhLdEpFU2t2VlFaWnhlMjFicFhjcGE3ZCtyVzVoeWpyeGJpejVzTk44NERCdWc1NWhtVnZkZmVFTgpyOElpZVo3Z0U5WXhTRlpsTUtMUm9rS3lvVTNxbmt3ZVFUQnF0NlZQVkNMdlhTSEtwaVFONUJ4TzRQME5BMUNsCjZ0TEJ2d0tCZ0YwZk42RHh4NXhvOElRSk1lSnh2SkRrbllJN01UWGorMHdNVFdGWkc4ejBYaWQvR20wSHg0VXYKUnp6cFpuQmFraUtEbjNQalFrQmsxd0cxeWt1cGVBVGt3cTZONzR0ejJvempxbkNtQk1KZmtkU3RpYnQrdFZMYwpPR3l6dXVoYkdrYTl3TG85UVVheEY2SlBLUEFVSUd0cVJBMDNYTzVEMEVIRzNQbFhuZXp4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtEbUVUSlo3Vk9PSlIxdlJqU3NhbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlNell4TVZvWERUSTJNRFF4T1RJeQpNell4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1M29CYVBlNjZYK3c3a0s2WUV6aHNzcDA4d0JuZDdTVytQbTE3N0RRTjJzMnkzeU0KaUdsTGh0MnhDaktyUzcyUUdXenZhdm5PUktBOW9vMlQ5RURPNmZjNDYxcUdxRzRJZUx3SXY3SlJxMlg5YzFGVQpSbC9MMU9jVHJXQzI0RjFzUVIxa1kwem5SejZoMnB3Nk9wZ2dQbU10ZEVJSGI0cG9LR2RQRzQyeUhQeXhaSmRyClAvazlRTlNOK055ODZDUHNITzZaRVpFK2JndktrTk9JRUZUTnhYOWdYY003VXpBRDhmTlR3cXB1QzVDQTRUS3IKRUdadm90RFg5Y0NvREMvbERVc1lleXhyNHJ4cGVWajZybFZaaGVWc05xZDc2dktybDF5VEZBREZ5cGhmTi9RNwppWDVBNGlCWnU4Rjlqa25GK2FiRXlkcUpENFRaYVI0bmNmaDhid0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTUs0d3o4SHBBeHQ0OEFYME5BcUZVNjdHQXNwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQzRzTjhnOTZDZVh4UTZ5cWd5MEo5ZFE1QjVyMnd5U3hIT2tRamhXQmxIcDJaTlhidTFsNm91Cmp5aXkyQloxQSt5UDU1b1N6UWNydVpTaGNod1N6QVAxcmFvMDZKc3NPYzJ4RFNQYUNlaWNqWnRFQXgxSUtoSUkKTHpOWHNJZHNIRlhjRnlNSlU1clRWOG5HOGlyY0k1dWRZQkhNdnRTdExrajhVNHR1MTd2TzJTdmVid0R6SDA4MgpZOXFDWTJ0T29tdzdtOXBpRFBISEFSMDZ6YUNIdkMzMU0vL2lka0lDUlBadUZZbHVkOGNiMDBzd200c3pqV0xTCk1vWmdQaVNiejhlSVNhckhoUllSV3BocDVDS29uOHNyY2NPV1BKVnpvRVB2NVZoQ1R3Ni9vZXNoYWs1MlM0Yk0KUmt1ZDlWMUJWbkZoenJKVzdYZHpFc0Zrbm1NYTFBRDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRU1h0RUQvUkZpL2tGdUNmdVA5UGwwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSXpOakV4V2hjTk1qWXdOREU1TWpJegpOakV4V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Q1Q2T29jdk9TaW8KakVjbDcwR05lYUNzMGV0WExDc2U5ZTFQMGN2M2pRRWk4MXVMblZvM3d2dzNPK2ZGQ0tqbFM1SkRadllmTHByeQpLdWlwTy9PMlhSbG9jbllLV2dGdnF4cGNabms4QmRFbmJYUkNQU1M5TUVZc2lwNm9SZkpXejQvSFhzaDJSTHgwCnp0WTZERVN5N0g5VEc1Y1diYUUrZUtBNUM5S09xZ0V1Nmp3THJuUGxTbmJqaU5rRTBIa1B4SFNMSjJXbVNCOGcKM0ZHSks5MWFYZ3ArMFNQWU9ZSVZjNFZTWnVtZ1N0QXRtcHJGeVIvbWYrTmJuUUtvTzFKamZQWFhYTnFlSnpsNQoxZnVyTUROcGh4TVFPdWVRTlFleEltZzhuREpVQm01c2tsc2ErTUl6REs5SnZteTFyTFR1bVlRSDQ5S2lYN3p0ClRCbCt5RmtuN1FJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRDdU1NLwpCNlFNYmVQQUY5RFFLaFZPdXhnTEtUQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVZrTEZjUnpRQm5wMW0KZE1xUjlCaHQ1YU9uYjNuSVh6dlJVU01UUGFzTHhXb3YraFl2TVpHL2lqdE0yS2VQM3lualhMWU5kSFladnRpcwpjTXBaa0l2aVN4V1UxaTJweUk1NkFrRUlMd3ZPTnRRelM2WGJyK3pESnBlKzh0Ky9xOEVJWE05VmluMElvRHczCnhUVnBVbTZvbjdGNjFzUFhtMTV1eTJ4UHVZVDQ3MGdXS1JTY0hPVis1TmJQeEczcWcwQm1aRWY5aWlVdnlkRG8KSjFpejg2b1d6ekFFaUFYRHZlVmt2RWFXYUpneGU5T0lJcU8xa014NUJLTk1lSmlHRmxNbzcyY0hmWStERUtKVAppUEkzZXRuNDJQM1Qyek1TL0ZnNHRlSVRsRjN4QXBPNnAyWGpwSDRBdHY1cHR0K0FUSVErMXRIRThPT0FRUTV1CkxlOFR6WWRQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0NUNk9vY3ZPU2lvakVjbDcwR05lYUNzMGV0WExDc2U5ZTFQMGN2M2pRRWk4MXVMCm5WbzN3dnczTytmRkNLamxTNUpEWnZZZkxwcnlLdWlwTy9PMlhSbG9jbllLV2dGdnF4cGNabms4QmRFbmJYUkMKUFNTOU1FWXNpcDZvUmZKV3o0L0hYc2gyUkx4MHp0WTZERVN5N0g5VEc1Y1diYUUrZUtBNUM5S09xZ0V1Nmp3TApyblBsU25iamlOa0UwSGtQeEhTTEoyV21TQjhnM0ZHSks5MWFYZ3ArMFNQWU9ZSVZjNFZTWnVtZ1N0QXRtcHJGCnlSL21mK05iblFLb08xSmpmUFhYWE5xZUp6bDUxZnVyTUROcGh4TVFPdWVRTlFleEltZzhuREpVQm01c2tsc2EKK01JekRLOUp2bXkxckxUdW1ZUUg0OUtpWDd6dFRCbCt5RmtuN1FJREFRQUJBb0lCQUdQNUdXVW9mMDZiTkE5QQoyYUVDRjQxSUo0TlZrdGE5WE8rU1dTeU1sckg3L0dab3BGenIyd1dOMjJORTlVVExNL3E5RUdyYTltQjJhRGdoCk5DU29hcU5JSEFzcUZicTg4cEF4T0JCdFZlaWs2WUhPc3NSRGdGaEV1dG9wTU42cjk3VXBWdytlOThKTjEremkKay9OY0wwaFQremJveHRlbHhPNVlWellxaU9ZMHJnWUtWNjl1Ui9xZ0FBRWd2amtmUkVmVkl0d0t6SFZ1LzJwNgo0ZE5oY2VJTk10UGg0UE4raVZ0ZElwUkRENWt2bzN6a1g2dW1vZ0pXY1dtK3RwWmlLU3NnWEtMaXMwUG1jODdoCjJrVk1JbFBXaTlLUit0Z3RINkVGbk5LRGRlRFhsZXBRUXo2VXo3OE10aGdvclVrVXQxSG03eGdqYUhLOUJCN04KWnhvRmxnRUNnWUVBem9vcmlZUUhDekJxRms5WTdNa1pUNHRyWTliUjJrOXV5b2ppbW0zeGkrSFk0eXNkS2dzSQpkcGNDZTFqdkN5M0RQcFFaemFtRzNKT2lvdnFEZHcvRVlqNGJ0Wnltcm94UmNGM2pjaW9adUhpQ0hlT3RnUDdwCmI3ZWMwY25EMHZ0S2k3bG1md2txcmNZWFo2SW00R3lRTm5VWG1NZFpUVm9KOHd2NzJFZE9nRzBDZ1lFQTdpaFAKaDJaeXhiZ3VoVmErZ2s2RStHUy94UUp3K1JVamxqWXFxZ1FLSklLc0ZHQjZkS0lqNkcrbDNQdUxBWnhhc3drOAowYWVRbG5xK0pPNEZtT2E0U0lNMlBIdTdRaWxBYnQ4QTBDUm53Z29JVjM4aGc1MWtiaG5jZzF6OUtOMTBCZk5YCjNMNEU0MTV5NkZBS0FJTEp0NTZmUUs4WnBOdEJaWmhEL0JSWGxZRUNnWUF1OVJMNDdOOTlGOERHMmJ0cCtqNmEKNnlPN1N6ZmkzblJkNzhrMU94SFRyOEZUeEpXWTNYRkxKUUlYY1J6SCtkdU4rclh6SUR2ZEltT3praWtaaEtndApmZGxtN1Bxb2JKYUhhWkV3ZjRuaGV1UjZUeTAvU3JWZ0JPck9kNFRpRHVmZjVJTDlGdVJ4SmJ4a2YyVS9XTzlnCnNqWnZNY09INXBTa2dYRDh0eG1OOFFLQmdCbi9TSDh0VGNZTGp2aDdPWnliMmFRTHkydEVFdlQ5dTc2Lzl2Uk0KTUpjL3RHMGRBd0VNV2dNYmZPMmNmOVlUTFV0eDdMT3VLUGhrT2JGcVVpNFlzWEVvOFppMG9RSmQ0bXkzNXl6UgpiSW9mOGowcTRZdXVlTElVSEtBeVhHaERsRkM1K1pOZElzZDNIZkFDSExWbGtZTjd5MEtTV3FoR1R1TTZOZUdrCmp0TUJBb0dCQUx3UjBtSjhmaG9pYW1xWTlPcW1ob3RQTThXTkZEangvcUhtQkhWZnlkN3d0RVBqOWxXWTg4S0MKYmRTME9rUWV2NGJ5bnZkZCtXQktMZFpLNGhoa210VTB4TUZWMVJHQjFYdlF0bGIrQ3p0YzlRYklYOHo3TVFDeQpCSGF5eTI2elBuM0R4Uk91VTJ3MTk2NVV3Zi9PcU9XRDlXT1NyQ0ZWektpMTVEam9rQ3RJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5acd64e130f78224587e1077e103f4369c430e10509074fab76a87fae70c3d9a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
