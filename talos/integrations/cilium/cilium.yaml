# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWWNNdEdXMFl5Y3JUZCs5bExsaS8rakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1EZzFOakEyV2hjTk1qWXdNekF6TURnMQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BZb0MzZHBXTVZPVGlJOTdXT0thMnl2ZGExQU5lNkdoVlNkMnVESWdvMWVkS1lkMDQKUms4ajUvck8zMFFDUnRlQ3ZMNUV4TWpUVG1UaWFsSFhLRTZlYmRTZGxBUEdZc2JRcEV1dHJXRm1VcTVTejR1dQpBWkpZMmFlZkpXY05QUTlvVFNpKzdXSElsWVlUQUI0Z0prejZxWHhEZWIxYjFiUCtWRTZxYlBIb2srdlRrQkhkCnhBeXgyZVdqeXE1dWRiaUpFbDdiUktwUlVRd05vMktnQWtmT0loeWVDU1FtQ054VWdkeWhycGdqSXFhV2lnV2IKZWNDZmFFQTZ1NFUxK1ZEUHQ0K1FaNG1Ob3BzU3FjMjBoVloxN0JMc1hraW5Mb1NsUkNpWFk0SzBqNjh4Y2NuWAo3RXdPbEw5S0VqeVBUandnVWhtTzVaUlBCZ1p4clZTNTNJb0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVrRWQ5K0ZJOG9KazVpenMzYlBXVTVlelc4YzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJTXF3YzlXU3FSUW95ZVh1bjVSVTg3ZmdEVnJ0SnR6RHhuUU5pY3g1TG1zWGpDc0hVQmJCcVBlCmpSWVhpVGFrbGg4QWVTbncrbG03SE5saUx2VXBZcjhKays5ZkNvaUVKVUZ0UHpKMDhlUUZFU3U1T0piUkF0Y0sKOVZtN0NiWEhORXFaQ3pBSGhsVzQzWXp0ZVJQOGtxVDVXT2lBUXBGc3d3b0d2V2ZaSEtaRHROSUxJZHZUR1hROApWUmNwdk1OQ29XK3d6bVFaUU0veDhIc01nN0F6TmdER0xjUGpZVVV5UU5Rdk1MM3M3T3F4MlUwcXlNVHcxQ1BpCnEzZEc1NUZHYUxpWjlrU1VVdGwrMVo4NzBrUWZnbU4wQzZJUlJhc05HT1ZiVGpPK3dLaXdpTC9JbHc4ZmxIWkYKK1prRGwyUENnZnp1c01FMjZmUmZ1bmFCa2R3SnJFND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcVdLQXQzYVZqRlRrNGlQZTFqaW10c3IzV3RRRFh1aG9WVW5kcmd5SUtOWG5TbUhkCk9FWlBJK2Y2enQ5RUFrYlhncnkrUk1USTAwNWs0bXBSMXloT25tM1VuWlFEeG1MRzBLUkxyYTFoWmxLdVVzK0wKcmdHU1dObW5ueVZuRFQwUGFFMG92dTFoeUpXR0V3QWVJQ1pNK3FsOFEzbTlXOVd6L2xST3Fteng2SlByMDVBUgozY1FNc2RubG84cXViblc0aVJKZTIwU3FVVkVNRGFOaW9BSkh6aUljbmdra0pnamNWSUhjb2E2WUl5S21sb29GCm0zbkFuMmhBT3J1Rk5mbFF6N2VQa0dlSmphS2JFcW5OdElWV2Rld1M3RjVJcHk2RXBVUW9sMk9DdEkrdk1YSEoKMSt4TURwUy9TaEk4ajA0OElGSVpqdVdVVHdZR2NhMVV1ZHlLQ3dJREFRQUJBb0lCQUFvZVcwZ2FhbWFlcjZtZQpzUElsSWpock9ZbVFmcjhOclNYaktyMzUrNnhNMHV0TG0xYUFSTHdGWUtNNURTd0JwV0FtL0VySllxSFUzZ3YwCmcvMFJhRmpvZ0xvRkhKQ2VWL2dneUhDUW1lL3Q0b0lKNmZNMEh0VDE4NkI3TUlQRzhRT3ZFRThQaVRiZFQ4d1UKeHJmdThjeExrYVBLUXZpWWRJOHQ1Q0VrTHZOUXdmV0E5ZUJBNU5UaDc5VUJPSTlNM3JZWW8rU0Z1blRqZWFLVApVNmdUWHBncHYvUUt3WGN2ZXpaZ0pERUR0S0d1Qkl2ZlhxV1V6K3F0VzZ2eWdnd2hHUmMvZ0g0eWpvOFBnZjJUCmV3bGRCVWd3eUpUOU0rUzFPanV1U1VvSE0yQ3pLOHJ4L1ZoeFJrMWRocjNhNUk3V2YxaW9acm9oNldYS2NGakoKRFM5SGx3a0NnWUVBendJcytERWJpQkx6NCs5Mjc4RlI2dE5xbXNQbWlHTDhUQVpIV2xya2lWN25OTXc5enhSRApwUjVjalNWWHRsQnh1d1pNTEt1RXNVa2RNQU1paXJrMXFUSnFTZUlsRGJrNm9rM0szQytUaXV2TGljUmtSclFSCnBpckU0K1hFbDRuRmwxTHlMUCtqUTE2TEJDM3Y1WWFGZU1qbU5mT1NPNUpoSnl5L0hOUjhoL1VDZ1lFQTBYamEKM251aGxNbFo5Z0RsRVo4ZVQyRVZiTWtmQ0hSQTFtTis3MlZKUDk3MVVzOTFrczBNcVJCa2tnckR0cVFHb1l5MwpUcVJGaFpoQTF2czdOZEhDMncycTdVc3crYW9IaE5QeDdvV0hmckZzQXBseEJqU3d5TFcwd2tsYm16UEcvTnNNCkRPVHVLTUNIQXA4QW95cFRUN2oveG1oNTVFd3ZTdk4rbWJKemlmOENnWUVBeXdtL1FkQW95TmFPRU1zWFJTSEEKVHlyK0xMNW9wdTB2dVFHUGlyZ0w0QkVOaFdPdVhDWHNFMUFzUnVTUm0yaGJwSzBRbWQvQlRvSC85cytjV2FRLwpWYXoxUTNKa0ZZblFVTkVzWDdycVpCL1NpMVh0Wk12Slk4b2ZROGhoZ3FESEJSMStHMVRCdFpwTmo5UGVzS200CjBEZDhWUDZLTjVQalpxRWs4Z29YK3VFQ2dZRUFubjBrak1WYUFpcytwOFVSakgycC8wRmpab1hkdHhYT29PZHkKK1VyWFd6NGt1OTFBQml5aThaLzNtQkFRK0xXdVZya1RVS3MxOXRpMTVuTDczOEt2L2ZHZmJCOUNGUVN5MzZ0RgpGOFZzT1UyZ2ZXNy9kMFNTcGFubDlFSnd6ME1qd2RreWl1Y0QwMDJvV1RGWTJCdUVJWVBGOHFiRjR4aEppQm9uCnBiN0JjSjBDZ1lFQXRSKzY5TDRJTlk0bVZZV21xMzIrVVBGeE1hbVVQVHNRRXV5dXJWRjFhRTJ4QmpwMzBIVXUKaFZhUTlFS0dFSUxna0dVVFdWMk9qZm50Rnh2OS94M2wrbDJyREZhMGZyRWJwcU9ycUdqOTBiWklsdEFMekZqWQo0bk4xckRXT3lOUXBic2xTZmN0R2kzME5oUUxSVUtQY2E5eHdNMnN1eWYxVlJuQjZPUXMxekVjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWWNNdEdXMFl5Y3JUZCs5bExsaS8rakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1EZzFOakEyV2hjTk1qWXdNekF6TURnMQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BZb0MzZHBXTVZPVGlJOTdXT0thMnl2ZGExQU5lNkdoVlNkMnVESWdvMWVkS1lkMDQKUms4ajUvck8zMFFDUnRlQ3ZMNUV4TWpUVG1UaWFsSFhLRTZlYmRTZGxBUEdZc2JRcEV1dHJXRm1VcTVTejR1dQpBWkpZMmFlZkpXY05QUTlvVFNpKzdXSElsWVlUQUI0Z0prejZxWHhEZWIxYjFiUCtWRTZxYlBIb2srdlRrQkhkCnhBeXgyZVdqeXE1dWRiaUpFbDdiUktwUlVRd05vMktnQWtmT0loeWVDU1FtQ054VWdkeWhycGdqSXFhV2lnV2IKZWNDZmFFQTZ1NFUxK1ZEUHQ0K1FaNG1Ob3BzU3FjMjBoVloxN0JMc1hraW5Mb1NsUkNpWFk0SzBqNjh4Y2NuWAo3RXdPbEw5S0VqeVBUandnVWhtTzVaUlBCZ1p4clZTNTNJb0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVrRWQ5K0ZJOG9KazVpenMzYlBXVTVlelc4YzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJTXF3YzlXU3FSUW95ZVh1bjVSVTg3ZmdEVnJ0SnR6RHhuUU5pY3g1TG1zWGpDc0hVQmJCcVBlCmpSWVhpVGFrbGg4QWVTbncrbG03SE5saUx2VXBZcjhKays5ZkNvaUVKVUZ0UHpKMDhlUUZFU3U1T0piUkF0Y0sKOVZtN0NiWEhORXFaQ3pBSGhsVzQzWXp0ZVJQOGtxVDVXT2lBUXBGc3d3b0d2V2ZaSEtaRHROSUxJZHZUR1hROApWUmNwdk1OQ29XK3d6bVFaUU0veDhIc01nN0F6TmdER0xjUGpZVVV5UU5Rdk1MM3M3T3F4MlUwcXlNVHcxQ1BpCnEzZEc1NUZHYUxpWjlrU1VVdGwrMVo4NzBrUWZnbU4wQzZJUlJhc05HT1ZiVGpPK3dLaXdpTC9JbHc4ZmxIWkYKK1prRGwyUENnZnp1c01FMjZmUmZ1bmFCa2R3SnJFND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcVdLQXQzYVZqRlRrNGlQZTFqaW10c3IzV3RRRFh1aG9WVW5kcmd5SUtOWG5TbUhkCk9FWlBJK2Y2enQ5RUFrYlhncnkrUk1USTAwNWs0bXBSMXloT25tM1VuWlFEeG1MRzBLUkxyYTFoWmxLdVVzK0wKcmdHU1dObW5ueVZuRFQwUGFFMG92dTFoeUpXR0V3QWVJQ1pNK3FsOFEzbTlXOVd6L2xST3Fteng2SlByMDVBUgozY1FNc2RubG84cXViblc0aVJKZTIwU3FVVkVNRGFOaW9BSkh6aUljbmdra0pnamNWSUhjb2E2WUl5S21sb29GCm0zbkFuMmhBT3J1Rk5mbFF6N2VQa0dlSmphS2JFcW5OdElWV2Rld1M3RjVJcHk2RXBVUW9sMk9DdEkrdk1YSEoKMSt4TURwUy9TaEk4ajA0OElGSVpqdVdVVHdZR2NhMVV1ZHlLQ3dJREFRQUJBb0lCQUFvZVcwZ2FhbWFlcjZtZQpzUElsSWpock9ZbVFmcjhOclNYaktyMzUrNnhNMHV0TG0xYUFSTHdGWUtNNURTd0JwV0FtL0VySllxSFUzZ3YwCmcvMFJhRmpvZ0xvRkhKQ2VWL2dneUhDUW1lL3Q0b0lKNmZNMEh0VDE4NkI3TUlQRzhRT3ZFRThQaVRiZFQ4d1UKeHJmdThjeExrYVBLUXZpWWRJOHQ1Q0VrTHZOUXdmV0E5ZUJBNU5UaDc5VUJPSTlNM3JZWW8rU0Z1blRqZWFLVApVNmdUWHBncHYvUUt3WGN2ZXpaZ0pERUR0S0d1Qkl2ZlhxV1V6K3F0VzZ2eWdnd2hHUmMvZ0g0eWpvOFBnZjJUCmV3bGRCVWd3eUpUOU0rUzFPanV1U1VvSE0yQ3pLOHJ4L1ZoeFJrMWRocjNhNUk3V2YxaW9acm9oNldYS2NGakoKRFM5SGx3a0NnWUVBendJcytERWJpQkx6NCs5Mjc4RlI2dE5xbXNQbWlHTDhUQVpIV2xya2lWN25OTXc5enhSRApwUjVjalNWWHRsQnh1d1pNTEt1RXNVa2RNQU1paXJrMXFUSnFTZUlsRGJrNm9rM0szQytUaXV2TGljUmtSclFSCnBpckU0K1hFbDRuRmwxTHlMUCtqUTE2TEJDM3Y1WWFGZU1qbU5mT1NPNUpoSnl5L0hOUjhoL1VDZ1lFQTBYamEKM251aGxNbFo5Z0RsRVo4ZVQyRVZiTWtmQ0hSQTFtTis3MlZKUDk3MVVzOTFrczBNcVJCa2tnckR0cVFHb1l5MwpUcVJGaFpoQTF2czdOZEhDMncycTdVc3crYW9IaE5QeDdvV0hmckZzQXBseEJqU3d5TFcwd2tsYm16UEcvTnNNCkRPVHVLTUNIQXA4QW95cFRUN2oveG1oNTVFd3ZTdk4rbWJKemlmOENnWUVBeXdtL1FkQW95TmFPRU1zWFJTSEEKVHlyK0xMNW9wdTB2dVFHUGlyZ0w0QkVOaFdPdVhDWHNFMUFzUnVTUm0yaGJwSzBRbWQvQlRvSC85cytjV2FRLwpWYXoxUTNKa0ZZblFVTkVzWDdycVpCL1NpMVh0Wk12Slk4b2ZROGhoZ3FESEJSMStHMVRCdFpwTmo5UGVzS200CjBEZDhWUDZLTjVQalpxRWs4Z29YK3VFQ2dZRUFubjBrak1WYUFpcytwOFVSakgycC8wRmpab1hkdHhYT29PZHkKK1VyWFd6NGt1OTFBQml5aThaLzNtQkFRK0xXdVZya1RVS3MxOXRpMTVuTDczOEt2L2ZHZmJCOUNGUVN5MzZ0RgpGOFZzT1UyZ2ZXNy9kMFNTcGFubDlFSnd6ME1qd2RreWl1Y0QwMDJvV1RGWTJCdUVJWVBGOHFiRjR4aEppQm9uCnBiN0JjSjBDZ1lFQXRSKzY5TDRJTlk0bVZZV21xMzIrVVBGeE1hbVVQVHNRRXV5dXJWRjFhRTJ4QmpwMzBIVXUKaFZhUTlFS0dFSUxna0dVVFdWMk9qZm50Rnh2OS94M2wrbDJyREZhMGZyRWJwcU9ycUdqOTBiWklsdEFMekZqWQo0bk4xckRXT3lOUXBic2xTZmN0R2kzME5oUUxSVUtQY2E5eHdNMnN1eWYxVlJuQjZPUXMxekVjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWWNNdEdXMFl5Y3JUZCs5bExsaS8rakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1EZzFOakEyV2hjTk1qWXdNekF6TURnMQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BZb0MzZHBXTVZPVGlJOTdXT0thMnl2ZGExQU5lNkdoVlNkMnVESWdvMWVkS1lkMDQKUms4ajUvck8zMFFDUnRlQ3ZMNUV4TWpUVG1UaWFsSFhLRTZlYmRTZGxBUEdZc2JRcEV1dHJXRm1VcTVTejR1dQpBWkpZMmFlZkpXY05QUTlvVFNpKzdXSElsWVlUQUI0Z0prejZxWHhEZWIxYjFiUCtWRTZxYlBIb2srdlRrQkhkCnhBeXgyZVdqeXE1dWRiaUpFbDdiUktwUlVRd05vMktnQWtmT0loeWVDU1FtQ054VWdkeWhycGdqSXFhV2lnV2IKZWNDZmFFQTZ1NFUxK1ZEUHQ0K1FaNG1Ob3BzU3FjMjBoVloxN0JMc1hraW5Mb1NsUkNpWFk0SzBqNjh4Y2NuWAo3RXdPbEw5S0VqeVBUandnVWhtTzVaUlBCZ1p4clZTNTNJb0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVrRWQ5K0ZJOG9KazVpenMzYlBXVTVlelc4YzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJTXF3YzlXU3FSUW95ZVh1bjVSVTg3ZmdEVnJ0SnR6RHhuUU5pY3g1TG1zWGpDc0hVQmJCcVBlCmpSWVhpVGFrbGg4QWVTbncrbG03SE5saUx2VXBZcjhKays5ZkNvaUVKVUZ0UHpKMDhlUUZFU3U1T0piUkF0Y0sKOVZtN0NiWEhORXFaQ3pBSGhsVzQzWXp0ZVJQOGtxVDVXT2lBUXBGc3d3b0d2V2ZaSEtaRHROSUxJZHZUR1hROApWUmNwdk1OQ29XK3d6bVFaUU0veDhIc01nN0F6TmdER0xjUGpZVVV5UU5Rdk1MM3M3T3F4MlUwcXlNVHcxQ1BpCnEzZEc1NUZHYUxpWjlrU1VVdGwrMVo4NzBrUWZnbU4wQzZJUlJhc05HT1ZiVGpPK3dLaXdpTC9JbHc4ZmxIWkYKK1prRGwyUENnZnp1c01FMjZmUmZ1bmFCa2R3SnJFND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRCtVdkQwbCtEVFYwVGhTalVEQTcwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1EZzFOakEyV2hjTk1qWXdNekF6TURnMQpOakEyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNkxyUmw2QzVlRlZiSHVkNHFOVE1QVFRQYU1xSUQKaHZHcVZudHVtS3hQOGRLOGtVeW1xSGlRb29sSUNSOEcyM08vNy9tcEhRa1lyWDhyRjUrMlJYZ0VTMzlTNDJzUgpRRmV6ZzdkUDM2ejdvQ0xZeEtYdVhyMXBoODNneUdkZGhrRUsvTDlReEJnWXhuSHJlbDZ0YlRaWkhJOTBSRmR5Cm5zVDg1a3pSVkVZYkpqTG9jaW9ibncvV1BmT2tJcXRheWdoYi83bGYrY29GeEZyRVlqUVJkNjBBdG5wdWxvMmIKM3dGc1JEYUh4RUVPWk1JVVJ6VGYrOVlSNUZQNitaUEJZYjV2RTBDT2l6U3R4M0hvU0F1TmUvL3ZoNVBEVWN2aApQU2g0YzZuaUVwa21hemxKWGtBZ0RNZFNTb2JERUd3M3h2MVJZMy9xTVZjZ2hIcnhRajg4UCtBZEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKQkhmZmhTUEtDWk9ZczdOMnoxbE9YcwoxdkhPTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFXWWx4OHpNRy9LYTFJT2JwcUdFZlp5c2JLbVZZa21qeUR1Y0d4K0hUeGN3T2c4MnUKQTU5R2NxMGVoUW1zYnRoNjZvWFlBT2hmK0NkSzVRTEdRbjkrdE9sOURtanBRMmZOU0pMUjJiRExxT1VNTjJFcAp2RXd6WUxkRUgrbk15eGlOWG5rVVR2R2hBeXZraUV6UWVoSzhvTStZUDlvMjVwclhFenh4QndvR0VpdHdjbzVQCkRPMDk0NG9MZEs0MEVHSHZ3b3F5QjBQUTEwR1dyYmZPRHBHSC9aRm1oV2tEMW94cVpjVmpvQnU2S1o3Vi9oMWcKdWh5WFpMQS9Ib1RIMGVOR1hJdXQ3Z3pEd21CMHBuZHlKWnMwWFQ2VEVoWjZBNEpRU1Z6UXE0Q1pTTjNvLzdHZgphVkZsVkFpdlhHekc4VlVqa0w1UHBJTms3WStPNzFwNnYrZDJwUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWk2MFplZ3VYaFZXeDduZUtqVXpEMDB6MmpLaUE0YnhxbFo3YnBpc1QvSFN2SkZNCnBxaDRrS0tKU0FrZkJ0dHp2Ky81cVIwSkdLMS9LeGVmdGtWNEJFdC9VdU5yRVVCWHM0TzNUOStzKzZBaTJNU2wKN2w2OWFZZk40TWhuWFlaQkN2eS9VTVFZR01aeDYzcGVyVzAyV1J5UGRFUlhjcDdFL09aTTBWUkdHeVl5NkhJcQpHNThQMWozenBDS3JXc29JVy8rNVgvbktCY1JheEdJMEVYZXRBTFo2YnBhTm05OEJiRVEyaDhSQkRtVENGRWMwCjMvdldFZVJUK3ZtVHdXRytieE5Bam9zMHJjZHg2RWdMalh2Lzc0ZVR3MUhMNFQwb2VIT3A0aEtaSm1zNVNWNUEKSUF6SFVrcUd3eEJzTjhiOVVXTi82akZYSUlSNjhVSS9QRC9nSFFJREFRQUJBb0lCQUJHMUNYRTd3TlV2NEY0RQpmbTJ6TzVUeitiK0IyMGpNbDhWa2pqNjVoSUhoOVBIOE83Y0tCTlYwcit2SytrbHpxN0dRaUVVZVB0UTdCQUk4CkwvTnM3Zm95bC94eEpxaXdYdWJ5MndkY3RaNEUzK3VQNEZ3b1pJbFo0aW5EeFpqdWdOY2pyS3BvekFYbk1jUjgKa2U2YW1YV21NcnFUR1dJTVdaM1g1V3h2UUcrcWE1REljZm1VR3hrZXNEdUFMR2dReDViaGp0cm9WMy9XTlI4WQpPalJpRFYyL3NVVmpvaDJQMDNCaUJFODFsc2htb08xbk55cmZEVnRRZmhUVkgwY1lYZkR1WTJNNkZSUzExc1ZlCldITHkybVcxWk9rbS8weHdyeUlCT3JOUk1oYVlYY1dGOUlBMkxKNzQ1cWNIZnR1YmFqRHA0aG5tODBHRUUwZ3MKSHNEWmRZRUNnWUVBd2RnK3hBQzZiVkkzc2VvUUljLzYvZytyRGZGQTZVd1J3QitQVHNua3FGWjVRdzdVb2tzSgpXc2NTc2lYeHNhbW16YlIzZW9RV1dubks3em9SaXZVZ3VJbGVvY1FleXFyYUhBM1N6ZTRYUCsrcUxKK0d4TGN2CklNa2Q4TER2cFZzWjJNUUtQYmJreWJ6ZlVKVS9CMUhLamI0RWtXRHdnT2xoNnZKTUt0QlhFdjBDZ1lFQTllR0EKZFphT2hVM3hGeUN4cHlVbUMxYkJ4RmdLNFo4aTVWZEVIamlTazZUUXREcU02bngvQjlwOFhNZWFOY2FFVVViMQpDZWxNSEpTSU90alh3L1BuSFpWYkVpTEtYNkQ1Ym9kbisyY25hbXlNbHVJL0ZBQnpLb2JJUGxMeFhMTXdxendiCngvLzhJZ0lkTzF0Y1F5SWFsenpKNGNXTFlCMXptdk93NndYQlc2RUNnWUJ6L0o1aHpVVy9rQWgvVGx4a3Z2dWgKOVdJV3I1cDFmZXpKRnBrN1BaYXlHenZub2dJZE1lVGhDbWpuYThqWTAzaFpjWGhrT0pEZmhpeWxSQXVuSjlGeQpXYy9qMzJQRlJNSEpNNFJGY0FjOVhIeG93dk55MVdFL3J0ZFpZNldoUFllVHFvbXVMN2RwOXJkd2tqenFka2hLCjA3NEw5d014UDNRMWp0R0FkTFVGU1FLQmdGalhvaExhMDZSWEJVWFdDbHJha1dTSGRIdjlVL0V5RHVuUEhrM04KSXlrMTVETTY5Sy9GVENFS1VPVTFPZ00wTjVzbWlHT01hSFByTjA0TUMrcEJ0c0I1dHU1V284anA0VGFPdG9PZwpRaDJ5R3hwcHBXRVV5SWdWSzBWWnN0eEw0c244YmcxVjhVUllmemR6UzJMMmI2VTEwYnhDSkpvV0NpOXkzZm9OCm1sQUJBb0dCQUl0VDF1ZDl6Tk50U0dMRGV3MWhweXUyRjRKNGxyNElPYUNHN0wyY1lmY0lNaEZpQllPT2huT28KcGlJZEZyZ0ozTjQ1bGcyR0ppZ1M0VjkrUGtXdTdIQVhyYmdMME5aSXJJQ0EvMnZEeFNkK0xQYzc3d2pmaEsyMQozYURFdnJiTVdxZS9iWXA1c25JVTdtSXRnSU9yUjU2S05lMUJMdTJ4NzNWNmtBL0F3UlMyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWWNNdEdXMFl5Y3JUZCs5bExsaS8rakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1EZzFOakEyV2hjTk1qWXdNekF6TURnMQpOakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BZb0MzZHBXTVZPVGlJOTdXT0thMnl2ZGExQU5lNkdoVlNkMnVESWdvMWVkS1lkMDQKUms4ajUvck8zMFFDUnRlQ3ZMNUV4TWpUVG1UaWFsSFhLRTZlYmRTZGxBUEdZc2JRcEV1dHJXRm1VcTVTejR1dQpBWkpZMmFlZkpXY05QUTlvVFNpKzdXSElsWVlUQUI0Z0prejZxWHhEZWIxYjFiUCtWRTZxYlBIb2srdlRrQkhkCnhBeXgyZVdqeXE1dWRiaUpFbDdiUktwUlVRd05vMktnQWtmT0loeWVDU1FtQ054VWdkeWhycGdqSXFhV2lnV2IKZWNDZmFFQTZ1NFUxK1ZEUHQ0K1FaNG1Ob3BzU3FjMjBoVloxN0JMc1hraW5Mb1NsUkNpWFk0SzBqNjh4Y2NuWAo3RXdPbEw5S0VqeVBUandnVWhtTzVaUlBCZ1p4clZTNTNJb0xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVrRWQ5K0ZJOG9KazVpenMzYlBXVTVlelc4YzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJTXF3YzlXU3FSUW95ZVh1bjVSVTg3ZmdEVnJ0SnR6RHhuUU5pY3g1TG1zWGpDc0hVQmJCcVBlCmpSWVhpVGFrbGg4QWVTbncrbG03SE5saUx2VXBZcjhKays5ZkNvaUVKVUZ0UHpKMDhlUUZFU3U1T0piUkF0Y0sKOVZtN0NiWEhORXFaQ3pBSGhsVzQzWXp0ZVJQOGtxVDVXT2lBUXBGc3d3b0d2V2ZaSEtaRHROSUxJZHZUR1hROApWUmNwdk1OQ29XK3d6bVFaUU0veDhIc01nN0F6TmdER0xjUGpZVVV5UU5Rdk1MM3M3T3F4MlUwcXlNVHcxQ1BpCnEzZEc1NUZHYUxpWjlrU1VVdGwrMVo4NzBrUWZnbU4wQzZJUlJhc05HT1ZiVGpPK3dLaXdpTC9JbHc4ZmxIWkYKK1prRGwyUENnZnp1c01FMjZmUmZ1bmFCa2R3SnJFND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQVAveDhsdFZ6OWpnUlpIcC9KZUgrNzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTROVFl3TmxvWERUSTJNRE13TXpBNApOVFl3Tmxvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWVSVFMvRnBiS00KUnpTL3p2RzE4djhzdTRqQW9uRGM2L0U2eUJJRVRBQUlES2ZndEQ5QVJ4WDBhWVN0aVl4SHN3aWcxbjVWck00dwprKzVUR3dKNThTaURHVEJ2U3RBdkhTU0ptU3NlMGNHOW82NFRjakJ6MFBJMDFib1JWTGNzbGptcVZHMDZtbUJUCmRZMkZQeHpzTjlEeG9UdDZPY2tTVmd6M1hUVXZwSjdhNERZSERCbVVlYmFJOGVJOVlhNlI4UTA5VVVKdGhDMjUKanVjMkxaSytmTkhFVkc4bVJBUHg1QnhmVlQ2dXM4TlIrbmFST3VhbktTNmFRMWRCSnZpMDlrcEtwVGtQTnprYQpwNDJoaEJ5VmQ4MURpZjk5TWpnL29XdzhocW9XeUJkRDVXWUcxVWt5UEozNnhBY3JjdHMxZFNmRGtNSGNQMk9mCi9UUVFHUjQvQmlVQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVa0VkOQorRkk4b0prNWl6czNiUFdVNWV6VzhjNHdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFuaHErN080UUpuS3UKU24zU3FQdGRpcTdtYU5GdUo0d2pPZG9oQzJFYnVYUGlqenhpbmErb3JhQmQ3TWhEaG80ZDdrZEgxVEtpckJwRgo0Ny9aNDdvd1JCMUpnTFdFOHEwaG9iVnhZWkZsV29Ha2YwLzJPYzZrY2NIeTBzam56dGhDZG0xRVROM0NUOHRwClBlMWIzRUFSRmxEQ0o5UGMzVkw0Z01xVmprdkdPOUJJeVFhVFZJNVBaQkZHc0J5WE9RZ2RQSGEvRHN1ZTlTMEIKYnh4NTdMMG4xV3NKK1dYTzFLclBZd3ZScUNZNmFKRGQ2U2lzcmQxdzRhNC92amdLYlJ6eWcyQ0x0WHpwM1RITgpUTzlnSE92Q1NWdkxtZkg4empKQW9RNXZGYXdueWNoOCs2eFBscG9UTFJJaE1TK003UnFIQ2tyQ2dEOURzUUN1CkNKNlNnVE5rYXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeDVGTkw4V2xzb3hITkwvTzhiWHkveXk3aU1DaWNOenI4VHJJRWdSTUFBZ01wK0MwClAwQkhGZlJwaEsySmpFZXpDS0RXZmxXc3pqQ1Q3bE1iQW5ueEtJTVpNRzlLMEM4ZEpJbVpLeDdSd2IyanJoTnkKTUhQUThqVFZ1aEZVdHl5V09hcFViVHFhWUZOMWpZVS9IT3czMFBHaE8zbzV5UkpXRFBkZE5TK2tudHJnTmdjTQpHWlI1dG9qeDRqMWhycEh4RFQxUlFtMkVMYm1PNXpZdGtyNTgwY1JVYnlaRUEvSGtIRjlWUHE2encxSDZkcEU2CjVxY3BMcHBEVjBFbStMVDJTa3FsT1E4M09ScW5qYUdFSEpWM3pVT0ovMzB5T0QraGJEeUdxaGJJRjBQbFpnYlYKU1RJOG5mckVCeXR5MnpWMUo4T1F3ZHcvWTUvOU5CQVpIajhHSlFJREFRQUJBb0lCQVFDekFwRDhBd3hJaGkveApEd1J3S0VkWndTUk8zSXhaTkxHblpwVEVKSHFQcEtqRmhYZnBMSjBYQW5BTUJTWFdZUklrOFRDMWplQTk2N0VtCkhBR2tUUUdXMTFHbThvMW5CSHZkcEZkeUtHajZva0xLQ01OcTF0aGNDaXlVaEtzNnk1SE5GQTQ3RkZBWmk0TnMKZUZOT2ZFenM3WEUweXNRK3FtWHBwNUZCL2dScVFFOFZEMmpxcyt6UWJxZDN2WCsyNWF4MDlVdzlyQVdtWWU5ZgpsZy9zUVkySlBmQTlPeXA4Rno2dmtPTFViU1FkNCtrNUJtMXpJMUsxaFdscFk5RDFCQUY2WGdOUGs2WVpldXE1CmhqbDJ6czlobElMR0ZDTTdsM1RXMEhZUDZpS0ZiNmJqVDJHaU9BVys2dDc0UldjMmRTMHdIclJ3NzdBbjd6TkoKbldxY2FrTFpBb0dCQU10OWFtQVdway9TdzFIU1RLRGF1VFZNdW5kamFMcmRvbTh1eWt4SlZlelBRN3lEOVpUSwpLb1h0NFVCeVUvSnlEVjNnTlZHWmF4REZDOFlKU0tYQjVjaFZsY0NzUDF4ZHo4d1E5SGxGSWhHRkxpR2hJL0NZCmZ4b0hnbE02M1plMHdjb0s0LytFOE9CSk1Ic3NaOWNzOFNwRFp5azZHU0JMdVk2NzM3WDlkVnd6QW9HQkFQc1EKeHRYQmdCN1lMbzcwZVpta09iVmJQd1pHNTdlQ1BlUW1MRWowaVQzZ0RMS1hTeW1xK21LVnlpcU1qR1d5ZDIrUQpSY2M5a2xSUUg4bDFHeXJTQktMNTBrTkc1NlJoMHhMdUhTRktWQ0dqemU5K3FEcVl1cXBjZE5FWDNaMWxQZ1haCkVQNW1BSUpzTjFpZEpxeEJjR3puNmpnOUxvT2xsd25oRjdIVUQ3eEhBb0dCQUwxdGNxa2diSkhDVWJESlpDd1oKY0cvOWpWZTJZcmdSdWpSbUNrd1p1TE5KL25Sdkl4M3ZWTVo0TzBnVEpiSjhHWlZhTWtoVDJTY3pSMUtETWUyYwpJcHZya0F4Y1RGOWZ0U0R5WjZLOGlJcG13QnJ1TnRheUh4L0wvYllkQmt0REtXTTc0Q0x0VG81N2szWVdVRlF1CnNoSDF6UUxENHIvOXZpN3hGY0FFd2t1aEFvR0JBSVdKbE5pWkJUWmlzZERqZzlJT29Zc3VyMFQ5YmI0VGppdk4KaWZ4NzVJdCtvZ0pUcW16TlBrUTFlOFJKNFZzdUk0eTVaZ1BsWWZGcWRKM0lwZHlPdkZ5YkdCVWtuNHkxWTNsTQpJVDVWdEkzMy9FOElSUjUxb2NOL1RicnhRTFM0NXRaaGNFSi9xb0cwWVhQR2tvMUllUzNUNUtacEZGWjlPdXJNClNMZ1RIUk45QW9HQWMzNzVHZTFYTnFKcFIrTythUWJCdXF2M2JCbk9oYTUxRGxlUjBlbTdEaklpVW9TMWVYcXkKOVlyMWdKbjhuNFIwdlFpSkV4dTg1MENpbFBOMUZOSURFcDFNRGZ6MEhyRHQ0YjRhMVluR3R4MFFnTTFOcTh4YQpqeXJUZE1qbll0bHhtZUg1RmlKakx4bEE5dEJpZm5rUmlLM2VsZHdGUEhNc3pnTS81Q1dJK0kwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f70667d256c575d45c92430b063156ed28195442834e6d774b8727d727090fc1
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
