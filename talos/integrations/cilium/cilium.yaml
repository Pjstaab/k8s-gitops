# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nmetrics-listen-address: \":9966\"\ndial-timeout:
    \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file:
    /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files:
    /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUjBFc0NEMG5TdGlPcS8yVEZ6S3hJakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURBNU1EZzBOVEkyV2hjTk1qWXhNREE0TURnMApOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BXSG0wTXAzVEM3OG9FbW1oS2xHVkcwU29JYmV5QjNnK1Y3aWVUbHUyYWNsNnQzc1QKSWJkMVNlUlllTVBoN3ltUDJTKzd4amphY2hKeDE4MjBwanVkU3E2NXlPZXZZa2lPS0dTU3VBTzVzUldFTG1zbgpXRVJEMFRnME1pWUlORk5SOVd1czc3bVJ1bEZEZk41eG9kTEE4Z3NNc2hLUGJ5azJMUVJJVkJtYmNRVUIvb1h2CmJ5blJqZTAxSXBvVXpNNWMwa2VhWHgxb2UySG1KUllUcTNlaUxUMHV2TlI1YkdVYk9QaHo4TmZVdEFiQ2F4RjQKOTFKanJWN3NhcG5XU3RNOUJIeWY2ZW5YdGgxdlJTUjR1UXcrQnNJbEVpRFVGL24rN2tTZGVCc3M4SmVMc0gwUQpMQ21ieDJNNVVuazhpZnAvUXN2UnV1VkZPRG1xalZrOUkwN3hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4Skp6YWlmcStyNUJJZVo5VG1vTFErUVJvQWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDL2szT0NheEgycExOd3pndGxGMDcwaFdxNjJLNWsyR1dNbmNSUnJqQVZXdzE1dXlJZW5hM0hSCkxXWEJ2bnNoUnQzTFE2VXNKVzNjWElScmhBRms0bEhsbUFQNDBtVDlKTGtGWE1JdWtBYXZHWi9kd05wTG9oY1kKVDNHMXpwVHAvUFRwRTJWaHdWS1FMeVlkZkFSNHlrcHFHQmk3all3VWl0WENwc3FUbHhqOC84UlQrMVVRRUg3bgp1dy9sZEpoMVlUMk11bCtiNEE4aGw5U044N3hZWW1pK2h1QVE0ejBuR2htdEVpNUcrRmpDcU42QjdNTDlROXUwCksyNDJLbTcxZWoxbmRlZU5rMTNSK1QyMjhnRUtqUzV3SVFxMlJCamdJY2IzQWpCUWd1UHc2RWVZZExhTjVabHUKaTJmVjhiVVQ0WDJ0NXJDU0toYTNKMThZS29LODZNWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVZoNXRES2Qwd3UvS0JKcG9TcFJsUnRFcUNHM3NnZDRQbGU0bms1YnRtbkplcmQ3CkV5RzNkVW5rV0hqRDRlOHBqOWt2dThZNDJuSVNjZGZOdEtZN25VcXV1Y2pucjJKSWppaGtrcmdEdWJFVmhDNXIKSjFoRVE5RTROREltQ0RSVFVmVnJyTys1a2JwUlEzemVjYUhTd1BJTERMSVNqMjhwTmkwRVNGUVptM0VGQWY2Rgo3MjhwMFkzdE5TS2FGTXpPWE5KSG1sOGRhSHRoNWlVV0U2dDNvaTA5THJ6VWVXeGxHemo0Yy9EWDFMUUd3bXNSCmVQZFNZNjFlN0dxWjFrclRQUVI4bitucDE3WWRiMFVrZUxrTVBnYkNKUklnMUJmNS91NUVuWGdiTFBDWGk3QjkKRUN3cG04ZGpPVko1UEluNmYwTEwwYnJsUlRnNXFvMVpQU05POFFJREFRQUJBb0lCQVFDUTFZWEpjMXorS2xiRQpPL014anRNVmxxdkNySXZDYkpjUG90RFlQQ1krUGYyK3dmdzJJYWtaWENnNjdwYUJ2cDJxVk5ONVlwQXZiRTZRCkpVVGUweW03WGl0UDVCOGJKaER0M0dnZi85ZlgwamVYeEdlS3ovZ2FsRzdnWFYrZnRyam9LT0Y5bDgzN2NBR2UKbWNaYUkwL3dDMU1kK1pMY0wvTnNUVllUVWpKUWVSWGx4a3lRM0s2ZE1JeUFsN0drRmduTnhiRjZDYnREN0F1Kwo3a0trVi9rWlJaT095RTlnTTdVbmR2VldNZk5kcGxJVmhXOWlKTkhiNFgvWFlEV2JTd2g0ekxxRStmUmNrWFozCmxnajl3bDZTSHVCZCtQckxCT2ZYMW05TmhNWGM4WHhhRy8xN2JqZ3BrQ0c4eGNHN3RCT3BkTU1aRVJwOXJLejIKb1RidEdjd0JBb0dCQU5KU1lYVkJhR2JjUndUUys3OFpGbXV3Ymg4UDRrdHVQTW1yQldOdUVaTnB6MWNaMHpRaQpTTVRXZ2xiWjFoczhWSGo5SUcwQjlaM0czYU16UHdRRml2TnZ3RDd0azBDTnJJM04rakZZSEdTNjhIRmd4Y0J1ClBKMWdtek1ISUVneC9DeGdGd2JraXZMcldNeFFZSjVWc1BUWUdsMjNCaFhwaVlWYllSa0ovUEF4QW9HQkFNNGYKM3gyTjN5Z1dVTng1MDkzM2VJM2p4K05iY1pvRUw1L3B4OTNjRUNHcG0vRDZRUW5mdWorV2NiVWZMTklOMXh6Rwo4NkcvMEFTbndlL1U5UkRZb2w3bzRSMjQ5OURhWXY0YVdiczRhMkdTUEJrcE5lZ2E2eU5FdDh5VytrSGYrRUQ0CmVNMk1xLyt5R1FMZDdra21JZmdGbEdndFFmTWpubEs4di8yQjBWckJBb0dCQUpVTVpKeWdHY2lyV25rRXUvdVYKWDlvNVVoRVpSSm1JS2ZRUkN1U0g0RlREcTNoaWlOWnRaWHg1T0Mwc2V4c2FDaE1qNzVMUXpLdGZmenBrMnNlUwoxZ0htdENya1duSm85RndhR0xCWGJPZkZ3eGZXS001U1VRcUdwL1hsbXU4TzNWTGxWZXhBa21mTWVVVnh3TWIwCm0wOG94cWFiU2VqRmMvdlo0bG5JUmtSQkFvR0FBVnZVYksxeXV5RHFoNG1HREFDRm11blZkM295MVlFUmoweEwKTlBzdVlBcHVMTGg1bFVjVVF6Y0txTmI3eEtheXRFM2JiVVdHYVlGeGxkTWhpbXJqSngwQjN1QkpRZWN1bjk0cwptVDlWOWQ2dzVybU8wV2pjQSsrQUJxazRIUmNNMitESGF4TnlUczB0dlFjWmV3SDFWMTB5RFQyL0lZc3FrQUVPCmd1MUlKQUVDZ1lCd3hrM0E0dDVVbTVwSzJGZkNIUXhobFhqWEptOW0vU2Jsc1hXQWdLK3VQMERQK09EZEVqd1AKbUpHUEpoZ0t3WG1CUVU1dCs5R0NzNm9uN3BvVGpJR284RWVXQzJMd3BlVW5mWk56NUVLazByRTA5c3pCSjlvWgpsWUY0MDFxTmNiRVA1MmJHQzVMSFpiVkNMMEJUTFRkY2ZJYkZqK3VGZ0M0Y0QrV1FPWGpnQXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUjBFc0NEMG5TdGlPcS8yVEZ6S3hJakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURBNU1EZzBOVEkyV2hjTk1qWXhNREE0TURnMApOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BXSG0wTXAzVEM3OG9FbW1oS2xHVkcwU29JYmV5QjNnK1Y3aWVUbHUyYWNsNnQzc1QKSWJkMVNlUlllTVBoN3ltUDJTKzd4amphY2hKeDE4MjBwanVkU3E2NXlPZXZZa2lPS0dTU3VBTzVzUldFTG1zbgpXRVJEMFRnME1pWUlORk5SOVd1czc3bVJ1bEZEZk41eG9kTEE4Z3NNc2hLUGJ5azJMUVJJVkJtYmNRVUIvb1h2CmJ5blJqZTAxSXBvVXpNNWMwa2VhWHgxb2UySG1KUllUcTNlaUxUMHV2TlI1YkdVYk9QaHo4TmZVdEFiQ2F4RjQKOTFKanJWN3NhcG5XU3RNOUJIeWY2ZW5YdGgxdlJTUjR1UXcrQnNJbEVpRFVGL24rN2tTZGVCc3M4SmVMc0gwUQpMQ21ieDJNNVVuazhpZnAvUXN2UnV1VkZPRG1xalZrOUkwN3hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4Skp6YWlmcStyNUJJZVo5VG1vTFErUVJvQWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDL2szT0NheEgycExOd3pndGxGMDcwaFdxNjJLNWsyR1dNbmNSUnJqQVZXdzE1dXlJZW5hM0hSCkxXWEJ2bnNoUnQzTFE2VXNKVzNjWElScmhBRms0bEhsbUFQNDBtVDlKTGtGWE1JdWtBYXZHWi9kd05wTG9oY1kKVDNHMXpwVHAvUFRwRTJWaHdWS1FMeVlkZkFSNHlrcHFHQmk3all3VWl0WENwc3FUbHhqOC84UlQrMVVRRUg3bgp1dy9sZEpoMVlUMk11bCtiNEE4aGw5U044N3hZWW1pK2h1QVE0ejBuR2htdEVpNUcrRmpDcU42QjdNTDlROXUwCksyNDJLbTcxZWoxbmRlZU5rMTNSK1QyMjhnRUtqUzV3SVFxMlJCamdJY2IzQWpCUWd1UHc2RWVZZExhTjVabHUKaTJmVjhiVVQ0WDJ0NXJDU0toYTNKMThZS29LODZNWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVnJQTVZKYjhxMGtSUThrWXBrODlwREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURBNU1EZzBOVEkzV2hjTk1qWXhNREE0TURnMApOVEkzV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEZnVuQ1EvRzZiQ2pqa2g3MXRlZmxlSEZvMHRFdzQKOStESEJQQXc3M3E2MUZ2d3BtMHVnY3J6ZURNRVJKdFRrWHRhaUgrZzQ5bXJENXg2THlpQVZzaWg4aDZEMERSdwoxVU85RHhhOGtMQmJhZXVSLzFybllsSTc2UEEwQlM1VFhrRVVqZUNBWFc4bkZ2TFJnc3kvWjlHN3pEbjJpYlJGCkF3L01jUzFzODhqNkJFQkRoREFJVEFkek1YMllwbSttdWlaRFJTR0lCcldsUjlnckhjdHF2SWE3THkxU3Bna0EKZzArbEIwMWFLTWtyWEdGdWRmMVF4dHl2c3owd3lkTkQvY1dCc1VjVUl1YlVNTHRwRWZzbTRGenovUStvZmpsOQpxQjhTQ2ZoZDVUWTkwbHk2d0JoUmFta3k3aVB0UWRBY0x3OTg5TllqMDZmWDNTOExxZEFKVGp3N0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNU1NjMm9uNnZxK1FTSG1mVTVxQzBQawpFYUFKTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFReHZXN0szbVFCZDUxc2V4bHo3UGRIeW5HeFNtejJJSzJwdXgwUHY1MzVSYXdITHIKdFFPemd2MzA0L2lMazZJWnlPWjkyNnhLTVFYamF0eVJCOTZ6bVhlL3NmNzJqZHN2bUN3QmdBYzBxVkVsd1VzcQp4amtpTHhxRnBxbDQ2WDRaTktvQWhPTjJSRlZlZFFTRTlvUDZkVFZVang0YjEweG5GSG1MTzdvQXYveG10LzJzCnAzWE44VEVsRGhuM2x6N3NZejZEQzhBczlYY0hyYzJ4eGVQY2kxcTBlWTJBK2d1MFJ2UVljSDNXZmdsNWx3L1EKbTBGd1JUYitFUEhwRzd0WVo1RC9vTHk3ODJiRjFOMFI1eE56Vy85UkpndTBCTmtHVFplb2ZiSTJJSkRXNlorSApuVWlTMjNwUjRrSm1kdU1tazZWZ1l3S3NxNkZjWXo2R1U1dTZ3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMzdwd2tQeHVtd280NUllOWJYbjVYaHhhTkxSTU9QZmd4d1R3TU85NnV0UmI4S1p0CkxvSEs4M2d6QkVTYlU1RjdXb2gvb09QWnF3K2NlaThvZ0ZiSW9mSWVnOUEwY05WRHZROFd2SkN3VzJucmtmOWEKNTJKU08randOQVV1VTE1QkZJM2dnRjF2SnhieTBZTE12MmZSdTh3NTlvbTBSUU1QekhFdGJQUEkrZ1JBUTRRdwpDRXdIY3pGOW1LWnZwcm9tUTBVaGlBYTFwVWZZS3gzTGFyeUd1eTh0VXFZSkFJTlBwUWROV2lqSksxeGhiblg5ClVNYmNyN005TU1uVFEvM0ZnYkZIRkNMbTFEQzdhUkg3SnVCYzgvMFBxSDQ1ZmFnZkVnbjRYZVUyUGRKY3VzQVkKVVdwcE11NGo3VUhRSEM4UGZQVFdJOU9uMTkwdkM2blFDVTQ4T3dJREFRQUJBb0lCQUZ1R3oyUlJFUUsyWk40QgpOaHFpYXNUNGZtTFBXOXQyZE91V2RwamViK3djMGx3YUNkS2I0S1pJQno3NHZqNnE1cmI3M3BLNGhDVDZKdjdKCmFoMU80NWQxRU16R0VaNFRjVG5ZQVdvMUd5RGFyVGUyS3I4OE52NHhab3N4ajJrbHh5UWNncnFnL3NjVUdWUmkKMlZaNHA1SFhrK0xySk9lU3dCVFlQRWcxVjRRSUV5R2pIbVFwTWFLQVdYZnVIcFg2SmxKNjdTemQ4T0RyRVVkZwpZODdZR05pVElLS1V2UW5ad01kQy94NlhReWd4RmljclBJWWsxNytUNUdWZmpXVGw3c0xKSHQwZjEyelhWL3hoCjlydHZxalpBcFplajBSaGx6STZDYzJ4VjluMmIzU2l6NUZhRlJqVW15V2dEZGFZZFNHN1RPelE1SUcwRElhTmgKaVZmY0tCa0NnWUVBKzFuWVAvTTBySkN0M3F1bE5VZW02L3kzQ3RhSlM2OHErZ1d6UFpVd2hqOUxIdzZuRHcyMQplSW9GYUtRMkh0NThpUlZHR1NSU1dMRUh6VVNzeE5qbWVKQ3h5ZytnV09iVkJhaWg0SC8zbm1MNE8zY0VTdXN5CmEwQnZUcFpSaWpYVlZobjU4cWtqa1B3bk5qWEdZR09nMVRoWmk3aEYxS1ZQaGluVEhoZVp2UTBDZ1lFQTQ5M00KK1loVmVBS1dUQy9iUkwxc3NVb1Y1YzdTTyt1MG91eFpYWVIycFMrZzhFYnhYNmJLdUxRWkJueXhTbEQxY0t1WQpTNm9NM0MzWGdNRGpoVGJXNlBITkd1OVlHMXdqMnB4ZjE1d0N2M0lhVGZYUzlCUldSNEpjMGNLc3hFSm0wRjU2CncwSUpldW5NYnNFdlBubUpqYUlpdHRpMURZYmVoeHJabWJUczNHY0NnWUVBOExKVjhzK01wcUFaMEgxZ3hNZnIKNGxyc1VsV2x2ck50SFdadUFkQW5XcmVyMFg3dm5ldkwxeldjL2xzYWRLOHNaUDNaVmVSQmN5dDhSQ2E2cC9ycApvWlUybkVBZ2xtSGVwditZbk9zT2pqOUtaVytRemNtelM1KzF0M1VkZXBRWXlzNHZYQ0I2cmJHNlB5QjU2djRkCkczSk4xZzNOMlZmQThzS0VxSEdEU05VQ2dZQTl6SFBBNFRhODI0YkRsdDhTMzRUUStGVEVCTG1Ed3NNMHhJRGcKR2dMTGZnVlo1UU9sZTJqVGV4U21hNzd4ZHM5NkJTL0NwWlhqU1JOL09kRDYyZ3FqRnFFWHd2M1VQY01Ea1JGMQpPanlNaTNlUzJTNmpQN2krb0I1b1RUSHA4RkJPQnJHb3J3by9LWlZtSEVLaDRQaHJUeU8zRDBMYkxrNi91WXAyClkxa3gxUUtCZ1FEQ0JZenMyVzhyUUIyMzdiNzNNeStVRVpIemVSS051Y3NrQW9xWEFOVjhoaXErOURUOEU0NVMKYUU5aTQ5OU05c2JibzQ4RnRKY0oyek5zRlhTa3BvdFc0MHdVbWQwU2dCYktZT0tSbDBFZW1NT09pYlRMUm9MUQpIOHBQeklRVDR5OUJDRWVkMUdvbU4vNmJoVjNCSlVGbERTRVlqWGtMc1pHL0k3bHQvUGxscXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUjBFc0NEMG5TdGlPcS8yVEZ6S3hJakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURBNU1EZzBOVEkyV2hjTk1qWXhNREE0TURnMApOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3BXSG0wTXAzVEM3OG9FbW1oS2xHVkcwU29JYmV5QjNnK1Y3aWVUbHUyYWNsNnQzc1QKSWJkMVNlUlllTVBoN3ltUDJTKzd4amphY2hKeDE4MjBwanVkU3E2NXlPZXZZa2lPS0dTU3VBTzVzUldFTG1zbgpXRVJEMFRnME1pWUlORk5SOVd1czc3bVJ1bEZEZk41eG9kTEE4Z3NNc2hLUGJ5azJMUVJJVkJtYmNRVUIvb1h2CmJ5blJqZTAxSXBvVXpNNWMwa2VhWHgxb2UySG1KUllUcTNlaUxUMHV2TlI1YkdVYk9QaHo4TmZVdEFiQ2F4RjQKOTFKanJWN3NhcG5XU3RNOUJIeWY2ZW5YdGgxdlJTUjR1UXcrQnNJbEVpRFVGL24rN2tTZGVCc3M4SmVMc0gwUQpMQ21ieDJNNVVuazhpZnAvUXN2UnV1VkZPRG1xalZrOUkwN3hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4Skp6YWlmcStyNUJJZVo5VG1vTFErUVJvQWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDL2szT0NheEgycExOd3pndGxGMDcwaFdxNjJLNWsyR1dNbmNSUnJqQVZXdzE1dXlJZW5hM0hSCkxXWEJ2bnNoUnQzTFE2VXNKVzNjWElScmhBRms0bEhsbUFQNDBtVDlKTGtGWE1JdWtBYXZHWi9kd05wTG9oY1kKVDNHMXpwVHAvUFRwRTJWaHdWS1FMeVlkZkFSNHlrcHFHQmk3all3VWl0WENwc3FUbHhqOC84UlQrMVVRRUg3bgp1dy9sZEpoMVlUMk11bCtiNEE4aGw5U044N3hZWW1pK2h1QVE0ejBuR2htdEVpNUcrRmpDcU42QjdNTDlROXUwCksyNDJLbTcxZWoxbmRlZU5rMTNSK1QyMjhnRUtqUzV3SVFxMlJCamdJY2IzQWpCUWd1UHc2RWVZZExhTjVabHUKaTJmVjhiVVQ0WDJ0NXJDU0toYTNKMThZS29LODZNWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU5ETUhmQ3BSbXM5WjN1SjRuVEZ1QmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBd09UQTRORFV5TmxvWERUSTJNVEF3T0RBNApORFV5Tmxvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3BpcFFRaGtrM0MKdDdBSEpkcU5KR0N2T0JPVU5NSzE0SEYvN0NubVRsWUUxOVV5Sk9HbDVlQ29VbndSNjZQNUxjcW4vd2tBTHREMQpDZFJqVllTRjIvMEErM3Qxb0lIaUxGbEJpRnZNL1ZDNXJkMmtSd0I2bjdlbWhPVzBnd2VMdVovakZuNGJMQnJPCmZKTFpGT1BLTmdESk4vMnQ0RmlqcXZxWlRFT0h1ZlB2TFlWZ1BXQnB6YmJ3NzNvTitMeldIZXlqNmZXbkNrSDgKUjVhRHBJcW43YUp4Z1Y3RmVQY2hJeURBYWZjQmtPNUdKSDF3dzhTZWxycjk3SFpGVHRIeWJUTUF1Y09aSFJUdgpTeGtNVjJYUGdLc3F3WThaZFpvQWhacHhXUzg3aVlHSW5waW5yUjlOR1ltRW55UmhXSW1YcjIvWWJqZ3B1Z1MwCmk0ZjZtQjFpM2VrQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVeEpKegphaWZxK3I1QkllWjlUbW9MUStRUm9Ba3dNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJM1BBTTNESVJEbUoKemlXWkNPS0lkNWdmRFJKT3RCdW8rL0JvYXFyRXVuUlI2UG4yNDhLaUgrSUpLM014ZlNCVG5uNGFqSncvNzAwSQpzQUYwVndveC9MZkZhVGNtc2xUM3BSdlpER2FpekpZSDZjR1lab0Z4elk1K3E3a3BXenYyTXJ6c2cwTVlpbElxCitiaEZsRWhyMXNpQ3hvb241cG5CalM3b1dNMENmdmF3Z0taRlRWQ0hkN21MWmRlTWc4bkFlTnM5b2Z2ZUtpZG4KZnhvc0RUaWRoRUF3OC9sOHREdDhJNUtQUkw0cUJFdkxQTXU1enEzUDNid3NqMjJLdjlQN0FBOU5LQ2lTMjNxZgpycit2WUZFTWdWUk0vRXZNQ0JQeDRteFRBdXQ2djBZUnM5VEgxOVUzT0JpTk90bzJSM0xjaElMSDdvNlFTOTFYCnIrc0c1Njd5U2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNm1LbEJDR1NUY0szc0FjbDJvMGtZSzg0RTVRMHdyWGdjWC9zS2VaT1ZnVFgxVElrCjRhWGw0S2hTZkJIcm8va3R5cWYvQ1FBdTBQVUoxR05WaElYYi9RRDdlM1dnZ2VJc1dVR0lXOHo5VUxtdDNhUkgKQUhxZnQ2YUU1YlNEQjR1NW4rTVdmaHNzR3M1OGt0a1U0OG8yQU1rMy9hM2dXS09xK3BsTVE0ZTU4Kzh0aFdBOQpZR25OdHZEdmVnMzR2TllkN0tQcDlhY0tRZnhIbG9Pa2lxZnRvbkdCWHNWNDl5RWpJTUJwOXdHUTdrWWtmWERECnhKNld1djNzZGtWTzBmSnRNd0M1dzVrZEZPOUxHUXhYWmMrQXF5ckJqeGwxbWdDRm1uRlpMenVKZ1lpZW1LZXQKSDAwWmlZU2ZKR0ZZaVpldmI5aHVPQ202QkxTTGgvcVlIV0xkNlFJREFRQUJBb0lCQVFDSGM2Nk5ycUVRVTBFNApkMGtHL3A1UlNiR01qdy9XbnFrd3JvN2F2Ly94Y2ljUlRFTklMRW1uQlY5MTJCMW55NjhNK1AxSVJGVEo2WEplCnpYRTBmdTlkVFY0SVFUZ2JGNHd0b05PZXlkNXk4bnRxSlcvcTlQS3NmWTA3K28vbW9uY0owWURFTEF2WENoR3cKQThnd3hFRmxQdVFldElkOGNrbHpQWGgzWms2dWl5V0RxVFF3c0pubTF1cDY1aytrM1NQTEFhTEsvQW9wc0JwQwpBUWNKQkFheXgxSExUVEh6TTVmblRCckZBb2RidFJ2eFJpL052Z2pRZHluZ3pkUjdJSmJUbThkSXkwT0hQSTVtCjhtSmNZNjJvL0UydWE0eHhkNk9yeHVSbWZaVG1wdURjYnpjVlY3ZnhnNzRHZWRqL3BNYVhaeUw3UlVOUTRPd0IKaHBzdS96T2hBb0dCQVBuVjR1RTVmdUZGbmpHanNrd0dtTWVQQlFuL3JWU0hxU1JwSGhFdUdkSG1wbmtXUS9VagpNbWVQdXl5SkcyYTZsNjhEWk5HNDZNQnNnWUxMNmlKT0FoVGZ3WGNOejR0U2xMRTc3T1ZKd1FiZGVvemVSN1VTCmRWUFpWVUVaL0FveDdnVDM3WEVoRmRxZnpzVVFzM3RXTzFmOWdwT2NaKzZWdFhkVTVpNnN0YVNsQW9HQkFQQXIKS21sUjNGSFNYZmR0YkE0dmx3YzZOTHFYYTkydFJ4RFUvWldRbEtjNXdpa01Rc0RxVW9GZEFFNGs1MlI5K2Q0VQprMnV6QkRhMEpUUFpOcGordE9yLzZqa2ZJaWRyVWpqVXpic2xGaTVXc3RuWGFBZ1FBelEzK1dRUHFqNWFXa1RSClByRWtBaFVRbDNxWUczbkdndDRrMG5PUlRqaVJTbzl1WlJKd0RWejFBb0dBSlFFY0lMWHVhQmx5cS9HT0dCcW0KQ0hEVGt6Nk9nc1d4Tk5acEFLeHVZSnVrTHEwd2xaK0grTFRlU1dOcGJwYlducktHL1ZWQkREZEdHNFJ1Z25SQgpkS3dMc01HWDZ3L3BQRE1mREhzWEh4Z3c3YXFDdm53a2FxMzNKYlJlazNmL3hEYWdzYS92MTdqeDNGaHo3U0hCCm1tL1BKbVAxTk81eHVXSVcwZlQ4MW8wQ2dZQWE0VW5xNWIyWjdzaVRrOHlmUGRaU2VjSkREQVdIbHdnNEt3NkMKdWQ3WlpJNkZsNWkxRE1UVk03cUFCSU5kYlBnVlVnbzU2SnhWSHc1MjRoM0pPK0MxMkpTM2RmT1ZvOTVjKy94VwpzTXp0dk1oaHQwa3VkZFJWK05uUnlDc090WUFhNmF4eG1RMGVuRy9IeWRSeGFiVmw5WXNVWWpQMkF0VHNmcmVUCk83VlRMUUtCZ1FEcEM2OTVubDZXbGY0K0lveE42bmlsV2VMUjdRYmlIeEhUOXk5K0ZIZHU3Vm80cVNzMzZoUWMKYTlhZkVXZ1l3Vlk4S3dmRXFQSms4OVc0dzNaMTFWVUhSRE9pZVB0UUs4UjFhdUpOVUdIMTBOMVlzUm5FNTlBRQpGbEUxVitLWTRBUVBxL282dnNvNWpscTZMa1lSRGFtcUIycEdRa1hzTnFXUjFzaFRYUjVicVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0efd90b230059d5f365972ac9f23f8740104c8df11451a92187a5a7cf2048d2b
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: bd2b1b02e8b333410f9736e42dc2a6077c0d933efda3a6b6a1f68be20c9049fa
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
