# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02MXd3Nm9hV3F3UlZ6ZXhGbDJ3Q0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNak14TWxvWERUSTJNRE13TXpBNQpNak14TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEweEgrQ2M3aDFNUWtoWTF4MWxjRlpTdkJVUEs4cTFMWU1TODZhWXowNVpLa3dCVE4KVU9ES3FMVUFlTVc3ZlZQcXFPdkJOZzJGK1orZXlqcUI3Z25PeElLZ21HK3NnY2pwcmhSMG5IMUsxakd1Q0RjWAprV2NLbktZNUFQbnlhQ2M0K2ovcytMdHNTc2Y4N1A3RGR5c3dIdnpnd3JwcjFzNGtYQ2ovSitlWnIzWTIzWjFHCjBRakZWb1h2S1R1Ly9xeVBLTzh5MkNKRUtPczllbjFSQlVJSENmdXNRRVlZZCs5SFdMTzJZRGs1ak5VMUgzN08KUWU0cTRITFl6bG1UbjUzNEtJMnU2elJuSWp1ZG5XaFZnZ2FOek91SlhUVGlObldoWVJJNGNEeTEwWVNyN050WApLeGZJQUJYbld0K1dOZVA3czNyZ2RoUERNSzNRNTlzaktOZzVjd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVJmMlFkdmxNdXUyblRicXFQZEdGbElhd1FrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3JDZ21BZDdzL0gvY0dpQ0M1VUVFcnFuZlBsbVRxa1dqc28vdnBGTTZBMTdsYkcwaXdrcEVYCjFzQkgreFdwTFlGMTJOeDJlTCtIRHNpdnhXUXBFZ0RNUGw2cjVHQkt1emlzbyttZHo3YVN6SlFwNm4rZTlEbDcKK205bnA5YlRCckZWaFhjb1prNjNoc2wwR1ZhQUgwOXdVek52UzBlOWNRWmg3MHgvTGhIZ0N2SDNXdWZpY0szdwpmS1lWQm1vSjJFY1NyNk1CUFRUZ2RnT3RjRWhlNkV3clNGdUVwRE1tWWdob3UrZlVDRXd4cWFmYytCZW9YS1BrCitCdkEycUt4RkhRdXNUSC9EZml5UEt4TmNwWjZuNWtKa3M4endpaklQK1NJaEppRlJQMnkxNkhXN1k1UFRuZGIKUGNiS0F4M3d0cE0vRVFSVUV5ZlNOaU9yZTVQNlhWRzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHhIK0NjN2gxTVFraFkxeDFsY0ZaU3ZCVVBLOHExTFlNUzg2YVl6MDVaS2t3QlROClVPREtxTFVBZU1XN2ZWUHFxT3ZCTmcyRitaK2V5anFCN2duT3hJS2dtRytzZ2NqcHJoUjBuSDFLMWpHdUNEY1gKa1djS25LWTVBUG55YUNjNCtqL3MrTHRzU3NmODdQN0RkeXN3SHZ6Z3dycHIxczRrWENqL0orZVpyM1kyM1oxRwowUWpGVm9YdktUdS8vcXlQS084eTJDSkVLT3M5ZW4xUkJVSUhDZnVzUUVZWWQrOUhXTE8yWURrNWpOVTFIMzdPClFlNHE0SExZemxtVG41MzRLSTJ1NnpSbklqdWRuV2hWZ2dhTnpPdUpYVFRpTm5XaFlSSTRjRHkxMFlTcjdOdFgKS3hmSUFCWG5XdCtXTmVQN3MzcmdkaFBETUszUTU5c2pLTmc1Y3dJREFRQUJBb0lCQURuK2JKV1hVWGViZVFsMQpCcjFFNWNlWmtTRkR3TkUyRHc3Y2tpa2tRTG0vWkNNZTFCY1AzTDhrRklBYW5GeGdMVTdDa0REZzRGbnBJTUVoCitFZEdUSml6NTVwYXZNUmdSc3k4OUJsM1Y1T296TStYQzVPNUF6SnRmYVltQnhQVkN4Ty9jc1laQVRVKzQrRGUKVXlpd0ppV3RoN2daYnIzem9BdnVlOFVrSHBjVjNWUzRIZ2swSEZxUTR3ajFodFp3L1BTVHFzVW1KN2tVWUcraAoxTnZiampiQi9nNklYSTI2UFdGYjBhN2ZaWGQvL210cGpaQXVSVGVzdDJPV3FFaTA4akhOL3lyRnhyVTM0UGRFClJqbWpPQUNsc0dCZzRhSlljOWxRZ0I1MC9jY243VGVhazdMTmlmSmZrSWhSOUg4WGx5ZitnTW9tanhqMUNNL1kKUzlobEllRUNnWUVBNUVkYndWV2VoWGswRnBxbTZhekdCWHpHZjJVZHd6dHBia3Zsa0JzVmdZOEZSYXR1OGU2MgpWVGE0L2g5Y2ZhNHY4TWJtZVoyR0lRWkREbFVQa3pLZTlnV2JzeC8zdEwrNi9CVkdIZFZKSGJaT2tnSU43MFFCCjVScGx5M3lJRWw2RzNYbE50a0dwdnE1Wkg1alIwamRLNXo0aXphbHRXLzhnb1FmR3BGUVVvcEVDZ1lFQTdMT3AKOWZJZlVjK0RDcFp6RDZ1bkt4aFRNSkt4aGNsYVErM3EwSkpkbi9ZcFU5bStLQWNMQ2VGY2xqeTVXNS9KZW1EQgpmUUhYUTZUWXVoc2xQVFlQUHNZMUFGLzh0d0ZaK1NJS1NLYVhrZGMyQ1hzOFRXUDArZ1hCVVdhUGl6VW5LL1lVClltR2tqNXlHTUlYQSs5Mk9vSXFXcjlQbFJBcmsrbmNFWkc5aWxjTUNnWUVBbFJCUHh6aU1raVhxTUpSK1IvcXQKT0NvWlNGa1VEVWQvZWltUFZ3R0lrcGg4M2RpclVzb0pRQzNDc1JaemhCSTVkZVc3M0ZCVHBMNzlESi9ZMHNycwphRVNUUG0yeWg5SG5YUExiWFdISUkrSEcvcXJleEkzSkd2eVkyajZRY0VaUGxOSEFRREl5a0xReXVHSkhLUms0CkRUWlM3YThrSFQzRTVjSTVJVmRTUGpFQ2dZRUFsMk9oeE1nQytCUTh2N3pTQXFmSzEybExhN21uQ09acmNSN3UKSEZCQXlWcHJ2RkY3cWFZM2pTNHlSWFM1S0x6ZDVBT1dQUm04VUd0U29sVlNVQUFQYUJybE0wUXhJZXNmWEpSRQo5NHAxVHJYU3ZlV3YvOTk2ZzU3Q3NnbGlyYXBsVDF5b1ZQUVdpRE9ZTDlpY1FYckhDaThaaVlPQkV5L1VtODBiClpoRkhnSGtDZ1lCWm1nVFRvTWtWc0MwUGhDUW1PdWN3Y0ppWExFeHFWN29TdkNGZ05idlFmQU9IVW1RNkQzd1kKaHhCR2ZCSEJCSXVlVnBOMnhBbkRPRE5JRGkvRDY0UEJJaEk0L0tNKzM5SXgvc1cwRTl6SzhjbS9wZWt6UVlpeApJOGVmaExpbytPbktDeUtkYTluVFN6eVJISXlGay96Y1VWR2JuR0E2bVBjVHpLdDBVdnMrSFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02MXd3Nm9hV3F3UlZ6ZXhGbDJ3Q0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNak14TWxvWERUSTJNRE13TXpBNQpNak14TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEweEgrQ2M3aDFNUWtoWTF4MWxjRlpTdkJVUEs4cTFMWU1TODZhWXowNVpLa3dCVE4KVU9ES3FMVUFlTVc3ZlZQcXFPdkJOZzJGK1orZXlqcUI3Z25PeElLZ21HK3NnY2pwcmhSMG5IMUsxakd1Q0RjWAprV2NLbktZNUFQbnlhQ2M0K2ovcytMdHNTc2Y4N1A3RGR5c3dIdnpnd3JwcjFzNGtYQ2ovSitlWnIzWTIzWjFHCjBRakZWb1h2S1R1Ly9xeVBLTzh5MkNKRUtPczllbjFSQlVJSENmdXNRRVlZZCs5SFdMTzJZRGs1ak5VMUgzN08KUWU0cTRITFl6bG1UbjUzNEtJMnU2elJuSWp1ZG5XaFZnZ2FOek91SlhUVGlObldoWVJJNGNEeTEwWVNyN050WApLeGZJQUJYbld0K1dOZVA3czNyZ2RoUERNSzNRNTlzaktOZzVjd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVJmMlFkdmxNdXUyblRicXFQZEdGbElhd1FrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3JDZ21BZDdzL0gvY0dpQ0M1VUVFcnFuZlBsbVRxa1dqc28vdnBGTTZBMTdsYkcwaXdrcEVYCjFzQkgreFdwTFlGMTJOeDJlTCtIRHNpdnhXUXBFZ0RNUGw2cjVHQkt1emlzbyttZHo3YVN6SlFwNm4rZTlEbDcKK205bnA5YlRCckZWaFhjb1prNjNoc2wwR1ZhQUgwOXdVek52UzBlOWNRWmg3MHgvTGhIZ0N2SDNXdWZpY0szdwpmS1lWQm1vSjJFY1NyNk1CUFRUZ2RnT3RjRWhlNkV3clNGdUVwRE1tWWdob3UrZlVDRXd4cWFmYytCZW9YS1BrCitCdkEycUt4RkhRdXNUSC9EZml5UEt4TmNwWjZuNWtKa3M4endpaklQK1NJaEppRlJQMnkxNkhXN1k1UFRuZGIKUGNiS0F4M3d0cE0vRVFSVUV5ZlNOaU9yZTVQNlhWRzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHhIK0NjN2gxTVFraFkxeDFsY0ZaU3ZCVVBLOHExTFlNUzg2YVl6MDVaS2t3QlROClVPREtxTFVBZU1XN2ZWUHFxT3ZCTmcyRitaK2V5anFCN2duT3hJS2dtRytzZ2NqcHJoUjBuSDFLMWpHdUNEY1gKa1djS25LWTVBUG55YUNjNCtqL3MrTHRzU3NmODdQN0RkeXN3SHZ6Z3dycHIxczRrWENqL0orZVpyM1kyM1oxRwowUWpGVm9YdktUdS8vcXlQS084eTJDSkVLT3M5ZW4xUkJVSUhDZnVzUUVZWWQrOUhXTE8yWURrNWpOVTFIMzdPClFlNHE0SExZemxtVG41MzRLSTJ1NnpSbklqdWRuV2hWZ2dhTnpPdUpYVFRpTm5XaFlSSTRjRHkxMFlTcjdOdFgKS3hmSUFCWG5XdCtXTmVQN3MzcmdkaFBETUszUTU5c2pLTmc1Y3dJREFRQUJBb0lCQURuK2JKV1hVWGViZVFsMQpCcjFFNWNlWmtTRkR3TkUyRHc3Y2tpa2tRTG0vWkNNZTFCY1AzTDhrRklBYW5GeGdMVTdDa0REZzRGbnBJTUVoCitFZEdUSml6NTVwYXZNUmdSc3k4OUJsM1Y1T296TStYQzVPNUF6SnRmYVltQnhQVkN4Ty9jc1laQVRVKzQrRGUKVXlpd0ppV3RoN2daYnIzem9BdnVlOFVrSHBjVjNWUzRIZ2swSEZxUTR3ajFodFp3L1BTVHFzVW1KN2tVWUcraAoxTnZiampiQi9nNklYSTI2UFdGYjBhN2ZaWGQvL210cGpaQXVSVGVzdDJPV3FFaTA4akhOL3lyRnhyVTM0UGRFClJqbWpPQUNsc0dCZzRhSlljOWxRZ0I1MC9jY243VGVhazdMTmlmSmZrSWhSOUg4WGx5ZitnTW9tanhqMUNNL1kKUzlobEllRUNnWUVBNUVkYndWV2VoWGswRnBxbTZhekdCWHpHZjJVZHd6dHBia3Zsa0JzVmdZOEZSYXR1OGU2MgpWVGE0L2g5Y2ZhNHY4TWJtZVoyR0lRWkREbFVQa3pLZTlnV2JzeC8zdEwrNi9CVkdIZFZKSGJaT2tnSU43MFFCCjVScGx5M3lJRWw2RzNYbE50a0dwdnE1Wkg1alIwamRLNXo0aXphbHRXLzhnb1FmR3BGUVVvcEVDZ1lFQTdMT3AKOWZJZlVjK0RDcFp6RDZ1bkt4aFRNSkt4aGNsYVErM3EwSkpkbi9ZcFU5bStLQWNMQ2VGY2xqeTVXNS9KZW1EQgpmUUhYUTZUWXVoc2xQVFlQUHNZMUFGLzh0d0ZaK1NJS1NLYVhrZGMyQ1hzOFRXUDArZ1hCVVdhUGl6VW5LL1lVClltR2tqNXlHTUlYQSs5Mk9vSXFXcjlQbFJBcmsrbmNFWkc5aWxjTUNnWUVBbFJCUHh6aU1raVhxTUpSK1IvcXQKT0NvWlNGa1VEVWQvZWltUFZ3R0lrcGg4M2RpclVzb0pRQzNDc1JaemhCSTVkZVc3M0ZCVHBMNzlESi9ZMHNycwphRVNUUG0yeWg5SG5YUExiWFdISUkrSEcvcXJleEkzSkd2eVkyajZRY0VaUGxOSEFRREl5a0xReXVHSkhLUms0CkRUWlM3YThrSFQzRTVjSTVJVmRTUGpFQ2dZRUFsMk9oeE1nQytCUTh2N3pTQXFmSzEybExhN21uQ09acmNSN3UKSEZCQXlWcHJ2RkY3cWFZM2pTNHlSWFM1S0x6ZDVBT1dQUm04VUd0U29sVlNVQUFQYUJybE0wUXhJZXNmWEpSRQo5NHAxVHJYU3ZlV3YvOTk2ZzU3Q3NnbGlyYXBsVDF5b1ZQUVdpRE9ZTDlpY1FYckhDaThaaVlPQkV5L1VtODBiClpoRkhnSGtDZ1lCWm1nVFRvTWtWc0MwUGhDUW1PdWN3Y0ppWExFeHFWN29TdkNGZ05idlFmQU9IVW1RNkQzd1kKaHhCR2ZCSEJCSXVlVnBOMnhBbkRPRE5JRGkvRDY0UEJJaEk0L0tNKzM5SXgvc1cwRTl6SzhjbS9wZWt6UVlpeApJOGVmaExpbytPbktDeUtkYTluVFN6eVJISXlGay96Y1VWR2JuR0E2bVBjVHpLdDBVdnMrSFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02MXd3Nm9hV3F3UlZ6ZXhGbDJ3Q0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNak14TWxvWERUSTJNRE13TXpBNQpNak14TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEweEgrQ2M3aDFNUWtoWTF4MWxjRlpTdkJVUEs4cTFMWU1TODZhWXowNVpLa3dCVE4KVU9ES3FMVUFlTVc3ZlZQcXFPdkJOZzJGK1orZXlqcUI3Z25PeElLZ21HK3NnY2pwcmhSMG5IMUsxakd1Q0RjWAprV2NLbktZNUFQbnlhQ2M0K2ovcytMdHNTc2Y4N1A3RGR5c3dIdnpnd3JwcjFzNGtYQ2ovSitlWnIzWTIzWjFHCjBRakZWb1h2S1R1Ly9xeVBLTzh5MkNKRUtPczllbjFSQlVJSENmdXNRRVlZZCs5SFdMTzJZRGs1ak5VMUgzN08KUWU0cTRITFl6bG1UbjUzNEtJMnU2elJuSWp1ZG5XaFZnZ2FOek91SlhUVGlObldoWVJJNGNEeTEwWVNyN050WApLeGZJQUJYbld0K1dOZVA3czNyZ2RoUERNSzNRNTlzaktOZzVjd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVJmMlFkdmxNdXUyblRicXFQZEdGbElhd1FrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3JDZ21BZDdzL0gvY0dpQ0M1VUVFcnFuZlBsbVRxa1dqc28vdnBGTTZBMTdsYkcwaXdrcEVYCjFzQkgreFdwTFlGMTJOeDJlTCtIRHNpdnhXUXBFZ0RNUGw2cjVHQkt1emlzbyttZHo3YVN6SlFwNm4rZTlEbDcKK205bnA5YlRCckZWaFhjb1prNjNoc2wwR1ZhQUgwOXdVek52UzBlOWNRWmg3MHgvTGhIZ0N2SDNXdWZpY0szdwpmS1lWQm1vSjJFY1NyNk1CUFRUZ2RnT3RjRWhlNkV3clNGdUVwRE1tWWdob3UrZlVDRXd4cWFmYytCZW9YS1BrCitCdkEycUt4RkhRdXNUSC9EZml5UEt4TmNwWjZuNWtKa3M4endpaklQK1NJaEppRlJQMnkxNkhXN1k1UFRuZGIKUGNiS0F4M3d0cE0vRVFSVUV5ZlNOaU9yZTVQNlhWRzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBNdS9tWTJzQnc4MHBvMDZwSXZPNGd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNak14TWxvWERUSTJNRE13TXpBNQpNak14TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXl3b3pYS05UVmJzUFdsZWVLYTRsMC9BV1Eyc3UKZjVkOUNMQk1KYXJtaEFqaC96RlB1dklLeFI2UVVMRlVWbThtTGVBaVhPTnJuL2xPSDdYVE1GZVp6ZVZFUUVjTwpTbEdqVUhqbUZyWjFhd0R0STFwa0Z2dDFQaGp6WkxZUHYyblZ1MDR4ekdZeUJ1aE9iZlgrMS9vOWJUWC83ek9RCnRycWZPalZ1ZlRaV2R1QllxTEpsOHdqblFnVko3SlNabDB5d0tPR2V4d0l0VWVZMXg3S3NldEdhVlpkSGxUMDMKRy8zcHZYQWdzamp5RnhMWUpkT1pGTW9LeStQWWVzdWtKVTI4OTBWSG1lNDJEQUkrR0J2ZmpzK1k5V01WYnVxcApqTGNMRUI1VzFiOWJTRE1hSGFuOGV5cWRIVkZWbS8rSWRoempMNUpTNzlUTzZGaUNmcmM5VGd6Mlh3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0VYOWtIYjVUTHJ0cDAyNnFqM1JoWgpTR3NFSkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRUlhYnY0RzcwYUN1UnUvV0MySHFGMUJxaG9VYy9vRTVLZmpxRXBNck9NdU9hUlIKaSttYkc1a0tvMHF1T3JPTHBhWUR1RkVkNXRlNFppc3ZlNm1uNnN0dzlpYU9EUlJyUmVaOU1WWGZvdkhSYjVLdQpHcXJxY1pxQ2RYa2RtbWZUcjd6bUlQUEQwN1RlV00vVFBTbmxMMlE5ZGRNRjRkR1RlMWdDMGFlNGd3V1pLcURYCmJuRHZSelJJU29ZcXN1VlNHRmFPZEkzcHluZmx4ZDRGa29Rd0V0QUhKaTNpRUlHWTJsMjZEWDJiZFJFSFRON20KTkM3eGQrRVpnbFdQTVNBMXdFR2svd0kyZTQrODRtbXlDOVVldmQ1WnFVbU43bU4vN0ljVWZTZHF0d2J3eHhiSAo0R2JaTkdOSjVtVktDbkxWNGtJV2JRNXp5TWhGRU9lQ1lvNlFTNVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeXdvelhLTlRWYnNQV2xlZUthNGwwL0FXUTJzdWY1ZDlDTEJNSmFybWhBamgvekZQCnV2SUt4UjZRVUxGVVZtOG1MZUFpWE9Ocm4vbE9IN1hUTUZlWnplVkVRRWNPU2xHalVIam1GcloxYXdEdEkxcGsKRnZ0MVBoanpaTFlQdjJuVnUwNHh6R1l5QnVoT2JmWCsxL285YlRYLzd6T1F0cnFmT2pWdWZUWldkdUJZcUxKbAo4d2puUWdWSjdKU1psMHl3S09HZXh3SXRVZVkxeDdLc2V0R2FWWmRIbFQwM0cvM3B2WEFnc2pqeUZ4TFlKZE9aCkZNb0t5K1BZZXN1a0pVMjg5MFZIbWU0MkRBSStHQnZmanMrWTlXTVZidXFwakxjTEVCNVcxYjliU0RNYUhhbjgKZXlxZEhWRlZtLytJZGh6akw1SlM3OVRPNkZpQ2ZyYzlUZ3oyWHdJREFRQUJBb0lCQUVUR1RNV0pVVFlONmRKcApNVnJlOFZOTDFNNjdaSUcxbDVXMDJlWThjRjZ5LzVKSWFzQmhNa0s0NnB0YXBiMnRZcHBSZkhKSVduRlNxaUxWCm5SYVg1YkkzZ1puZ043ZjIxVUh4NGNZNXdhWWdKek05Yi8vVTUwN0VkdFZiVWhROVRqZG04amxST0lyY2I0eVIKc2VRSWtId0l1WXVWeE9RUWJOVHp1bHhSWnBKWEswVHF3NWk1ODRiZThzVDVoUHd2dzdQQ0FZWWZFZ0JvMG5EVQo0d0hFRVZtUWlGVHI2a3pzZk9ZblBoS05pWDZvMjFPcElhVzROYWRmTzdnMmIyWXhxcDE2MW1EWlRKTW5yNzJBCldjUjBtdXBnYUNZNkdpUHFiZnZ3Y3FNVkxFUUZ4c3dhcGdNdEhtQzEwM1RBd1k0WVI4TWhncUN5RWJBUUxvcTYKVFpPdkFCa0NnWUVBM0NZb2dPbEthN1djVlUvRUFGOWg4bmRDS0FERG1GOVNxTjZJeXh2NjNBbExscy9YOVlXbQpTdm5keWo4Wi8rVWxmN2l1bjVzMGhTc3RTcFh1bUZtR0dWN3RXcWRJMkhhOENjOUd5SUpwWDZzUzVqdjNKSWkxClNSZ2dYd2FXZjcydFhEWkFZa3FmcFo0T09ha2UybVhrUEx3elZ1QTE3ekJqMTQzYi85RTFlYU1DZ1lFQTdCckYKMnZ6czl5TzNiMjRHcGxKOVhGdDRadEw0RDluQzdRTHBML29ZRHo3b2h4RGhxVkhtNkc5UkhCeUZDZXo4QnArZwpZQnltSDdOb2FYdHZoOW0ra01YcHRERFJwOENFTTZYb0VaV2dYVFo4WkdhTjVSbTZCNHlDSkVnL2tsdEFoMDBTCjdSS08yTUV3UTQzK0tmRS9nMjlETWZXZWkrelgzWCtYSTlGRjFCVUNnWUVBcFJpSXI0UkVwMW5mRDZ0dUZjbHkKTHQ5NDRYOFJNQ2ZzV1cvcHJrZ2hiUG9ia2RIMDVzOS8waUpvVGMvY3M2Y281QXVnQ1ZuZm5TNndISXNzRDF5egowRHI4VFV1K3VYYnh0WG1ZWDY1TlQ4MS9zdUd0aWR4cjk1RDhWY2NlL2xWRXVTNkdRakFzWVl1U3AzTkpEQWYxCmpnYWxpYlZEUFVsUTFzb3YvanpxbVhrQ2dZQjBQOHBqUkYwNFlmR1RmOHp1WDNjeDNpZXVHUG5pZEFteHdOa24Kc2kvZWNjN3prYkJLT2ZWRFJHdmZOM3VabzRHRGtWelpkY0dsb2lRcXE0Z0NqNGR3cU1HazR0U1hrQWFIbDR4bgovQS8xVlRweUJMeWdyTVlYcVdyNmlrZ2l1Nk5OK3ZqeW1VeVVGS3E2MkZMb084eFYzcFpySnRCbGZMdmNaMUgzClpMYkk4UUtCZ1FES2pJRHE5dlJGZjZkSTVGUTkzOHowTDhMQnpUUVNNcXRaRFhSSGdRWm5mdEZJWnNRalh1aFAKSitzZGFCT2JJRUNXeEJTUkRsVFk3N1J5VDh4dkd2WGgrSzAzaVBsMm5SZ3JUY1Fac29oNnB0ZXZRZ0IvTFFobwpaMkZuYUN2NlA4eTd0SFNZRlorT09zQXo5OUlxTkJ0VW1wZW9rZndMTXFUL0pZTGpraEEwRXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU02MXd3Nm9hV3F3UlZ6ZXhGbDJ3Q0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd05EQTVNak14TWxvWERUSTJNRE13TXpBNQpNak14TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEweEgrQ2M3aDFNUWtoWTF4MWxjRlpTdkJVUEs4cTFMWU1TODZhWXowNVpLa3dCVE4KVU9ES3FMVUFlTVc3ZlZQcXFPdkJOZzJGK1orZXlqcUI3Z25PeElLZ21HK3NnY2pwcmhSMG5IMUsxakd1Q0RjWAprV2NLbktZNUFQbnlhQ2M0K2ovcytMdHNTc2Y4N1A3RGR5c3dIdnpnd3JwcjFzNGtYQ2ovSitlWnIzWTIzWjFHCjBRakZWb1h2S1R1Ly9xeVBLTzh5MkNKRUtPczllbjFSQlVJSENmdXNRRVlZZCs5SFdMTzJZRGs1ak5VMUgzN08KUWU0cTRITFl6bG1UbjUzNEtJMnU2elJuSWp1ZG5XaFZnZ2FOek91SlhUVGlObldoWVJJNGNEeTEwWVNyN050WApLeGZJQUJYbld0K1dOZVA3czNyZ2RoUERNSzNRNTlzaktOZzVjd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSVJmMlFkdmxNdXUyblRicXFQZEdGbElhd1FrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3JDZ21BZDdzL0gvY0dpQ0M1VUVFcnFuZlBsbVRxa1dqc28vdnBGTTZBMTdsYkcwaXdrcEVYCjFzQkgreFdwTFlGMTJOeDJlTCtIRHNpdnhXUXBFZ0RNUGw2cjVHQkt1emlzbyttZHo3YVN6SlFwNm4rZTlEbDcKK205bnA5YlRCckZWaFhjb1prNjNoc2wwR1ZhQUgwOXdVek52UzBlOWNRWmg3MHgvTGhIZ0N2SDNXdWZpY0szdwpmS1lWQm1vSjJFY1NyNk1CUFRUZ2RnT3RjRWhlNkV3clNGdUVwRE1tWWdob3UrZlVDRXd4cWFmYytCZW9YS1BrCitCdkEycUt4RkhRdXNUSC9EZml5UEt4TmNwWjZuNWtKa3M4endpaklQK1NJaEppRlJQMnkxNkhXN1k1UFRuZGIKUGNiS0F4M3d0cE0vRVFSVUV5ZlNOaU9yZTVQNlhWRzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRZEZ0cFREdEIwZkpmZUpVNTFkU285ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBME1Ea3lNekV5V2hjTk1qWXdNekF6TURreQpNekV5V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4aVJCRk9jaTYxVmQKM1NyYWFFS2NHVmYwTUhrQWRPa1Arbm1NQ2hIWmJYaGptNWZ5bE4vNldQa3VuaDh3Z3pJR28wQnEzczdwNDAwTgpOY21GUTM5Y3RNMG94MGw0UDBvM0F6eXlzSXlwUW5GRU9FNlBZSnRnS1hUaHYrM0tYeDR1SVI5aFdsbFZCVzdHClJxbThRU3ZEQ1JmcXgrZ2FIV0FnTWRPS1lrZzc3UER3LzUwSjZ3dE85TmZGQ04wRElVUEVvNHIvdFA0L1cxc04Kakt5UytmVzVVUEZydnVOVFBDRWpuTW1qbnkzMUdUekQ0VmY1am01RE01SVd3cDQxaXQ4QzdrSTMzVElNZjJqWQpYRko3RVA2Wk1lMTFmS0Z2aFR2NTY4RDl0QUJTN3lFdEFVWmlsbXl3RDlTQTJDYUlTZU5qMkhQZHUzM2JuTlEyCkZzcUtZUGlDU1FJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNFWDlrSApiNVRMcnRwMDI2cWozUmhaU0dzRUpEQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmE4dS91UjhCbUlnb3MKODdSTkRDNVJhZ2pKUzBJVU1DeFp2YWw0a0RTMUo1L3V2VEZ4WGRGTkRHY3NEcXdIcHB2U2wxcC9lQTdpclVTUwpMbTBSNWdraWJyanNRVFBtR1pTejZ1dXZpSEp1ZEozSlZPbUlQZzA5M1BmekUyRGp0YUV3aENDUDJqNjYvZnVhCmtZeWU5U2Y1a04vME5TRE1kVG9rVlBpSjAxTXdGd1BHa1JkaE5Bb01jeTg1S0RZK1JZVEF4RjhkWTVJYkEwYzMKU29RZUN4ZEl0bzZ6V3ZBdkVRSGJFUWNteUlTZXJCTXcyRlVtZGV5SVlHSVNWZjczWTJEVzluYm10M05VU0pPdQovOCtDWEZtcVJDaE5SOHF3WmNJRE8rTkhlS3VIeVVVNUFKWStqK2QwYUFNS1dvekw5UUxacEo4cjRsem1BUVV5CjZEM0QyUnhJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeGlSQkZPY2k2MVZkM1NyYWFFS2NHVmYwTUhrQWRPa1Arbm1NQ2hIWmJYaGptNWZ5CmxOLzZXUGt1bmg4d2d6SUdvMEJxM3M3cDQwME5OY21GUTM5Y3RNMG94MGw0UDBvM0F6eXlzSXlwUW5GRU9FNlAKWUp0Z0tYVGh2KzNLWHg0dUlSOWhXbGxWQlc3R1JxbThRU3ZEQ1JmcXgrZ2FIV0FnTWRPS1lrZzc3UER3LzUwSgo2d3RPOU5mRkNOMERJVVBFbzRyL3RQNC9XMXNOakt5UytmVzVVUEZydnVOVFBDRWpuTW1qbnkzMUdUekQ0VmY1CmptNURNNUlXd3A0MWl0OEM3a0kzM1RJTWYyallYRko3RVA2Wk1lMTFmS0Z2aFR2NTY4RDl0QUJTN3lFdEFVWmkKbG15d0Q5U0EyQ2FJU2VOajJIUGR1MzNibk5RMkZzcUtZUGlDU1FJREFRQUJBb0lCQUdzUUkrcDdpaTdIRGRUMwoxdFFIU2ZtWHdPYUFPM0x3akNXM2o2ZlJSVDhWa2h6ODJhTC84M0lvRXJ4MTlleXVGMUFXK3FneC9jZElWeDc5CktQanoxTkFOR3orenZ6blRqQzQvbWY0end6R1hxbGtTZWY2bGRpeHdiNXNaamdRZmRxV0hJeitDamFKRjNQVkoKdWVNdEZsSFBqcGsrSFA1S2RwcjF4d3ljSTJVL1I1TnFzU2ZLUTlhVkNlUkh5S3VqSHVCUHhsdnVyOWlpQ1NQWQorNFJtUDFmR2xGK3FIK2V5SE90VlhwQjk3clB6SDkyR3dUZDlpUHkrSHVyTG5TR0lZZU1aZU5LZEg5ekszYmtRCkJBc1d5c295ME9MQ3hmQkJXSTVwQWdxcmpnOG9mRmM1VTlBVjI5S1BsSU9WOHlFcFJ1cFpCa2xuMDZYRlF3UXIKYUc4b09KRUNnWUVBODY4L2EyZmlEbGxJQjZOL3VIQ3BxQkp5c2RoZ1ZUMHdDSHhjajBROGRUQVN1cytsSm1VTgpmd1IrMGlIeGhMUmRaYmhEa1QvTlgreUkvR0NuQnlBbFZsOEs3VXhRTTErNm8zMGZiWFZFK3EvSlBJRnN6WHU2CktLWnNDbzVYdUNPbTZMSkVYcnp6a1lNMVBROUViRzJyQUVuaU5sdm50ZHJ2VHZZaC9Qa3J4RGNDZ1lFQTBDZkgKYzByemY3S28zWFNCTXhHdFVyUDZjVmhCMzhWRHJFYVM3clRRaEYzbU5WdG5BanVNUUJIZTR5VFZnRkJGUlpPWApEL3FweW12cExuRzhYWHd1R05zK0pTV2xFMzRwSkhLYXZab2tvR0Y3blpta2wvUEVVZk8vRWkxV3c5WkdLWmQyCkVKN1l4dEFXMTV6NFJMSjJKNDZ2WUNtcm9BR0JJbVdGUlFJZnJYOENnWUJMSlhYWE4xZmN1T2VmZzJuMWhMaXMKM2RPRXlJY2NnaHYzNGZIaE5GZTRnN1NpNnptd2wyVU1FR1RUaENnb2xqNWZDZTI4TXdLd1hBNzZWUXZ0QkpxLwpBZHdxeFdmT0QrMU1VVitKcjZvdjdGbVFVUkV1Wk1OSm1kaWpnTFhJVVNZOWlBdlJjMDloUmliNngyU0FVMmx5ClUxWnhFUEpwZ0RSZ0UwTHo4aHJ2RFFLQmdRQ0FZN2pTOVMwQjI4bnFabHoyaWZXMUtFdldNNURXSEE5a3FGY2kKb3labUxxQzYwbmpUMkxUbUk5K3RqTitmZUdOeHlkb0lRaDBPUE1ja0hZVUl5SHFLWEZpVmd3V3g0MFF2TmYwWgo2NFNoNDk3aVU0MUJLRnMwRFRzU1ZDTExRbFFlZlV5V2JkUFp0U29ScmNFNFpqY1lxUnFsSHE2OFQ1RStEUTVKCmhValNzd0tCZ0h2OU1ZMWM0MWM3Z1ZUSHllZGlyTnRLQVRmdW92RmV2U0RodHBIWFhoVlZjSWF6KytVMXduQ1AKV3dGRzBmZkl3dDdqeEJnMGRSMkh2UzJPOStHSFMwbFRFWnZNUG0wVUpZMHdWS0FBejNOWTdmQkxPekpTRTFQQQpKbnViZjBDUlZSSEsrMkFVV3ZIdHhTKzg3S3hidEFSWWl6UGJsQm0rNW1mTWc4cUZyYWFOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c281fa3075d86b905861397b6a92141d9817fa780cd26dde3bd0287c3e2bd76a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
