# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow port-distribution http icmp
    httpV2:exemplars=true;labelsContext=source_ip\,source_namespace\,source_workload\,destination_ip\,destination_namespace\,destination_workload\,traffic_direction
    policy:sourceContext=app|workload-name|pod|reserved-identity;destinationContext=app|workload-name|pod|dns|reserved-identity;labelsContext=source_namespace,destination_namespace
    httpV2:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
    kafka:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY3JXeW1nL0RoeTNDbnF0YnRCVnl2ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBOakU1V2hjTk1qWXdOREU1TWpJMApOakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHNJVkxEdkpiSmtKRkwrNkszUFdJV2ZOc2xjUU5oWHZGM2hzVW9aNmx3ei93UVVwaDIKTitiRHcrb1RXQVRkRmw0bklmMXN2c0V2VjRRcWYzRElySjd5WXBJazJLaDhsNmRkQUNNRjI1Zkx3bHBNY2hMcwpXK2tIUE9NREZaV3Y3Y2FxTVJiT3JjOTdZUUlPcXZpY0lGd3AvSkZHeHppbFczWWd3SkxBZEVCZ1lZREpjQmpBCkpDWTdxdVpwVmhHc011ZGltU3dmUG9YOFhneVdVUU1OcEl4emk1dHZKdkdjYUZrZkZTL09UT1ZNWm1YS0lreUIKUG93cnd3akdZaHlzWEhTQktUSzcvUDAvSmxxTnQyb29GRmVKaWFEK2VFc21oSUtGMVh3UXNWUjNOUXoySGFWNwpjUlNPNHM4ZjgyUE1pTG1oSUNKdHZ0eVA5QWc1RUphQ3VTQXJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVa0pCbDhPL1l3T1V1TFpEVDVaMTlTUTNEZ1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGSWpyQ0NkSGMvV0xQODBlcjdYL2dJamcySWY0cHZKQnJJWjJRU2ZlY1NIdUoySnp6ZldtRmhvCnpUdlNQTmZlcndsR25UeERPc2xNdXNhK3NmanI5ZHVkMGM4ZGFERk84MTFOOTM0eDBWY2Voanp1LzV1UXBUN2IKbGxoTXRyZjRkY0gwU2tBSWIzM3RUWEYvZDBvMkJYdW1HV0hwUEFESHNRWHF1MzhndzcrN1RHam5hVDRyMEtnbApNcXVaODgvU3d5bzZxRWlhcDE1ZE0weUJEN0Y0N01IR25tTGZoOHNnMWlLVVZoYWQxS0tEcHR4UndTQm8zQXpPCnlYUStpZzlOUGFqMjcwcTkwVkdBSnhDbTdvYUM1RzJJM01qbXdoVHN1RDgwWktBTFdDU2ltMnNBRHBYdHg1UG0KeGZ0aU5McjUyTTlxdWJ4a29yRUUvUlA1UVBFTDBaVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN0NGU3c3eVd5WkNSUy91aXR6MWlGbnpiSlhFRFlWN3hkNGJGS0dlcGNNLzhFRktZCmRqZm13OFBxRTFnRTNSWmVKeUg5Ykw3QkwxZUVLbjl3eUt5ZThtS1NKTmlvZkplblhRQWpCZHVYeThKYVRISVMKN0Z2cEJ6empBeFdWciszR3FqRVd6cTNQZTJFQ0RxcjRuQ0JjS2Z5UlJzYzRwVnQySU1DU3dIUkFZR0dBeVhBWQp3Q1FtTzZybWFWWVJyRExuWXBrc0h6NkYvRjRNbGxFRERhU01jNHViYnlieG5HaFpIeFV2emt6bFRHWmx5aUpNCmdUNk1LOE1JeG1JY3JGeDBnU2t5dS96OVB5WmFqYmRxS0JSWGlZbWcvbmhMSm9TQ2hkVjhFTEZVZHpVTTloMmwKZTNFVWp1TFBIL05qeklpNW9TQWliYjdjai9RSU9SQ1dncmtnS3dJREFRQUJBb0lCQVFEZ3hSZXptdUV1SFo4eApaT2NPNWk5b21KRkNvc0ZFL3N0N3E1NGhTQXZTaHlpNW9PWGdJblpZQXpYZUUvc05PUzJHc3FRNXo1cTFKZWw1ClNyWmhUM0E5NmZhVGZHbGxzRFp3SUtFMkFrSU1nNFRSSUFWRFdIb0ptYnUrUTkycENmNENJNWhDUk5FcjhMdTAKbXFyc2N5RklGbE56dkUvL2w0QnF6T1RrcmNSWitLSHhpTG9tRmhCR242dVdnQ1NJQk1oMTNqUzVYYklzaVNxNwpFL0VES3JiaFNOdGdwTTJXUmVzRmcvVWMyTGtLcUczZkxjZDVYeEk1T0FRdXVNNklLeW9ScTMrYldWZ3ZLWG1mClJoL2xUUTFPQ095cmhhdTIrMkc4UlArUHVTTHBZQVpjVUdNRlZZYWtZcXZvMXlPTnNibzBoQis0SmhaWThCQUcKRnJ4c3hJb0JBb0dCQU8xb2VhRHNIRmFudmJpYWtucU51Y25qS0ZTYWVSWGUxdlFsdEhVNDBCWHJmVTNlK01xbwpvMFVoR2lwcXlET0owd2lKM2RvNWVkR3VMdm9IaXJVemFiSUxPV1BUV2ZlYjZzdnpYL2ZRM0pobXN5VlE2QzRaCjhkalhWMUQ5QWJLbFJDckMrR1ZtVzNSRWZJZk52UHB3M25hcXAySlRPbjJ0Wlo3bjFndnUyWmV4QW9HQkFQNmYKT25FU0FycWxoZVBhQWxCZlBUdTQ3Z0lJcXY4Q3NWbHNld1RYQTZFNXVpU3ZYZlZWeUZzTmV1RUMwQzAvcGRoRApQV1RLaURYREVXaThHSjBjWllVM0E0QVhXVFZGTkNyVkxBemFON3htQzhEYzlWUUV1d0d5aVRkRkZ6cTZHRmhWClUxaEpZUFBFU2JkYUZEZjJxV0FucUFHMkNXWk83bDNOUzFiaitNaWJBb0dBZUF6QWxITlEwVEQ1YXdRZTFnSWMKMU00ZGNzcTZPQ2o3SVhKL2tsY3NRaWxXcjYzMHVPWVZ5YnMzZEFPVFFSeU1ybUNvNHRUMW1PWXZzeGRsT01QSwp5dEdLTDhTTVZmMXQrYndUNTBpaWhCNUtzSy84K0hMK0xOeVh0c2g1dDFDQzYreXpsdkx2aEJldHNTNkVSVkFWCjdvUFZLSTlWb0greVIyeU1mSFJIYThFQ2dZQnV1U2s5MERvMWxoTWlJVVNPVk13WTgzTTBtVFphekgzNHlBNjYKN1JGY0EvRnBVSVZJVVhSZCsvK3FaNEhGbTM3d0MxVmdSaDV6V285d2Z4TXBCeGN5bGRqRTArSnNJdHJyb1dXVgpkVE4xanQ2ZmtMWnlRZGhjaFpuYjJnU2UraHZxRmJpM2xMay9aK1V5Z1U1M2c2RGwrbmk1dmNKYXBncEw2aUZQCitMVFA3d0tCZ0hvTEdWdmdoN2lNM2ZNbXBNRU95YkZ5cVpqUlZ4V24vOVBPSTUvTi9FS3lZeS9ZY2tjYmF4OU0KZjRIMHhwazlMWUlybythMW80UmRnTXkzWjU2bGJWb0htbmJibFRtblE2VDNJK0w5OGZZWU53dXpDZ1VMUEJTagpJMEltd2lubDcyKzU3ZldVU3VXUzdEMlBVMy9xRnc2dW44ZjYwbTFKRmRjblhuV2N5OHhjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY3JXeW1nL0RoeTNDbnF0YnRCVnl2ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBOakU1V2hjTk1qWXdOREU1TWpJMApOakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHNJVkxEdkpiSmtKRkwrNkszUFdJV2ZOc2xjUU5oWHZGM2hzVW9aNmx3ei93UVVwaDIKTitiRHcrb1RXQVRkRmw0bklmMXN2c0V2VjRRcWYzRElySjd5WXBJazJLaDhsNmRkQUNNRjI1Zkx3bHBNY2hMcwpXK2tIUE9NREZaV3Y3Y2FxTVJiT3JjOTdZUUlPcXZpY0lGd3AvSkZHeHppbFczWWd3SkxBZEVCZ1lZREpjQmpBCkpDWTdxdVpwVmhHc011ZGltU3dmUG9YOFhneVdVUU1OcEl4emk1dHZKdkdjYUZrZkZTL09UT1ZNWm1YS0lreUIKUG93cnd3akdZaHlzWEhTQktUSzcvUDAvSmxxTnQyb29GRmVKaWFEK2VFc21oSUtGMVh3UXNWUjNOUXoySGFWNwpjUlNPNHM4ZjgyUE1pTG1oSUNKdHZ0eVA5QWc1RUphQ3VTQXJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVa0pCbDhPL1l3T1V1TFpEVDVaMTlTUTNEZ1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGSWpyQ0NkSGMvV0xQODBlcjdYL2dJamcySWY0cHZKQnJJWjJRU2ZlY1NIdUoySnp6ZldtRmhvCnpUdlNQTmZlcndsR25UeERPc2xNdXNhK3NmanI5ZHVkMGM4ZGFERk84MTFOOTM0eDBWY2Voanp1LzV1UXBUN2IKbGxoTXRyZjRkY0gwU2tBSWIzM3RUWEYvZDBvMkJYdW1HV0hwUEFESHNRWHF1MzhndzcrN1RHam5hVDRyMEtnbApNcXVaODgvU3d5bzZxRWlhcDE1ZE0weUJEN0Y0N01IR25tTGZoOHNnMWlLVVZoYWQxS0tEcHR4UndTQm8zQXpPCnlYUStpZzlOUGFqMjcwcTkwVkdBSnhDbTdvYUM1RzJJM01qbXdoVHN1RDgwWktBTFdDU2ltMnNBRHBYdHg1UG0KeGZ0aU5McjUyTTlxdWJ4a29yRUUvUlA1UVBFTDBaVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN0NGU3c3eVd5WkNSUy91aXR6MWlGbnpiSlhFRFlWN3hkNGJGS0dlcGNNLzhFRktZCmRqZm13OFBxRTFnRTNSWmVKeUg5Ykw3QkwxZUVLbjl3eUt5ZThtS1NKTmlvZkplblhRQWpCZHVYeThKYVRISVMKN0Z2cEJ6empBeFdWciszR3FqRVd6cTNQZTJFQ0RxcjRuQ0JjS2Z5UlJzYzRwVnQySU1DU3dIUkFZR0dBeVhBWQp3Q1FtTzZybWFWWVJyRExuWXBrc0h6NkYvRjRNbGxFRERhU01jNHViYnlieG5HaFpIeFV2emt6bFRHWmx5aUpNCmdUNk1LOE1JeG1JY3JGeDBnU2t5dS96OVB5WmFqYmRxS0JSWGlZbWcvbmhMSm9TQ2hkVjhFTEZVZHpVTTloMmwKZTNFVWp1TFBIL05qeklpNW9TQWliYjdjai9RSU9SQ1dncmtnS3dJREFRQUJBb0lCQVFEZ3hSZXptdUV1SFo4eApaT2NPNWk5b21KRkNvc0ZFL3N0N3E1NGhTQXZTaHlpNW9PWGdJblpZQXpYZUUvc05PUzJHc3FRNXo1cTFKZWw1ClNyWmhUM0E5NmZhVGZHbGxzRFp3SUtFMkFrSU1nNFRSSUFWRFdIb0ptYnUrUTkycENmNENJNWhDUk5FcjhMdTAKbXFyc2N5RklGbE56dkUvL2w0QnF6T1RrcmNSWitLSHhpTG9tRmhCR242dVdnQ1NJQk1oMTNqUzVYYklzaVNxNwpFL0VES3JiaFNOdGdwTTJXUmVzRmcvVWMyTGtLcUczZkxjZDVYeEk1T0FRdXVNNklLeW9ScTMrYldWZ3ZLWG1mClJoL2xUUTFPQ095cmhhdTIrMkc4UlArUHVTTHBZQVpjVUdNRlZZYWtZcXZvMXlPTnNibzBoQis0SmhaWThCQUcKRnJ4c3hJb0JBb0dCQU8xb2VhRHNIRmFudmJpYWtucU51Y25qS0ZTYWVSWGUxdlFsdEhVNDBCWHJmVTNlK01xbwpvMFVoR2lwcXlET0owd2lKM2RvNWVkR3VMdm9IaXJVemFiSUxPV1BUV2ZlYjZzdnpYL2ZRM0pobXN5VlE2QzRaCjhkalhWMUQ5QWJLbFJDckMrR1ZtVzNSRWZJZk52UHB3M25hcXAySlRPbjJ0Wlo3bjFndnUyWmV4QW9HQkFQNmYKT25FU0FycWxoZVBhQWxCZlBUdTQ3Z0lJcXY4Q3NWbHNld1RYQTZFNXVpU3ZYZlZWeUZzTmV1RUMwQzAvcGRoRApQV1RLaURYREVXaThHSjBjWllVM0E0QVhXVFZGTkNyVkxBemFON3htQzhEYzlWUUV1d0d5aVRkRkZ6cTZHRmhWClUxaEpZUFBFU2JkYUZEZjJxV0FucUFHMkNXWk83bDNOUzFiaitNaWJBb0dBZUF6QWxITlEwVEQ1YXdRZTFnSWMKMU00ZGNzcTZPQ2o3SVhKL2tsY3NRaWxXcjYzMHVPWVZ5YnMzZEFPVFFSeU1ybUNvNHRUMW1PWXZzeGRsT01QSwp5dEdLTDhTTVZmMXQrYndUNTBpaWhCNUtzSy84K0hMK0xOeVh0c2g1dDFDQzYreXpsdkx2aEJldHNTNkVSVkFWCjdvUFZLSTlWb0greVIyeU1mSFJIYThFQ2dZQnV1U2s5MERvMWxoTWlJVVNPVk13WTgzTTBtVFphekgzNHlBNjYKN1JGY0EvRnBVSVZJVVhSZCsvK3FaNEhGbTM3d0MxVmdSaDV6V285d2Z4TXBCeGN5bGRqRTArSnNJdHJyb1dXVgpkVE4xanQ2ZmtMWnlRZGhjaFpuYjJnU2UraHZxRmJpM2xMay9aK1V5Z1U1M2c2RGwrbmk1dmNKYXBncEw2aUZQCitMVFA3d0tCZ0hvTEdWdmdoN2lNM2ZNbXBNRU95YkZ5cVpqUlZ4V24vOVBPSTUvTi9FS3lZeS9ZY2tjYmF4OU0KZjRIMHhwazlMWUlybythMW80UmRnTXkzWjU2bGJWb0htbmJibFRtblE2VDNJK0w5OGZZWU53dXpDZ1VMUEJTagpJMEltd2lubDcyKzU3ZldVU3VXUzdEMlBVMy9xRnc2dW44ZjYwbTFKRmRjblhuV2N5OHhjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY3JXeW1nL0RoeTNDbnF0YnRCVnl2ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBOakU1V2hjTk1qWXdOREU1TWpJMApOakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHNJVkxEdkpiSmtKRkwrNkszUFdJV2ZOc2xjUU5oWHZGM2hzVW9aNmx3ei93UVVwaDIKTitiRHcrb1RXQVRkRmw0bklmMXN2c0V2VjRRcWYzRElySjd5WXBJazJLaDhsNmRkQUNNRjI1Zkx3bHBNY2hMcwpXK2tIUE9NREZaV3Y3Y2FxTVJiT3JjOTdZUUlPcXZpY0lGd3AvSkZHeHppbFczWWd3SkxBZEVCZ1lZREpjQmpBCkpDWTdxdVpwVmhHc011ZGltU3dmUG9YOFhneVdVUU1OcEl4emk1dHZKdkdjYUZrZkZTL09UT1ZNWm1YS0lreUIKUG93cnd3akdZaHlzWEhTQktUSzcvUDAvSmxxTnQyb29GRmVKaWFEK2VFc21oSUtGMVh3UXNWUjNOUXoySGFWNwpjUlNPNHM4ZjgyUE1pTG1oSUNKdHZ0eVA5QWc1RUphQ3VTQXJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVa0pCbDhPL1l3T1V1TFpEVDVaMTlTUTNEZ1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGSWpyQ0NkSGMvV0xQODBlcjdYL2dJamcySWY0cHZKQnJJWjJRU2ZlY1NIdUoySnp6ZldtRmhvCnpUdlNQTmZlcndsR25UeERPc2xNdXNhK3NmanI5ZHVkMGM4ZGFERk84MTFOOTM0eDBWY2Voanp1LzV1UXBUN2IKbGxoTXRyZjRkY0gwU2tBSWIzM3RUWEYvZDBvMkJYdW1HV0hwUEFESHNRWHF1MzhndzcrN1RHam5hVDRyMEtnbApNcXVaODgvU3d5bzZxRWlhcDE1ZE0weUJEN0Y0N01IR25tTGZoOHNnMWlLVVZoYWQxS0tEcHR4UndTQm8zQXpPCnlYUStpZzlOUGFqMjcwcTkwVkdBSnhDbTdvYUM1RzJJM01qbXdoVHN1RDgwWktBTFdDU2ltMnNBRHBYdHg1UG0KeGZ0aU5McjUyTTlxdWJ4a29yRUUvUlA1UVBFTDBaVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5pNXgyR1F0dnhmcU1WMHhWZ1ZLOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1ESXlORFl5TUZvWERUSTJNRFF4T1RJeQpORFl5TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXd3bDJpY0FXYnFCQUd0b1BuRU5kSVZoTTJ6UlgKeFdYNXVxV21nd0EvUkNtVHIwSWFxL3FHWmpZK1hrODZTa1MzWmNYV21VK0tVNHBOVFNkZWRYWWwzOG5yOGd1OApaa1JRUDJFM2djbFc1b0lZa2plZ01IeUxOQzcySi9BeEg3M1dXRzRaWGNGNnVSRlFXVWxndHRzVVFIcXQwdWRNClNaeTc2c2RVY0NSM3pEdnZneE5ZOWRkVERKbDNkSlVnc3FJanJ2S0N3b2FCRnNXS3pFeHpha25maER0NzhjQ3IKVHh2V0Jqc0FkS1BDZitFb2M0MzJQbXovMzJUTHNVN0llcHFpTEpTSENDWHpkVFFnTkNNNEtXQmpIMFpyUmFDcAo0ekozWEVlalpkQVVSd0wzTjdKMVIrN3dueW5iUVNKeHBGL1dpdEYxK3pTbGpEdk9zZ3lYUHdCdWlRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlNRa0dYdzc5akE1UzR0a05QbG5YMQpKRGNPQlRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTVpTNE5BTzJkVURlRTdZVWZJK21WTTBiZzgzR1ZYTll1bXlVWFA5RStXUXNnSm4KNUo0bDhmVmthOEh2K0krZE1oTGNxYjFlb3JOVUY5bEZNcFM2YlNSY0lIL3VxVDJOa0NhUzg3Q0YySXJETGlUdwpXN09YRkdFZEVYTG4zWTNGT1BzOGgxNCtOaGcxOVY4SGxqeXYrbTBPQ3RzdEZhbGw1Sm9UMEpBQnN3YkpBcllQCnU0eCtBdXlscWxHMDNmOTVlbHN3KzQ0T3dMTUdHbnVxR3hMQjhzRVlYN0ZTdFFFZUMvaEplY3pjTGZ5N3BEanUKSFNQdU02YVgyc2xla085Zm9IN0xSR05NNUhPVTd5TDlvUFhPamtTS2N6bGhJaERjRThMdWlra1lrOXVDeUd5dApLNW1zRDI3T0VTcGU2dHlkMFplajlzSEdYS0kzaW9GK0R6L1RhU0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3dsMmljQVdicUJBR3RvUG5FTmRJVmhNMnpSWHhXWDV1cVdtZ3dBL1JDbVRyMElhCnEvcUdaalkrWGs4NlNrUzNaY1hXbVUrS1U0cE5UU2RlZFhZbDM4bnI4Z3U4WmtSUVAyRTNnY2xXNW9JWWtqZWcKTUh5TE5DNzJKL0F4SDczV1dHNFpYY0Y2dVJGUVdVbGd0dHNVUUhxdDB1ZE1TWnk3NnNkVWNDUjN6RHZ2Z3hOWQo5ZGRUREpsM2RKVWdzcUlqcnZLQ3dvYUJGc1dLekV4emFrbmZoRHQ3OGNDclR4dldCanNBZEtQQ2YrRW9jNDMyClBtei8zMlRMc1U3SWVwcWlMSlNIQ0NYemRUUWdOQ000S1dCakgwWnJSYUNwNHpKM1hFZWpaZEFVUndMM043SjEKUis3d255bmJRU0p4cEYvV2l0RjErelNsakR2T3NneVhQd0J1aVFJREFRQUJBb0lCQVFDWS9VTk9xcTd0K0NaUQo2ZHgwNXlLV2xYMDBOY3JqdlNvM2p0a2V5WUxYSlFZRDVBYW9BTXlNUU9DTGVmcHZaNWUwN1l0NGx6d2FhOUpYClF4cUZhVGdzWTJnQlpkTlRKU01ObEdUR0dmbGd0NHd1cGhPeDlQLzgzeG1ZR29GdU5LdCtrbDZ6ZktHWHFrMHMKdkxKd3ZVa1ZpeVh1MmlDdFhaVEtoYkZtaGpTeXJyR2dyZUlGSnhHWHlhbmUxYVpOMzM0ajJ6TE9KU0tJcGxuYwo3QXR4Uk1nSm5EMTB3cnhWMytLTmxXTUx4cDZJL0lESWp5VXA2bU9ERC95VHEwZFIyV2FSSTZVOEhWM2MzajAzCkN5dDNzd2RNT2lORWkxMnFBQ0hwbXZuQ0dJRkRBNlBHbzlCRGRFeFlEYndmNW8xZUpwamR2VEpMOE51aTV5L2IKQzNJZ3ViZEJBb0dCQVBDQmhjQmt4T1lkcmNyczgydDQ1ODVFbUpLQ0l3WlJmcU95WnNuRUNPSGdtUnBxK1ZXdQpYbGNMOW9qK0YzUGhoMmtGSjFSQzZTYks5VEhZSTFvd25lY1Y2N2R3MUdOOE82cTN2RUk3NzMyTUMwbXB3b3RTClJRUngxbHdPeTFzKzhiakVZeEc4TWN4eHVJekZzU295Q3YrTmFUQitmeFVzWXg5OHFUcUxIVUZMQW9HQkFNK2EKRGxibDlpKy9ZS0ZwbUpsbW91MjlhRDgrYjlOMkhUZ3lBbmEvNkpWWjFTM2tLSWk4dWJXUmlJSFFzWXRWZUxGMgpjdFdsdExQTjAwY2dTQTgvM1dCSTRtS1lWMmlrSW5wUjVKa0N1TmwzMEsrdHBHdzVTMmhabTBCWHpjOGZ5VmVUCnMxa20ySTBNdWFIQmR2TWdLbFplNXFOTTQwS3IxL1FlRVAycSsvNzdBb0dBRW1IRDZFV0xhdzhmcGwvZjV2bngKdGFrMmhCUWdPeTVsWUh1Vk1aeWpGU2lHYXlkNzhSbUhxbDJHdFVlK1lTUCtwbjgzVjFCWjQ1WWxrVzYwblFNVQpQb0pGWnRyZjBNN0EvTFpZVkRPaWhWVDcwK0IrdHdsTnJ4NUlSUGI0Z2Z2WW04ZWV6czgwZXl6Qjd6aDQ1d0cyCkozd1dheGR2L1IxTVlpNnovSDUvZU9zQ2dZQllGTWNNdTVrT2ZTWmtsY2IzSHdMMTE2MEpXRlpkNC9sVnhISWoKTEIxa2NLN3dQNk9yRUZmQzM3S0pVYUJpdTZydnNJL2NjZWdQZWI2d3FOT3FGTEM2ajNIdDN6RUc1c3p5RlJqbQppcThmSmFUWFJOZEVTN0xnM1ZQdm90RmhsZHo1V1dONDZmQnJPQUR5em9ESGV0Zzd1UndtSVJNelVISFowMy9tCkFNdldUUUtCZ0E3QVV6VjZOaktjdkhmYko1MU5yL1U0dWFLZmt5Y3NCUmZNM0NicDd3SDFDM1BaeExjZ1BnYUsKazlWb2t3U0FNRUczek91ZVExamFPQ01IVFZpNnJacnR3dlRFeTlUVE1SZCt1aXdSeXNzRzIxcS9DM3ppdjZqbwpjSkg3WnNJWThWL0I0b0RnS2tLWmVpZjQvYjB2K2x2RGRSeUFBY1JoVHNIUy92bE1Xa3o0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY3JXeW1nL0RoeTNDbnF0YnRCVnl2ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBOakU1V2hjTk1qWXdOREU1TWpJMApOakU1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHNJVkxEdkpiSmtKRkwrNkszUFdJV2ZOc2xjUU5oWHZGM2hzVW9aNmx3ei93UVVwaDIKTitiRHcrb1RXQVRkRmw0bklmMXN2c0V2VjRRcWYzRElySjd5WXBJazJLaDhsNmRkQUNNRjI1Zkx3bHBNY2hMcwpXK2tIUE9NREZaV3Y3Y2FxTVJiT3JjOTdZUUlPcXZpY0lGd3AvSkZHeHppbFczWWd3SkxBZEVCZ1lZREpjQmpBCkpDWTdxdVpwVmhHc011ZGltU3dmUG9YOFhneVdVUU1OcEl4emk1dHZKdkdjYUZrZkZTL09UT1ZNWm1YS0lreUIKUG93cnd3akdZaHlzWEhTQktUSzcvUDAvSmxxTnQyb29GRmVKaWFEK2VFc21oSUtGMVh3UXNWUjNOUXoySGFWNwpjUlNPNHM4ZjgyUE1pTG1oSUNKdHZ0eVA5QWc1RUphQ3VTQXJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVa0pCbDhPL1l3T1V1TFpEVDVaMTlTUTNEZ1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGSWpyQ0NkSGMvV0xQODBlcjdYL2dJamcySWY0cHZKQnJJWjJRU2ZlY1NIdUoySnp6ZldtRmhvCnpUdlNQTmZlcndsR25UeERPc2xNdXNhK3NmanI5ZHVkMGM4ZGFERk84MTFOOTM0eDBWY2Voanp1LzV1UXBUN2IKbGxoTXRyZjRkY0gwU2tBSWIzM3RUWEYvZDBvMkJYdW1HV0hwUEFESHNRWHF1MzhndzcrN1RHam5hVDRyMEtnbApNcXVaODgvU3d5bzZxRWlhcDE1ZE0weUJEN0Y0N01IR25tTGZoOHNnMWlLVVZoYWQxS0tEcHR4UndTQm8zQXpPCnlYUStpZzlOUGFqMjcwcTkwVkdBSnhDbTdvYUM1RzJJM01qbXdoVHN1RDgwWktBTFdDU2ltMnNBRHBYdHg1UG0KeGZ0aU5McjUyTTlxdWJ4a29yRUUvUlA1UVBFTDBaVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRTzV1eVl1VlJUdm9yUWdMQWg4Q04xVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJd01qSTBOakl3V2hjTk1qWXdOREU1TWpJMApOakl3V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE4YlpySXJFVUdVSkEKQ0lXOVdkd0pRYURnL0ZVNEVhQWFSbXRSdENsdUJ0cCtWL0xPSEZCWlVycmVhSjg4bTJRdVRKeHBYaFA5UjZISQpaa1QxV0YxeVhwK3B5bW9tUHh3SW1xRVZ2UzR6clFzaXhvWU10K2R6dUdNeEV1SXNzWXJncGdvOUZWU09tQ3E2CmxTcTg2eUlhdHNTWFNmQ2VYemZvOGJDNG5OanNtVGVmRWhWS1JuMEJHQ1BvaGEzR3BWRTJxYUEwbUlQZS9udGMKa1hPRTh1MkFEWERKSzVTWVAyaGMrYVFpQ3lNUlRaekVTM0M0ZGtsZzRHaXFyT0hhN1dkTXh4R2FscDZnYUM2QgpjV0l5azI0Skdnci9YQU82UTJpWjNhRzQrbEk2L1RPSEY2Q3dIbHVSa0tGNk9QU2RKSmc1aGJJL1ROdDNpR2VqClBPcjZkbzNQTlFJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJTUWtHWAp3NzlqQTVTNHRrTlBsblgxSkRjT0JUQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRREZ1ZFh1OXRhT3VDQngKK3Z1UzNQUHBvd2tuS1E5emJncnRVRzRPNXRiM3FIWWxwVkxnTG9rYWJOVGJWcmRLZGs3eW1uRFBKRUJZQWZwNAprUzBNVGErQ09zbXpWUmw2NHR5RG4wcGNlaTgzZ0tyM3hxTUpQN1RMV1VoMW9xNWRnWmZLNXBhbEpsZ3l3aWlrCnBpazRXMWszRkJmSFk2ZFQ0KzNVSEdwU25hTjJGZFhUYXAzMmlHdXJGak5MaGxVbmNGYVJUUUxXbk9uNkJudTQKVVJNS3FKK0o2VmhVLzNGL1ZyeFhRaUk4bHZ6NGRoVjlhWG5VQ29Db1gvUjk2WEtpaHRGMy9EbHVwN2xNc0ZKZQpoamlzRk5GeGlad2ZjbkhoOGFTTDRpY1l3OTFsTDE0SVZoT04wbG43TUMwaTE4R1hsQWxWOTdsajd1TzFDQWhlCm5XWUVrUTFyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOGJacklyRVVHVUpBQ0lXOVdkd0pRYURnL0ZVNEVhQWFSbXRSdENsdUJ0cCtWL0xPCkhGQlpVcnJlYUo4OG0yUXVUSnhwWGhQOVI2SElaa1QxV0YxeVhwK3B5bW9tUHh3SW1xRVZ2UzR6clFzaXhvWU0KdCtkenVHTXhFdUlzc1lyZ3BnbzlGVlNPbUNxNmxTcTg2eUlhdHNTWFNmQ2VYemZvOGJDNG5OanNtVGVmRWhWSwpSbjBCR0NQb2hhM0dwVkUycWFBMG1JUGUvbnRja1hPRTh1MkFEWERKSzVTWVAyaGMrYVFpQ3lNUlRaekVTM0M0CmRrbGc0R2lxck9IYTdXZE14eEdhbHA2Z2FDNkJjV0l5azI0Skdnci9YQU82UTJpWjNhRzQrbEk2L1RPSEY2Q3cKSGx1UmtLRjZPUFNkSkpnNWhiSS9UTnQzaUdlalBPcjZkbzNQTlFJREFRQUJBb0lCQVFEcHc3aDlockNmZFJrawpwT05wd29vWk5KUWl0ZkJSNjNzOTI1RGJJcTVNWm9lR1cwYkd6MVp6MGxKQzhLM1d3dDZjTFRFaVVVYkZQa3ZuCnpJMVRkcHlqc3RxczdsZ3E5TnZGWUVEOEEzRHF6RGhIczJFZGd2VEJ3UHkyL0pLbzZsMDFkL1YzYVoyMndLeE8KazFTK091K0hEejRadm1JTVNMQTYvdVNzbkliRjdjbjZJa3JSYTZ2SjJUV09PemxHdDgvWjhPK0NVTUI2RzVSVgprM0xsUElUVFczYzRlMDZZQWZOQjlvalM2eUlNZkdlem5FSk1VbUpyRGpKOGtlNHJKa0pQc0diMGhBMFV4a3B5Cmc2ODkwdmxoU1o5WUs5VEJkUFBGL3l0U1haZG94TXBTMlNNUi9vSGdXMzU0NUVhbFlMd1BPc1B6U1pyOFZiTzkKbWg3L2tyTEJBb0dCQVBkaU5MSnN5WkYvSVNzMnhqZ05wcklWdjd6QUdWK3ZtUWE0K3hQZUJpOHpURERZTXVqMgo5WHpHVTI5QXd3ODhNdDl6UDVSZXZWcU8yNjV5WEx5VGFHbnlvc0RkUGNUbHlxRDhQdlVaWElkdXk0dGc4V1hyCmlubFk3MWMycjFwYTd1UVVjWGQvR1RZTUk4TjYySzJaUDBwMTJxbUFnMlB4Tm04MEtLOE9GSGc1QW9HQkFQb2gKcFpacjk2Ukd1M0lJRk41V3R1eGptWGtKTG80by9XOXNpSGR4d1NlMENhOVM4WGdFSFYxeE1ZMzFBTGxnSi93WAp5a3pnSHZ3Y041NW9WalRrbElSZnVpck1vZHJObjRVVGNSYStxbm1NcXllT08xNjhBd25kSVllbTVCbWxucU14CkRiUzBLS0Vyc1M3N2JSMEtnWGkyRVdVSDlpVlNjaFBRV2MrdHRqYmRBb0dBQVRVNWpLVjdWbnFJYnUyVmlqQ0cKMzllN1YvQ1lMeDlzWDl3SFhkRjN0a05KMi9NeVRIRG9RZk8xOUpVY1hyYXNpT3JISkxKUnVsOTRNeUhiMGcvbQpNcDQ4clRSbldNN0dib0xNeStXVHpoVjhhUEhRTys4cWZlMHhQZnZHWDJxU1FBclpndnZiNDZlcmhRalVoZ1I1CmlxT0lyY3N5MlFvVWVmYUhQRk9WUmdFQ2dZQkNkNFJ2OTFyRURZT3I1cGZkQ1Qvc2l2N3lXYzFFTzRJMUJLc3kKeWtpZ2kwZnpqZC9hbTRWT0dsRW52czRsZEhiTGwyckxpTmJTK1pDU0NIbTM3bkhFeDBkS0xqeG9Uekd2aEI0TwpCRFo2dkRXUytrbXVmOWx5Mm84WlkvRERHKzZPd084NmNKRkhXcnZubHlwRWlGRWxTWVJQeTVET0ZCMTZSR2hKCk5vandCUUtCZ1FDbzdzSnBlTVZlTGlaYjZmc2NxNXc2d29XUDd5RTEwRzE0YmYwRFR5SDJSS2JoUXh2UTN4ODkKUVBhaWlsSTRrTE14UnFzTjlwQm1IUHF4bXJ5eVZ2cnNuWFVLamZlUk9HSDl4cDROeFBFOTF3ZFFDY1hkcnZJRwpuY1B1Y0hEM3NBV3MyVnBOVVdCL3kzQi90QjJsbFRobVJrZjNaUGE4NzIyc2lWcTdSUHFZMEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c35573df7bc1122971dec322ce57085e6cbed25914e800a22516456f2163c3fa
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
