# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrole_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrole_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrole_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrolebinding_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrolebinding_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/rbac.authorization.k8s.io/clusterrolebinding_v1.json
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: null
  bpf-nat-global-max: ""
  bpf-neigh-global-max: ""
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  conntrack-gc-interval: ""
  crd-wait-timeout: ""
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: null
  enable-bpf-tproxy: null
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-legacy-routing: null
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-change-grace-period: 5s
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  ipv6-native-routing-cidr: null
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  tunnel-port: "0"
  unmanaged-pod-watcher-interval: "15"
  vlan-bpf-bypass: ""
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXhVNnhqTUxMSWdJUnoxMXZlRXY5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01EUXdNakE1V2hjTk1qWXdNekkyTURRdwpNakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dIZm55c1MreHl6ZTcrM1BFSlpsMUVEWE5YUldxaHVLUFV1d3hMbU5UNUFkK3lXMU0KZWpDWG1iaFNLcUo5SmJFYmNvNTBGYlNkaXdpVFBtdDF3Qk54QVpuSHFNckFZd0swUzJsbXdvdkdmYmVzWVo2Wgp6aFg3dTNncjcycGtLdlM3OVk3MThSWmxvUUdCWGtEY2ZDVDg3WEtTbUpuWEZWVkxqWmNvekpBa1Rmd3kwdHJQCkRyd0t0SEhXV1JmOTUrS2NNNDdRVXZlTDJxVmxRL2oraEl6a1FOck1DTHg3TXJJSFNwRlBKaVYvNWJJaHJ6a1QKKzlTRmtFOG5lTEhhcXMxZUtEaTdDQ3FpdVlpYlVPZkFMMEljWjF3Ukh5ZTJlQ0tHZXNrNjhadHNXcjR0cXN4aQpHeWxUZlZFUWdhY1JqZUo1TlBNdnpaVDR1YzFHdGNjUCtvVUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPNEVxcEZycjZRRzBaWmJmeDhhem9SNjd6NFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLRUdtT1MxNDN1WkcyeUw2dk5vV2lCQVptL0dxS20vVlc1ZysvYzVYdzZsblVqdEE1cDdtc1BHCmJnRUlKS0VQS2VGaGhkenFISklJbTBuS05iY0RPT3lWeXlRaExkaXZOc2QwZURoTmJYOEQwY29KNUNYSzBEdHYKTVVJVzBpN1ZCQXlCOUJ1RzZMUTBVRTZDK3FjQzhrWWtETjMrRjRLbVk5N2cyc2cxazcybFlPQkgwY2dIWlB6UApxUCtkZ1FzMTVxUkNFKzhNUTIzVnVIS2k5a2JDb0RxK3Y4ajI5enZZd3JPY2phcFM0TVg2bFlKdS91ek42bDIwCmxObktlblQ1bjZNbmFEZW5WZGY1U0sxRTFraHNnT0F5bHVSQUZhMlozQzN4YXdTemg3bGV6OTFCRVhMZ0JmRm4KYkRINHRpejhSRTR2c0dFemJRUURVNnc2K2dyTVdVdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0IzNThyRXZzY3MzdS90enhDV1pkUkExelYwVnFvYmlqMUxzTVM1alUrUUhmc2x0ClRIb3dsNW00VWlxaWZTV3hHM0tPZEJXMG5Zc0lrejVyZGNBVGNRR1p4NmpLd0dNQ3RFdHBac0tMeG4yM3JHR2UKbWM0Vis3dDRLKzlxWkNyMHUvV085ZkVXWmFFQmdWNUEzSHdrL08xeWtwaVoxeFZWUzQyWEtNeVFKRTM4TXRMYQp6dzY4Q3JSeDFsa1gvZWZpbkRPTzBGTDNpOXFsWlVQNC9vU001RURhekFpOGV6S3lCMHFSVHlZbGYrV3lJYTg1CkUvdlVoWkJQSjNpeDJxck5YaWc0dXdncW9ybUltMURud0M5Q0hHZGNFUjhudG5naWhuckpPdkdiYkZxK0xhck0KWWhzcFUzMVJFSUduRVkzaWVUVHpMODJVK0xuTlJyWEhEL3FGQ1FJREFRQUJBb0lCQUJQS3VwMG9obWlmb3RyUQpUbGs3dEh3d1h5dCtDNEpIZUV5TkVCZ1MwM3pKQW9LZ0ZsVmk0ZlVYaEZ4UGlFVXlLQzRpZUpuWkdwd2QxTS9mClV1by90SytkYzIrNXExZGxpUmRENWt0ekQ0dzE4cDgvdFRncHJkVEZZNkxrVy90M3pGc1hKSUxGSGpRN25OU3kKQiszL1VaVFBCbkl0RGhUYXcrUWl2RnNNYWlKNkpTNkwzejM3WkVjYzI3Q0xTV3pqVnlmRjlwZDlGNThnczZhUQpKNVBPdDhsRzR2TitXUmRLdHd5MDJaY3MyaU03N0IyU3c0cC9CaU9DL3BGNVdldEF0cFFZUXQvd1pOK25nT1d5CmhVMmhSOW1kczBJNVFJWDF2RU9RT2JlSi9yNFhTMnduVVduY0FDZDFybkI5Z3VNZkFWNXRwd1owMWpCMi85MloKa3paU1BSVUNnWUVBd1RnQW9QL3c4UTJsdVhhRlkvOStHdmxqR1VrYUhkNzZrbnNyWDBzRkpEY2F5ZlVMbm5WRApQVkJkY01neWxxZ3NxWGxUcFdjM2FxZklnTUw1WlZtYlZjSThMRk1Ha1ZiNCtoNUVXc1hFMCtZNzNTYk80L0VwCk9XL1U1RnRZKzhaWVV2Qi9BajFkR01aS2JCSjV4ZW1KZWx2cWxIQ1JxTzlNSFoxT0kzMkQ1Mk1DZ1lFQTZWZHoKdVRTeDVGaFVkQ0RoRmh6RUZRcFNqS0NTaGxESmw2OUJnY0RuaHJWVUZDbllBbFV4VC9XcmRQMmFiTStFZ0RZYgo3ZDJNbW5EWFZ6anljUldaTUMrZVhQaDljNTJQemlqejFrZVlYWDhCY1JWM2FZTDZwWnhpTldJcE5oVVpFRjBFCjhiRnV0WnNrazhvUld3aTg0L0lWbHhacUdDS3hFb2UrS1I2cVc2TUNnWUVBZ0VCWkFvVUFmREN2MlN3WG5HbWgKWGV3OVlESkt1SnNpUFlxdUhtR2dkd3B3cUs4VDJFbERxWFlubjgzeTdsZVExYWtuNFhsaXFsUFdYY21OV3oyZwpRc3RidjV3WWx1NWc4enlWNko2dmFHdkJQcWtjMk9aaGs3TnNYMnRXNUVBaXJtTGVHekY2RXhERG8zcWNBOGRoCkxxdkdTR056Kyt0aTNhRmxsVjhoNTdzQ2dZQk1KY0RiSU1vbzFYYUNDelRKTFl3RHZjR2dxTW9JVVJib2pFWFoKWFNWeFBYMTVzd29PQU5VOTNkTWRNNkdRZnN3anR3UzRSRU9kSnRQdlgrTW1ha0Q2aTUrbmdXUVhOY1QzSjBBagpubXVubjBuT0tJNDJmWXJrUHJ1QjVrM0NtM0g1ZUJHaitoNUIzNlk1SUlrM1p3dVZhNndHQ1VlSUp0SVlWUG9HCm16NUc5d0tCZ1FDb3RvSXMvZ1hhWU5seFZ3cVdKSlpGWW5aSFgzNW9QQWRleGtMVGYxSmtrUzZRNXhIWmE3VngKWG5Sc3J6K2VHYk0xUzNnM3BmL3hCNnFiRTlVcUNvVFJsQjA1dlhLQm9YZkxSUkNRc0xtL1lXYlMyYVE3V0ZUUQorVG96djRVa05JaDZHOHVyOXZJZURPeUFmTDI2Ym82SVpqb2IweDh4L0tLWkhZY0QyazRyc3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXhVNnhqTUxMSWdJUnoxMXZlRXY5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01EUXdNakE1V2hjTk1qWXdNekkyTURRdwpNakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dIZm55c1MreHl6ZTcrM1BFSlpsMUVEWE5YUldxaHVLUFV1d3hMbU5UNUFkK3lXMU0KZWpDWG1iaFNLcUo5SmJFYmNvNTBGYlNkaXdpVFBtdDF3Qk54QVpuSHFNckFZd0swUzJsbXdvdkdmYmVzWVo2Wgp6aFg3dTNncjcycGtLdlM3OVk3MThSWmxvUUdCWGtEY2ZDVDg3WEtTbUpuWEZWVkxqWmNvekpBa1Rmd3kwdHJQCkRyd0t0SEhXV1JmOTUrS2NNNDdRVXZlTDJxVmxRL2oraEl6a1FOck1DTHg3TXJJSFNwRlBKaVYvNWJJaHJ6a1QKKzlTRmtFOG5lTEhhcXMxZUtEaTdDQ3FpdVlpYlVPZkFMMEljWjF3Ukh5ZTJlQ0tHZXNrNjhadHNXcjR0cXN4aQpHeWxUZlZFUWdhY1JqZUo1TlBNdnpaVDR1YzFHdGNjUCtvVUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPNEVxcEZycjZRRzBaWmJmeDhhem9SNjd6NFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLRUdtT1MxNDN1WkcyeUw2dk5vV2lCQVptL0dxS20vVlc1ZysvYzVYdzZsblVqdEE1cDdtc1BHCmJnRUlKS0VQS2VGaGhkenFISklJbTBuS05iY0RPT3lWeXlRaExkaXZOc2QwZURoTmJYOEQwY29KNUNYSzBEdHYKTVVJVzBpN1ZCQXlCOUJ1RzZMUTBVRTZDK3FjQzhrWWtETjMrRjRLbVk5N2cyc2cxazcybFlPQkgwY2dIWlB6UApxUCtkZ1FzMTVxUkNFKzhNUTIzVnVIS2k5a2JDb0RxK3Y4ajI5enZZd3JPY2phcFM0TVg2bFlKdS91ek42bDIwCmxObktlblQ1bjZNbmFEZW5WZGY1U0sxRTFraHNnT0F5bHVSQUZhMlozQzN4YXdTemg3bGV6OTFCRVhMZ0JmRm4KYkRINHRpejhSRTR2c0dFemJRUURVNnc2K2dyTVdVdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0IzNThyRXZzY3MzdS90enhDV1pkUkExelYwVnFvYmlqMUxzTVM1alUrUUhmc2x0ClRIb3dsNW00VWlxaWZTV3hHM0tPZEJXMG5Zc0lrejVyZGNBVGNRR1p4NmpLd0dNQ3RFdHBac0tMeG4yM3JHR2UKbWM0Vis3dDRLKzlxWkNyMHUvV085ZkVXWmFFQmdWNUEzSHdrL08xeWtwaVoxeFZWUzQyWEtNeVFKRTM4TXRMYQp6dzY4Q3JSeDFsa1gvZWZpbkRPTzBGTDNpOXFsWlVQNC9vU001RURhekFpOGV6S3lCMHFSVHlZbGYrV3lJYTg1CkUvdlVoWkJQSjNpeDJxck5YaWc0dXdncW9ybUltMURud0M5Q0hHZGNFUjhudG5naWhuckpPdkdiYkZxK0xhck0KWWhzcFUzMVJFSUduRVkzaWVUVHpMODJVK0xuTlJyWEhEL3FGQ1FJREFRQUJBb0lCQUJQS3VwMG9obWlmb3RyUQpUbGs3dEh3d1h5dCtDNEpIZUV5TkVCZ1MwM3pKQW9LZ0ZsVmk0ZlVYaEZ4UGlFVXlLQzRpZUpuWkdwd2QxTS9mClV1by90SytkYzIrNXExZGxpUmRENWt0ekQ0dzE4cDgvdFRncHJkVEZZNkxrVy90M3pGc1hKSUxGSGpRN25OU3kKQiszL1VaVFBCbkl0RGhUYXcrUWl2RnNNYWlKNkpTNkwzejM3WkVjYzI3Q0xTV3pqVnlmRjlwZDlGNThnczZhUQpKNVBPdDhsRzR2TitXUmRLdHd5MDJaY3MyaU03N0IyU3c0cC9CaU9DL3BGNVdldEF0cFFZUXQvd1pOK25nT1d5CmhVMmhSOW1kczBJNVFJWDF2RU9RT2JlSi9yNFhTMnduVVduY0FDZDFybkI5Z3VNZkFWNXRwd1owMWpCMi85MloKa3paU1BSVUNnWUVBd1RnQW9QL3c4UTJsdVhhRlkvOStHdmxqR1VrYUhkNzZrbnNyWDBzRkpEY2F5ZlVMbm5WRApQVkJkY01neWxxZ3NxWGxUcFdjM2FxZklnTUw1WlZtYlZjSThMRk1Ha1ZiNCtoNUVXc1hFMCtZNzNTYk80L0VwCk9XL1U1RnRZKzhaWVV2Qi9BajFkR01aS2JCSjV4ZW1KZWx2cWxIQ1JxTzlNSFoxT0kzMkQ1Mk1DZ1lFQTZWZHoKdVRTeDVGaFVkQ0RoRmh6RUZRcFNqS0NTaGxESmw2OUJnY0RuaHJWVUZDbllBbFV4VC9XcmRQMmFiTStFZ0RZYgo3ZDJNbW5EWFZ6anljUldaTUMrZVhQaDljNTJQemlqejFrZVlYWDhCY1JWM2FZTDZwWnhpTldJcE5oVVpFRjBFCjhiRnV0WnNrazhvUld3aTg0L0lWbHhacUdDS3hFb2UrS1I2cVc2TUNnWUVBZ0VCWkFvVUFmREN2MlN3WG5HbWgKWGV3OVlESkt1SnNpUFlxdUhtR2dkd3B3cUs4VDJFbERxWFlubjgzeTdsZVExYWtuNFhsaXFsUFdYY21OV3oyZwpRc3RidjV3WWx1NWc4enlWNko2dmFHdkJQcWtjMk9aaGs3TnNYMnRXNUVBaXJtTGVHekY2RXhERG8zcWNBOGRoCkxxdkdTR056Kyt0aTNhRmxsVjhoNTdzQ2dZQk1KY0RiSU1vbzFYYUNDelRKTFl3RHZjR2dxTW9JVVJib2pFWFoKWFNWeFBYMTVzd29PQU5VOTNkTWRNNkdRZnN3anR3UzRSRU9kSnRQdlgrTW1ha0Q2aTUrbmdXUVhOY1QzSjBBagpubXVubjBuT0tJNDJmWXJrUHJ1QjVrM0NtM0g1ZUJHaitoNUIzNlk1SUlrM1p3dVZhNndHQ1VlSUp0SVlWUG9HCm16NUc5d0tCZ1FDb3RvSXMvZ1hhWU5seFZ3cVdKSlpGWW5aSFgzNW9QQWRleGtMVGYxSmtrUzZRNXhIWmE3VngKWG5Sc3J6K2VHYk0xUzNnM3BmL3hCNnFiRTlVcUNvVFJsQjA1dlhLQm9YZkxSUkNRc0xtL1lXYlMyYVE3V0ZUUQorVG96djRVa05JaDZHOHVyOXZJZURPeUFmTDI2Ym82SVpqb2IweDh4L0tLWkhZY0QyazRyc3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXhVNnhqTUxMSWdJUnoxMXZlRXY5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01EUXdNakE1V2hjTk1qWXdNekkyTURRdwpNakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dIZm55c1MreHl6ZTcrM1BFSlpsMUVEWE5YUldxaHVLUFV1d3hMbU5UNUFkK3lXMU0KZWpDWG1iaFNLcUo5SmJFYmNvNTBGYlNkaXdpVFBtdDF3Qk54QVpuSHFNckFZd0swUzJsbXdvdkdmYmVzWVo2Wgp6aFg3dTNncjcycGtLdlM3OVk3MThSWmxvUUdCWGtEY2ZDVDg3WEtTbUpuWEZWVkxqWmNvekpBa1Rmd3kwdHJQCkRyd0t0SEhXV1JmOTUrS2NNNDdRVXZlTDJxVmxRL2oraEl6a1FOck1DTHg3TXJJSFNwRlBKaVYvNWJJaHJ6a1QKKzlTRmtFOG5lTEhhcXMxZUtEaTdDQ3FpdVlpYlVPZkFMMEljWjF3Ukh5ZTJlQ0tHZXNrNjhadHNXcjR0cXN4aQpHeWxUZlZFUWdhY1JqZUo1TlBNdnpaVDR1YzFHdGNjUCtvVUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPNEVxcEZycjZRRzBaWmJmeDhhem9SNjd6NFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLRUdtT1MxNDN1WkcyeUw2dk5vV2lCQVptL0dxS20vVlc1ZysvYzVYdzZsblVqdEE1cDdtc1BHCmJnRUlKS0VQS2VGaGhkenFISklJbTBuS05iY0RPT3lWeXlRaExkaXZOc2QwZURoTmJYOEQwY29KNUNYSzBEdHYKTVVJVzBpN1ZCQXlCOUJ1RzZMUTBVRTZDK3FjQzhrWWtETjMrRjRLbVk5N2cyc2cxazcybFlPQkgwY2dIWlB6UApxUCtkZ1FzMTVxUkNFKzhNUTIzVnVIS2k5a2JDb0RxK3Y4ajI5enZZd3JPY2phcFM0TVg2bFlKdS91ek42bDIwCmxObktlblQ1bjZNbmFEZW5WZGY1U0sxRTFraHNnT0F5bHVSQUZhMlozQzN4YXdTemg3bGV6OTFCRVhMZ0JmRm4KYkRINHRpejhSRTR2c0dFemJRUURVNnc2K2dyTVdVdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQ1QyT0V0QmFPQ0o2MkFDM016MFVFakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01EUXdNakV3V2hjTk1qWXdNekkyTURRdwpNakV3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEcUc0Z3I5UFIrcW5uRG1JYjNuTERMakNrRFhjWTUKcHpDdDE5dlJpR2lhc0F2OEdkMGVaZzRWaTdFaDFYNHBqOUpWcDJjclNOWE9RdkN2WlY2ZkNZdFJHMkZVeWMrcgpVVnVENlBSUTBiYTY4dm1DT2ovQ0pIOEduTlpZdndFampvbmJEcDBGdUJYVGRYd0I2M2NqVzRxdlVsd25uelpCCjhueUNYTWNqMEFEQUhWUnN0UzA4UmxUdkZWeXVWbXJ4SXpCMlVVUGpsMmZ6QzZSV2RTWHA5d0ppSkFtUVdSUXEKcjVieGVqOG1BYWVLVVMxUHI5aGl0REZMVHR6SE0yRjZ5Q1Z1ZU1DRUdFQnhQVzJDMk83b0d5VmppeTlEaEllWQptZUFvTWdvc3k1WStzM09yMEk5MU9YcFB2YzM0WDRLSG5Qc2k5a3IxL3M4UDdMSnhvMHdKVmQzaEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEdUJLcVJhNitrQnRHV1czOGZHczZFZQp1OCtFTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFCakJTSG9FMWpGQ1k3ejUrZ3FLbStDY3NKaUU1d1gvQU40aHZmWndIN1dsQ05talIKNnpqN0xvb2g5bVdiem9jc3Z3VDhjcEVyMTBNa0hQZThpa1M2cGZrTXljQnRkSTRRc2s0NUN6UHFsTEMvWlg3OQpXRk9nZ0dHZ2ZZSmFkK2ZzcjBiR2RHMEhKQlQ4Y091NjVlQzVDRGt4UkZJNTJPSkNNcWhXYmtjZk1CdlNsL3gzCng0aTEvRmJ4QjZyZ0cwcXZsZlJvZUZZVWNGMDdhbDhWNDRXUjAzYTZIbExnTWd5ZDZBZ3loYmlJYjdlN3Q0OVoKaW8yM0xOTmRPbFBXcHFPb0xOVmZTUEJ6V1B2UWtyL0tzcGJIUEZQOTlLM3FNQlZiRUNHazR6ZmF5eWUxUVd2MApKMFFBNkQ2Vmx2QWE2MWR6WmtUcXQ3eXArei9rY3NRaklVZHFZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNmh1SUsvVDBmcXA1dzVpRzk1eXd5NHdwQTEzR09hY3dyZGZiMFlob21yQUwvQm5kCkhtWU9GWXV4SWRWK0tZL1NWYWRuSzBqVnprTHdyMlZlbndtTFVSdGhWTW5QcTFGYmcrajBVTkcydXZMNWdqby8Kd2lSL0JweldXTDhCSTQ2SjJ3NmRCYmdWMDNWOEFldDNJMXVLcjFKY0o1ODJRZko4Z2x6SEk5QUF3QjFVYkxVdApQRVpVN3hWY3JsWnE4U013ZGxGRDQ1ZG44d3VrVm5VbDZmY0NZaVFKa0ZrVUtxK1c4WG8vSmdHbmlsRXRUNi9ZCllyUXhTMDdjeHpOaGVzZ2xibmpBaEJoQWNUMXRndGp1NkJzbFk0c3ZRNFNIbUpuZ0tESUtMTXVXUHJOenE5Q1AKZFRsNlQ3M04rRitDaDV6N0l2Wks5ZjdQRCt5eWNhTk1DVlhkNFFJREFRQUJBb0lCQVFDZnpwV0E5Q0RtU25iKwpSeU55NmJwaDZGYWkzcU9PL1lza1VLTFVnTnB2SmRlNGl1cy9jZ2tST2g5N2FpSktPc3dvL2pKV0FNMDZsTVY1CjVhZld4b3djbktVdlhPZnZHWVZ3SVZpTnh1cUc2WS9iRHVveEcvcStSOWVtRXhTeThmMDIxTjNwWm9VM3FRNHkKdlVyQmp4NjNtWEFnOS9Ud3haZXE0YXhxelBXR0xmRUFRUDQ0NlRpZU5DUXRtRTJJemV4TmdCaW9IcDNUSEIragpXTkY1cXlmVmlRVHNUR1dLMFc0NjBsYkt2RldwNWhyUDB0aWxpSFM3dTlYbGI4ZWpTcXZzdzIvZ0tlYVhYNitwCllFV3pSWHp3U1lzVW43MmFOMnJvRVlXaVV4TTRUY080L2plR2NrZWZCOVI1dEgzTTJoRkNkWGV5MkJTZktSeDUKUDlaQTFYREJBb0dCQVBwZitYRCtpYWI4WURCSWRFNWs2Q1M0Q21BRHo4YXJrYjhLd3I2SFJvRkFQeVA1SERwRwpMWEdpU2hjVURFZDQwbTFCMDdzbkRYOEZBVXRjSEFBTExtdHA0VHF5OCttU3hza1NUY3JUeWpBcldlcDJIbmc5CkNETGhpUHdCaXQvMG1rTzZtMkRjUVd5aXFXeE4zYTJwVitpZlpqL3h6OWFidjdaaW1Qemd1Wm1aQW9HQkFPOWQKL3dodlAvVk5ta1ZEVmJPdmQxWDBLdVZFNXo4SFA3MjJMT29PMHpnTWJMNE5xTmdMQm9zSEw3dzdmQmdIVDRseQpRcFpIOUI0MndnVUdhaG9yYXNqOExaQjVaeGQ4bzNvRGptelVlaERnZDJIa3l1ZEM5UW5xOVNFMnVOVUlpeDVuCmwzb3ZqYUtESHZLZ2VHcFczbVZYZDhwM2RnejVBL2FhY2lxclVPT0pBb0dBUitVMVdLZ08yUCtSazJ2SzBoUVIKd1RHRDhTeEhCcktQcUg4cml0Q0hnMmZ5ZVo3MzV4ZnR4cnFtY2RnVTZwVWNQN2x1VmtpUmpJN2dYMFowMStKZQpFd1FWWStpdE43NHBET1lQcHBXSWNxcVFLRTZBMDJBYk1aa24zODJGbG1mRHdIMGVUd01RV21TZkovVjRHWDBPClBFTkJkazAydEZhSEI1VnFmdnI4OE1rQ2dZRUE3QzI2cmYvWEE1c0dWTUVUbHEvUzk2UnJqcnhsenZMQUdkZmUKaVRNSGhZMzgzYWxzcDM1NWZrUWcvWUZUK0FGK29RZDBYQU96QXZ6VWcxREk3L2xXNitpbXJKNmM4YmV4TlhxOAoxUFR4WENXZXBhQ3g4MjFGaWZ1aTBwckQxSzhSVlhheEo0WTBJZDF1YzhlU0NKcWQ1VEJncWcwbEZiZStDVnhxCnVWOC8rTUVDZ1lFQW9WSlpOYlhFZEFUWEZGMlZMTVJrSUl6RVllSm1pTTBLRENxSjZKcmpSbUd5dlpPUXNBeDYKb1pwdGdTcW9iZkdzZUlTY2xqV3I0NmlwY201L2tzL1BIMFZzOTdycU5zd3JjZzU4ZUl0bGRPdTRoaytNWGhTcQpjWSt3YWNvMjVOMlQ0TkprZWhTbG9PWjFzNmJqOFpyM3BEUFJlbTNaMUxVZGh0MDludDQvVWpJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVXhVNnhqTUxMSWdJUnoxMXZlRXY5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01EUXdNakE1V2hjTk1qWXdNekkyTURRdwpNakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dIZm55c1MreHl6ZTcrM1BFSlpsMUVEWE5YUldxaHVLUFV1d3hMbU5UNUFkK3lXMU0KZWpDWG1iaFNLcUo5SmJFYmNvNTBGYlNkaXdpVFBtdDF3Qk54QVpuSHFNckFZd0swUzJsbXdvdkdmYmVzWVo2Wgp6aFg3dTNncjcycGtLdlM3OVk3MThSWmxvUUdCWGtEY2ZDVDg3WEtTbUpuWEZWVkxqWmNvekpBa1Rmd3kwdHJQCkRyd0t0SEhXV1JmOTUrS2NNNDdRVXZlTDJxVmxRL2oraEl6a1FOck1DTHg3TXJJSFNwRlBKaVYvNWJJaHJ6a1QKKzlTRmtFOG5lTEhhcXMxZUtEaTdDQ3FpdVlpYlVPZkFMMEljWjF3Ukh5ZTJlQ0tHZXNrNjhadHNXcjR0cXN4aQpHeWxUZlZFUWdhY1JqZUo1TlBNdnpaVDR1YzFHdGNjUCtvVUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPNEVxcEZycjZRRzBaWmJmeDhhem9SNjd6NFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLRUdtT1MxNDN1WkcyeUw2dk5vV2lCQVptL0dxS20vVlc1ZysvYzVYdzZsblVqdEE1cDdtc1BHCmJnRUlKS0VQS2VGaGhkenFISklJbTBuS05iY0RPT3lWeXlRaExkaXZOc2QwZURoTmJYOEQwY29KNUNYSzBEdHYKTVVJVzBpN1ZCQXlCOUJ1RzZMUTBVRTZDK3FjQzhrWWtETjMrRjRLbVk5N2cyc2cxazcybFlPQkgwY2dIWlB6UApxUCtkZ1FzMTVxUkNFKzhNUTIzVnVIS2k5a2JDb0RxK3Y4ajI5enZZd3JPY2phcFM0TVg2bFlKdS91ek42bDIwCmxObktlblQ1bjZNbmFEZW5WZGY1U0sxRTFraHNnT0F5bHVSQUZhMlozQzN4YXdTemg3bGV6OTFCRVhMZ0JmRm4KYkRINHRpejhSRTR2c0dFemJRUURVNnc2K2dyTVdVdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU5qRFZkQ1JlcFoyb3VGaG1rL3ZrSzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeU56QTBNREl3T1ZvWERUSTJNRE15TmpBMApNREl3T1Zvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSm9MUUdBbGlKQmcKcWtxNnlPNThsZ24zM2pTdHZLa0dXVXJEamNYRWhQNVFxWm5NVUpRUmZNaEZxeVJ1YUNsRmFKL25rZUFoK1ZldgpiNTlOTGZ4SGg1elFqNzRJQ0ZML3FlYlBOTUpSOEtpTno1Y1lYWCtPd1FYa3ZORFRTYllkKzhPeEN1K21aSUhMCjR3SFZndWgxU29VRThFdk9jMzZuZElHcWNCb0laRm84OTQwYXR1My9NNTMycUxORjlrV2kzUUkvaEhjYXc4eWMKZjF4clRxNVdiNUFEMzJWb3QwMmNmTEdpV2JyRDh2NEtsNmlEbkdVVXR0dTJkaUVndk9DZGJINnh1VTZoL2YyagpIUDdveEpQRXdJcHJlK2tmSjFjQnFwUmozdHpOSUswbjdVYnFTMVdyTk5BTzZsa1FCemVneEpxME1XMStDK24yCmJTeS82V2ZEQThVQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVTzRFcQpwRnJyNlFHMFpaYmZ4OGF6b1I2N3o0UXdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFQN2lrb3g1SG9vaE0KT2hPQS9CdUd3UFowVXpmdUtFL01kVUJMdHIrYkZYN3BaaTRNOWNtQ0lGMmZ1blpKdW4yaHZNNU1NTmhzTzRJWgo0b1U2ckp3MHZCOGdPMlJyQ2FlSnNKMkxhemhUb0dIS1Zsa24xZEVJcjk5U0lHWHBveHZoQlUxa3Q2U0c5dFFuCjBKdHhqV1RWRDdjZUlUWXpQVlllelRaMU9LeUdpSGpieEZIdXord3ExNFpRcGdCTCtseUtzMUI3MUxnQlBLVDUKZ05HemhXcmoyL2RNVGhJdEZzTFFhdnVnS2JDUldvc3FyN2sxYnVYMnVpVFRxNnpWUEtVaWJYS01NcjQ3aDZ6bgpEa1VEbCtVVHZVVkN2SDNPUUkvMVFrdFh5M2NFWSt5SUZleGhQcEpZalhKWEJBNHhEai9WVVJJTG0rTHZVMnBqCitxdVg0TVVWOFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbWd0QVlDV0lrR0NxU3JySTdueVdDZmZlTksyOHFRWlpTc09OeGNTRS9sQ3BtY3hRCmxCRjh5RVdySkc1b0tVVm9uK2VSNENINVY2OXZuMDB0L0VlSG5OQ1B2Z2dJVXYrcDVzODB3bEh3cUkzUGx4aGQKZjQ3QkJlUzgwTk5KdGgzN3c3RUs3NlprZ2N2akFkV0M2SFZLaFFUd1M4NXpmcWQwZ2Fwd0dnaGtXanozalJxMgo3Zjh6bmZhb3MwWDJSYUxkQWorRWR4ckR6SngvWEd0T3JsWnZrQVBmWldpM1RaeDhzYUpadXNQeS9ncVhxSU9jClpSUzIyN1oySVNDODRKMXNmckc1VHFIOS9hTWMvdWpFazhUQWltdDc2UjhuVndHcWxHUGUzTTBnclNmdFJ1cEwKVmFzMDBBN3FXUkFITjZERW1yUXhiWDRMNmZadExML3BaOE1EeFFJREFRQUJBb0lCQURBdXdzVVFHR1lvaGp0MwpyeS9CY21ETjBnZ2lLN2VtejdrdDc2TmpjOEhrVXhoVEt3VVZielZwYlQybzl4V3BxeThSRExUUmk1OWN0WXBiClpyM1pWZGE3K2FvVDh4NmE3M2JOYXhBNDl4Q1J3dFBkQUNuTTZoMUF6YnAzekQrVm8xRXppRnNyYlphWHducXAKWVJmNjBBTkpaeXdlK0VzdWI2ZTdPdk01bXNJS2daeW5MNW00dk1RSEdiU1JqekRZbU8xVm0vSVJ5UHBtbTNxWgpBM2Q4M01CbTBVQXhpUXBGaVpkbXoxNjEzN01NOXB2eS84UUpmL0xtV3FrdUU5akswMG5tOGdMV2szK3JFT0Q1Ck51bXAzbi9jdjJ2VTROOU9nREdKVER5aFIvSWxHUmxhRHlLcWlHNlM3QUphNHpibWZnYnFicm1nK3BOdmlHalIKOHc5cUE4VUNnWUVBeFcrS2ZybCtlck1zMHNTV0lXR21iQ25QVEViWkR5Z0lhVFI3WWhjUnVBQXpkSGRNUVdIcQpTQklPcTVSYVRPY0pKUFNRYzgvRXNEUm9xSU1HbFI4c29iSEQ2SnBsa2ZZZzg5MVhjRU03ajVSSTFwV1l3NFgzCk5nZW01cU9YdFc1L0huWWFqR2diY29NcktvYkJPK0hrZnI1aVN4YzlEZFFtdUMwS0RiZm9vZU1DZ1lFQXg3eTMKM2ZvNlNCWldVamlnbjZ3Z3lQQ0l4OXYybGxUSVhWTXRyYmZMOEVmbUU3TExPNm9tVXhWV2JXMjM3dnhWcVdRSwpseUZYaE9zOHN4WGs4UnVpMGR3ZjIzOHFXTmdWTjZlWG1aYmZsWVdEQUx2Mk9qUHVreXUvTzV5aWpFaW1TMjZUClh1aHlDUXUrNDRLTHF3NFVvUnUrS3BLbXk2YmM2TUpKc283YmxEY0NnWUVBd0N3M2srMmRiSFRtVmlpL01MTEoKdUZKaDBnN0x5L0xkYlBtR2R3MlpVNDN1aDVodkF0ejVtempvU3AzVjN6Q3FOK3hNaGsxZlYxdEwyMm5kaUZ5VgpwclZPeVNNdlpnazZQZVBkN2dtaStiZ054Y0JLdDFXNE1FRDJkVndhbUtCNjN2MTZEZHh2aXVDZHJZRUlxTzdRCjU0VU1TNmJNNko3dEtTdTlzMmlrNkowQ2dZQmY5YnpvZXBXUm1KbTBPdHlBbWZQT1ZqR0F3NTcrcnBEc3RVK1cKekZ6QWZlcDl3RUovMGNsRDFWYUdrRlgwRFdzaVRKd0I2OVRlV1IzNmRDUmY2Z1VaaWdZTU1GWXFCUFo4bkpucgpBbDg4dUw0dGxpQS82ajlPbVkvd2xkcEtSNFVOYkh5RTltd0RDSStYUWxyVHZab1BwUUtCOVo4STdJdnBqNTVVCm1PbkpsUUtCZ0JoU05FMzlPTUNWUFhLeEpDK0x2SisyNU5pek43aElyRlBGNWxOZFdGUTNLb0NWUFU1bTY5dXcKR3ZaVFVrKytYSXlKdHZHa2YzLzJYaURybjF0aWNPb2VFUmg0d0lvS3RRZ3g0Ri8wMi9pdDFVbGFSY2tnVThYVwpkeWNQZ3lZdjJCMEZKZVRacEc0MmFwZ1duU1pkZXpLamM1M1J0WXltTTdBMUFFYy9rQ0lyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/apps/deployment_v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 12fce0ce6327b3a011a89879d753d98c20825b9f7853b7ade5fd7bc798299075
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/apps/deployment_v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/apps/deployment_v1.json
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# yaml-language-server: $schema=https://kubernetes-schemas.raspbernetes.com/apps/daemonset_v1.json
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
