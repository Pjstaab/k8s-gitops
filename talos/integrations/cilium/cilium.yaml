# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1EVEF6VE5Qd0pYdnVuRmpxdWkzS2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01qQTFNamt3T0ZvWERUSTJNRE13TVRBMQpNamt3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2YllFZ0RnbGhKMElnQ09NUmdjNTlhekxzb05DOGdpM3NVcXhDUUIyMlVDbUU4dFoKV01GbEpXUkFlUXZZS01pV1I2R0RKN1hOZHNqQmpqQWpieDh4eEpDbVVEQlphTmp0UWhHSVlJTG53bWtWUkFhRQpJM1R1K2dVSnRkandyK2V1YjMzRzdwZE5BajV1azdsYjFRdGhacU5LdkZtb042ZFdCV3FmSGZjNzB4cXNWTlJECjJvbXRoWmNzUTNRUUtXTDYwRTJReEpjUHZ6MEFJdm9vbnY3WHUxK2lPL3YwYkZaTmhoRXdTME56a2RNOHVlS3cKZWtidGdqc3B6NjVrQnlKeTU3eGZsV2NCUGlLOGZ0eldSdjVVZUExTk51QXg3aUNXaGNGbTJOMzFPc2x4M2xWSgoya1FNcUZLQTQ4M3VhaU5pdXFkamt0dFRZNmVZRUtMYnB1SnFTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE1oL1V3TlorUHRnM1Y3YktuQ2txR1dLMHloTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlhaekFsL09TT0pXZ3RZUVhTNVRVK0VpSDlRUUVEdFRZVXBNRGJuYnNJWThuTktsTmcrcjdvCmxMYjJBQVo5b2dTbEc3Q1dQWXFvN0lWbk84RlZYVGRlbnpvb0ZoN0JicmRsOHBSazZ1L09xSnRlamtqUFZFc2wKc2c3b2lITmkzd2w2QTlyOVhKRGU0N0NpUUxnQkREdEw2RHBhZnBFTnROdkZkajEybzFnMGJqMElBUTBYWkpRdgpCZ3F3dTJySWE0T2cxSFNBRUdQemN6OTBkS0hUMk41VFFUNGd5ZUhOWnVLaFRrSW9DOVdvNjkza25UUzR3WEsrCjZ3L0dZQjR0RkI4OUxKSWV2UHRUVlNBQmU0MHA1dEJKczduRG4zbTl5UWRTQ2pHeDduSGN6L1cyOGRUZzBKOE4KaFhlcW9sOU9Lbk9oVUIzL0hadkVsSldEalRTWlZsaEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmJZRWdEZ2xoSjBJZ0NPTVJnYzU5YXpMc29OQzhnaTNzVXF4Q1FCMjJVQ21FOHRaCldNRmxKV1JBZVF2WUtNaVdSNkdESjdYTmRzakJqakFqYng4eHhKQ21VREJaYU5qdFFoR0lZSUxud21rVlJBYUUKSTNUdStnVUp0ZGp3citldWIzM0c3cGROQWo1dWs3bGIxUXRoWnFOS3ZGbW9ONmRXQldxZkhmYzcweHFzVk5SRAoyb210aFpjc1EzUVFLV0w2MEUyUXhKY1B2ejBBSXZvb252N1h1MStpTy92MGJGWk5oaEV3UzBOemtkTTh1ZUt3CmVrYnRnanNwejY1a0J5Snk1N3hmbFdjQlBpSzhmdHpXUnY1VWVBMU5OdUF4N2lDV2hjRm0yTjMxT3NseDNsVkoKMmtRTXFGS0E0ODN1YWlOaXVxZGprdHRUWTZlWUVLTGJwdUpxU1FJREFRQUJBb0lCQUdCOGxzVnZ5UVV0cVFragpDMUVDaytQendwWkVWR1F0TXVBbEVPMTNJdnRUK2lQUEpONFRYcElwN3ZDaHFZcjBtaHBNZHh4WFJ1ekhKa3BmCkNXYVhBd1RxWE93ajZ4VjhYdzlmUTNGeW90VXFCUHJZSlpTekFHaUE3M05ocHVpUWVST1RjUDRnVGJaNmNsc0gKeDBFUHpMWWJEd1BFeGQyb2FnUFBPcVpPL0VwZFFrYVM1VXRlQUg5UHJhZTZUQ284UmZ4M0drRFpncVQySUNUNwpnd0lWbnVQYnFkWG5zbkRtamRlNjJ5L2VYclRSSE01amJKVWNBanB3ZWFXVjlsV2ZkRGJNQlptMXlCNUdIUGxnCnNlSC93VFcyRXJUWDI0blBMNmRzTTZMayt1SmFITjc1Wk5QZlFWVXEvcE9ScDhKL3RCMS9ka1NzcVR5Szk5V0IKNkp3WGkwRUNnWUVBMVVqM1lycFY4a3IrRmtZa25kZnA2UlNPcTYwWW9zd1ZxTTJadHh1UjhSVFU3N0wySkV3QgpLUFRrSGZodFFPSVZ5OWdjc3pSUWtySDdPa25oVGZ6cEFCd0FmTkJQejNZMnhmeGRXeVFjWFh3eEwxangvRXo1Ci9EeUFrcUlmblNDcU9heGNtZ3k3ZG9rdDVtNFVLRmpzd05rUU0wdDkrSkF1aFpiSkVFcUhieTBDZ1lFQTQ3UnIKMDRlVm5EaVppZzhSVEYrWjhIVGs2Q29OSVN3YTNCNFV4dS9WOWNqbU0vT2s4a0RFUFk1L2VXY3hZN2xMc3RCQwpzZGs4UUNqTVhKa1Erd29Hdm9sL1JSQ0VGbERVUUgySi9rdVRZczNZVGRUQmdkWUlKWTVnaWwzd1ovV1dOWFBoCnZVOTcwKzMwcmlIcW1FcWEweTMzZ0Y0eTRpVFNPT2VTMThHNytRMENnWUVBcVlOWGt2RVQxQUZFVm9HaklveHoKVFJ0WWxSdDY1QkNkK2s2R0tDRFNhakFyV09MOGZEYW9DVnd4WFp5UGdLenZzOVpzWVFWb01GOGlrOTRhSW5pcQoycnBtck15SFVoVGJUWm5Zdk5KRGRRMTZyZTNjVGJFRVVqUG40Q0xZUzNLbHVEYkVWbTllSXNTK1pWRUIxbHR1CnQ0c05OQ2VBMUNnTHdZTHBCSGlua1hVQ2dZRUF6RCt3WU1QRDNhZWZnZ2xWK08zZ1JhSjFHaE51UjQwcVlydlEKNDBtSzRMZGVWc2Q3ODVsSTdmWitQY1hrdFpFbVo3VUx2a0FnSFdUN095eEo0UVR6VzhJMkdSdGhnQ3JzMlJSQwp6WW01SU8ySDB2aSt3dG5iNE9RL2tKNEc0Um1YclViTy9HTHByZ1pLYmxBYUFKVWJIOGFodGRISlRyUzhwVEtECnMya2lWWmtDZ1lCc2JOTE82bWxnYTh4MDZSalo0a1lTR1Y4bzF6cmtBNWNwelpsc3BzOGRQankvYTZseUorNjYKVGF2NlVGVktlZmEvdkVTWjE4U3pndFdqbnhMOWZIRFM2eWszVWluS3B0TVhuYWxldXFodUZjMXFKQmpnbWFrbgo1cllOMWxtdzFvOS9Pck9jcmFzOFlPb0lobXphd05DbVVwYTVEV3N1RU1hbzcyUGU1Z3VYc1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1EVEF6VE5Qd0pYdnVuRmpxdWkzS2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01qQTFNamt3T0ZvWERUSTJNRE13TVRBMQpNamt3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2YllFZ0RnbGhKMElnQ09NUmdjNTlhekxzb05DOGdpM3NVcXhDUUIyMlVDbUU4dFoKV01GbEpXUkFlUXZZS01pV1I2R0RKN1hOZHNqQmpqQWpieDh4eEpDbVVEQlphTmp0UWhHSVlJTG53bWtWUkFhRQpJM1R1K2dVSnRkandyK2V1YjMzRzdwZE5BajV1azdsYjFRdGhacU5LdkZtb042ZFdCV3FmSGZjNzB4cXNWTlJECjJvbXRoWmNzUTNRUUtXTDYwRTJReEpjUHZ6MEFJdm9vbnY3WHUxK2lPL3YwYkZaTmhoRXdTME56a2RNOHVlS3cKZWtidGdqc3B6NjVrQnlKeTU3eGZsV2NCUGlLOGZ0eldSdjVVZUExTk51QXg3aUNXaGNGbTJOMzFPc2x4M2xWSgoya1FNcUZLQTQ4M3VhaU5pdXFkamt0dFRZNmVZRUtMYnB1SnFTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE1oL1V3TlorUHRnM1Y3YktuQ2txR1dLMHloTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlhaekFsL09TT0pXZ3RZUVhTNVRVK0VpSDlRUUVEdFRZVXBNRGJuYnNJWThuTktsTmcrcjdvCmxMYjJBQVo5b2dTbEc3Q1dQWXFvN0lWbk84RlZYVGRlbnpvb0ZoN0JicmRsOHBSazZ1L09xSnRlamtqUFZFc2wKc2c3b2lITmkzd2w2QTlyOVhKRGU0N0NpUUxnQkREdEw2RHBhZnBFTnROdkZkajEybzFnMGJqMElBUTBYWkpRdgpCZ3F3dTJySWE0T2cxSFNBRUdQemN6OTBkS0hUMk41VFFUNGd5ZUhOWnVLaFRrSW9DOVdvNjkza25UUzR3WEsrCjZ3L0dZQjR0RkI4OUxKSWV2UHRUVlNBQmU0MHA1dEJKczduRG4zbTl5UWRTQ2pHeDduSGN6L1cyOGRUZzBKOE4KaFhlcW9sOU9Lbk9oVUIzL0hadkVsSldEalRTWlZsaEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmJZRWdEZ2xoSjBJZ0NPTVJnYzU5YXpMc29OQzhnaTNzVXF4Q1FCMjJVQ21FOHRaCldNRmxKV1JBZVF2WUtNaVdSNkdESjdYTmRzakJqakFqYng4eHhKQ21VREJaYU5qdFFoR0lZSUxud21rVlJBYUUKSTNUdStnVUp0ZGp3citldWIzM0c3cGROQWo1dWs3bGIxUXRoWnFOS3ZGbW9ONmRXQldxZkhmYzcweHFzVk5SRAoyb210aFpjc1EzUVFLV0w2MEUyUXhKY1B2ejBBSXZvb252N1h1MStpTy92MGJGWk5oaEV3UzBOemtkTTh1ZUt3CmVrYnRnanNwejY1a0J5Snk1N3hmbFdjQlBpSzhmdHpXUnY1VWVBMU5OdUF4N2lDV2hjRm0yTjMxT3NseDNsVkoKMmtRTXFGS0E0ODN1YWlOaXVxZGprdHRUWTZlWUVLTGJwdUpxU1FJREFRQUJBb0lCQUdCOGxzVnZ5UVV0cVFragpDMUVDaytQendwWkVWR1F0TXVBbEVPMTNJdnRUK2lQUEpONFRYcElwN3ZDaHFZcjBtaHBNZHh4WFJ1ekhKa3BmCkNXYVhBd1RxWE93ajZ4VjhYdzlmUTNGeW90VXFCUHJZSlpTekFHaUE3M05ocHVpUWVST1RjUDRnVGJaNmNsc0gKeDBFUHpMWWJEd1BFeGQyb2FnUFBPcVpPL0VwZFFrYVM1VXRlQUg5UHJhZTZUQ284UmZ4M0drRFpncVQySUNUNwpnd0lWbnVQYnFkWG5zbkRtamRlNjJ5L2VYclRSSE01amJKVWNBanB3ZWFXVjlsV2ZkRGJNQlptMXlCNUdIUGxnCnNlSC93VFcyRXJUWDI0blBMNmRzTTZMayt1SmFITjc1Wk5QZlFWVXEvcE9ScDhKL3RCMS9ka1NzcVR5Szk5V0IKNkp3WGkwRUNnWUVBMVVqM1lycFY4a3IrRmtZa25kZnA2UlNPcTYwWW9zd1ZxTTJadHh1UjhSVFU3N0wySkV3QgpLUFRrSGZodFFPSVZ5OWdjc3pSUWtySDdPa25oVGZ6cEFCd0FmTkJQejNZMnhmeGRXeVFjWFh3eEwxangvRXo1Ci9EeUFrcUlmblNDcU9heGNtZ3k3ZG9rdDVtNFVLRmpzd05rUU0wdDkrSkF1aFpiSkVFcUhieTBDZ1lFQTQ3UnIKMDRlVm5EaVppZzhSVEYrWjhIVGs2Q29OSVN3YTNCNFV4dS9WOWNqbU0vT2s4a0RFUFk1L2VXY3hZN2xMc3RCQwpzZGs4UUNqTVhKa1Erd29Hdm9sL1JSQ0VGbERVUUgySi9rdVRZczNZVGRUQmdkWUlKWTVnaWwzd1ovV1dOWFBoCnZVOTcwKzMwcmlIcW1FcWEweTMzZ0Y0eTRpVFNPT2VTMThHNytRMENnWUVBcVlOWGt2RVQxQUZFVm9HaklveHoKVFJ0WWxSdDY1QkNkK2s2R0tDRFNhakFyV09MOGZEYW9DVnd4WFp5UGdLenZzOVpzWVFWb01GOGlrOTRhSW5pcQoycnBtck15SFVoVGJUWm5Zdk5KRGRRMTZyZTNjVGJFRVVqUG40Q0xZUzNLbHVEYkVWbTllSXNTK1pWRUIxbHR1CnQ0c05OQ2VBMUNnTHdZTHBCSGlua1hVQ2dZRUF6RCt3WU1QRDNhZWZnZ2xWK08zZ1JhSjFHaE51UjQwcVlydlEKNDBtSzRMZGVWc2Q3ODVsSTdmWitQY1hrdFpFbVo3VUx2a0FnSFdUN095eEo0UVR6VzhJMkdSdGhnQ3JzMlJSQwp6WW01SU8ySDB2aSt3dG5iNE9RL2tKNEc0Um1YclViTy9HTHByZ1pLYmxBYUFKVWJIOGFodGRISlRyUzhwVEtECnMya2lWWmtDZ1lCc2JOTE82bWxnYTh4MDZSalo0a1lTR1Y4bzF6cmtBNWNwelpsc3BzOGRQankvYTZseUorNjYKVGF2NlVGVktlZmEvdkVTWjE4U3pndFdqbnhMOWZIRFM2eWszVWluS3B0TVhuYWxldXFodUZjMXFKQmpnbWFrbgo1cllOMWxtdzFvOS9Pck9jcmFzOFlPb0lobXphd05DbVVwYTVEV3N1RU1hbzcyUGU1Z3VYc1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1EVEF6VE5Qd0pYdnVuRmpxdWkzS2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01qQTFNamt3T0ZvWERUSTJNRE13TVRBMQpNamt3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2YllFZ0RnbGhKMElnQ09NUmdjNTlhekxzb05DOGdpM3NVcXhDUUIyMlVDbUU4dFoKV01GbEpXUkFlUXZZS01pV1I2R0RKN1hOZHNqQmpqQWpieDh4eEpDbVVEQlphTmp0UWhHSVlJTG53bWtWUkFhRQpJM1R1K2dVSnRkandyK2V1YjMzRzdwZE5BajV1azdsYjFRdGhacU5LdkZtb042ZFdCV3FmSGZjNzB4cXNWTlJECjJvbXRoWmNzUTNRUUtXTDYwRTJReEpjUHZ6MEFJdm9vbnY3WHUxK2lPL3YwYkZaTmhoRXdTME56a2RNOHVlS3cKZWtidGdqc3B6NjVrQnlKeTU3eGZsV2NCUGlLOGZ0eldSdjVVZUExTk51QXg3aUNXaGNGbTJOMzFPc2x4M2xWSgoya1FNcUZLQTQ4M3VhaU5pdXFkamt0dFRZNmVZRUtMYnB1SnFTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE1oL1V3TlorUHRnM1Y3YktuQ2txR1dLMHloTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlhaekFsL09TT0pXZ3RZUVhTNVRVK0VpSDlRUUVEdFRZVXBNRGJuYnNJWThuTktsTmcrcjdvCmxMYjJBQVo5b2dTbEc3Q1dQWXFvN0lWbk84RlZYVGRlbnpvb0ZoN0JicmRsOHBSazZ1L09xSnRlamtqUFZFc2wKc2c3b2lITmkzd2w2QTlyOVhKRGU0N0NpUUxnQkREdEw2RHBhZnBFTnROdkZkajEybzFnMGJqMElBUTBYWkpRdgpCZ3F3dTJySWE0T2cxSFNBRUdQemN6OTBkS0hUMk41VFFUNGd5ZUhOWnVLaFRrSW9DOVdvNjkza25UUzR3WEsrCjZ3L0dZQjR0RkI4OUxKSWV2UHRUVlNBQmU0MHA1dEJKczduRG4zbTl5UWRTQ2pHeDduSGN6L1cyOGRUZzBKOE4KaFhlcW9sOU9Lbk9oVUIzL0hadkVsSldEalRTWlZsaEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTFRITnhOQ1N3cTljMmoycEQ3ZGV1REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpBeU1EVXlPVEE0V2hjTk1qWXdNekF4TURVeQpPVEE0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNG11dTA4ZnllRFRVYXMyWDFLUVdCcHQ5SXpYTmsKYi8xbVRDUUJzeWg1dlVpeTlkMk81YmUwUk9xVVU2M0NwR2JSYU5zUEdyTUZzRlpuWms3Uk5JdnAyNWhOend5MwpqNnJabjJZVjNud2ZDRGgyNVZUb0Racjd6QXdGU29aRy9lb0lKZ2tpZHRTRGNQVEl1Nkx0VnVPOFFsZ0l0VVN0CjAzUFpFczNIM2hDRGRJdUJ4NGFTRkMyWUt4cGdEY0YweEcvbVRidXMybUxDeEZxVGVvZThWc1lwaHZmSndkSmIKaU9yNmVXTW9Ba296cHRKdENaTnFrckxPRi8vaURrd25HRmIyVlRpU0dqci9WMmFwSmlQWFd2d3VxdWFzdDdMNgpWMWhqV2ZseFZLZ0MybkRENkNvZWRZSm9PNHJibU9meFJOY2VDRUp3Y2J0QzgvVkg4U1pCNm5qWEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZETWgvVXdOWitQdGczVjdiS25Da3FHVwpLMHloTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFCOFdFcGxPRjhwWHVKYlpuSHNnNkdyZzUvLzlYVklDYU1HdTB3TU1lSmRhUVllQkUKTVR0ZDdacHNBMVRWSkdqRkpTVkd4MnBuM1lqS1R6RXVzUDE0OGM2U2o1dTIySk9aZXN3TFFScXJNYzdVV3d2aApMYnhPajhWU2piZW1mZG04eDIwK0ZMUjdpOS9RQy84OUxsRExZbTNCY1Y4MlBGaU0xVkxIWFZiNlhteTc3TVVoCkdoNnhXa0pqMzRXekV6WUh5VzEwSUlSME55ZDYyWFgwM3E1eWNYRTBycko1b3pNNzc4QWVJanh4OU4vWitLekEKbWNXTzY0VzZybDBQdGdiMW9jcTQxOXBWSmZkakZzUjVWTjFjZmFVQkVYRCt3UTB6blNKT1FCZ1ROc3o1MWdkQgpLNE1xL2M0QjF4aStOWTE4dWJrOTRDNm9ybG1BbmNTUWtjdlFldz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdUpycnRQSDhuZzAxR3JObDlTa0ZnYWJmU00xelpHLzlaa3drQWJNb2ViMUlzdlhkCmp1VzN0RVRxbEZPdHdxUm0wV2piRHhxekJiQldaMlpPMFRTTDZkdVlUYzhNdDQrcTJaOW1GZDU4SHdnNGR1VlUKNkEyYSs4d01CVXFHUnYzcUNDWUpJbmJVZzNEMHlMdWk3VmJqdkVKWUNMVkVyZE56MlJMTng5NFFnM1NMZ2NlRwpraFF0bUNzYVlBM0JkTVJ2NWsyN3JOcGl3c1JhazNxSHZGYkdLWWIzeWNIU1c0anErbmxqS0FKS002YlNiUW1UCmFwS3l6aGYvNGc1TUp4aFc5bFU0a2hvNi8xZG1xU1lqMTFyOExxcm1yTGV5K2xkWVkxbjVjVlNvQXRwd3crZ3EKSG5XQ2FEdUsyNWpuOFVUWEhnaENjSEc3UXZQMVIvRW1RZXA0MXdJREFRQUJBb0lCQVFDaXZuRHRwQ2ZBYm9SUwpkYlY4M0IwdW41NVk0RWJLVkxCZ2J0K1BZQkpld0xCR2xOb3VEL1pUeGkzSGRiM0p5b1dhTjRablduSllvWXlLCnUzYmdtQ0tBbUVjODBUdTAxOE1XOTU5WHlEeEVYMHJvQm1WRDdqcWpvTTg0R3VzbHl0TjNPNUR5QVRCNGNDeGMKaW82b0RlSFhKZVhXUjNlMGhxV3F5UmtCQ3BRa1Rpb01hVjh3b2hxWktlMVhNaXVRNXdsNVRSNW1jMXNhQklpOApyYkpFMlFtQ3pVS3gxQkRESk92Y0NHeXRObWMwMnFhd1E5MzBJaEtGaHZEdElKWFhySGtYdzkwWnY2enh2R2FyCkl5OVg3TEJhR1J4dzFWZW9vYnBkby8rSi9nWjF1cEpObkcrQ2lpTzJFOWY5THQ1Q0N4MUtQZElFaDBUVzZhR2cKSVFXdlpMVUJBb0dCQU1tbGJwUUpuRnc3bURGVVVxWVJUZkhYcXFuZklYVWNGUWpGMXUzYkl1c2VLajhwNGh5Zgo4TVc4ZmJHd096U1V4dUF0eDBNZS9VUXNDUmgvRkIxZGtJRk1Db001TkN3MVI5dWlHVjloWXNBNE5ReWljUDY3Ck9DNjY3Vmk3WFR3Y0k3V1N2YTZiZjhNa2EvQXY0elNHb2JsOUVxNFREblhRTEVuaWpnNFRKdjNmQW9HQkFPcGQKa3F6TXFhMkNqYUtrZ3J2UEk5cTIrM0RiZDljZVNSUFdEQWlJNDRvWjc3dGt0OGpweXRibVJJaS8zUnp4bWJXbgpvODB0QnpBMlU5c0ljRFY4VVBWNllYR25VbjhtbTRXL2VVS3N0OEVrdG1oYUtwZWRPbDk0T1N1K2Flb0JnZUVWCmwvVFJDdnpmQ1ZJa0lRNG9UeTM3VFBBcHFoL1B1cnFZV1RiZ3pmUUpBb0dCQUl2dVlIRWN4a1AvR3h0SVg5NWMKYmRHaER3NjVCL2ZEMkJqeGFiZy85TmhpWTREWHFOQ2ljU3hYSklhMVBEQzkrZERDRStCUlZnSUQ2UC8xMTlpVgpBRjJwampZSDhWdW9VY2hwa2QvdHJlQ2tZTFAyMmlEN2ZQNTR1NUp5MnoyR2JZVm9ZbmNUODdKUXlSS3h1S0xQCnR0VUlwWGpsUW9paFFNcTVERWxhSXhuVEFvR0JBTm1rempwMDBib1ZQR3ptODVWdjFxOGRNTUhzdmd6aXppQ0MKcmFnYlg1dDNYSjhjK0dPM1lheFNLU0VKZEZDVnVSWHVPWHFucno1QnBYd0tDUkpTZ1dpR0h3b0p4ZDNZdjZMawpYcnJoWk1BVDFPVnhubzR2Nys2SzJpVGFic2RtWVBQak5ydWVpZUt0U1oyamVhTUpJZ2Jra2QyU0E3QUpIREorCm1wTVJENUhwQW9HQWMrWWpMN01weWFmeVpYbUhjTGhKb1dqeXoyMFI5b0VOWGxSY21TMEh0UFdydndXdGFTNWoKcktYUTNBMk9MUE5LdDNLSHBHcmtxZGZjMzhQczl6SThkc2tPeVgwWC9XMUNmSUUyVHBlVTJZMmxtd1Jvc3BhagpXOUFnQ3JKVlVvUVJOVWt5WFBZK1F4bWJndXViNUZROHFyMzdOYWhIMk13WFN4SFg0MUd1KzZFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1EVEF6VE5Qd0pYdnVuRmpxdWkzS2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01qQTFNamt3T0ZvWERUSTJNRE13TVRBMQpNamt3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2YllFZ0RnbGhKMElnQ09NUmdjNTlhekxzb05DOGdpM3NVcXhDUUIyMlVDbUU4dFoKV01GbEpXUkFlUXZZS01pV1I2R0RKN1hOZHNqQmpqQWpieDh4eEpDbVVEQlphTmp0UWhHSVlJTG53bWtWUkFhRQpJM1R1K2dVSnRkandyK2V1YjMzRzdwZE5BajV1azdsYjFRdGhacU5LdkZtb042ZFdCV3FmSGZjNzB4cXNWTlJECjJvbXRoWmNzUTNRUUtXTDYwRTJReEpjUHZ6MEFJdm9vbnY3WHUxK2lPL3YwYkZaTmhoRXdTME56a2RNOHVlS3cKZWtidGdqc3B6NjVrQnlKeTU3eGZsV2NCUGlLOGZ0eldSdjVVZUExTk51QXg3aUNXaGNGbTJOMzFPc2x4M2xWSgoya1FNcUZLQTQ4M3VhaU5pdXFkamt0dFRZNmVZRUtMYnB1SnFTUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE1oL1V3TlorUHRnM1Y3YktuQ2txR1dLMHloTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlhaekFsL09TT0pXZ3RZUVhTNVRVK0VpSDlRUUVEdFRZVXBNRGJuYnNJWThuTktsTmcrcjdvCmxMYjJBQVo5b2dTbEc3Q1dQWXFvN0lWbk84RlZYVGRlbnpvb0ZoN0JicmRsOHBSazZ1L09xSnRlamtqUFZFc2wKc2c3b2lITmkzd2w2QTlyOVhKRGU0N0NpUUxnQkREdEw2RHBhZnBFTnROdkZkajEybzFnMGJqMElBUTBYWkpRdgpCZ3F3dTJySWE0T2cxSFNBRUdQemN6OTBkS0hUMk41VFFUNGd5ZUhOWnVLaFRrSW9DOVdvNjkza25UUzR3WEsrCjZ3L0dZQjR0RkI4OUxKSWV2UHRUVlNBQmU0MHA1dEJKczduRG4zbTl5UWRTQ2pHeDduSGN6L1cyOGRUZzBKOE4KaFhlcW9sOU9Lbk9oVUIzL0hadkVsSldEalRTWlZsaEYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUtKcVBySEpoSTRDZk1Oc0Q5UDdlN3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNd01qQTFNamt3T0ZvWERUSTJNRE13TVRBMQpNamt3T0Zvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVZxbktjaFFnd0wKTXNTVjNXc2JEejV3bUlxTHZhODFZZ1hMQ2lvZkYwVkxWRGlUNzFxaEFTVjFzczNWbWRmREVMSjZVMFZXZTlaeAowTC81MHlRL2crMnpCMEVIVzVNdktxc3hhaWxoa1FJRjRoRjZrVHVERnBlbFljU3RDam5mYUpMMDNsR3FqYnZMCnlET2Vwc3JQVG42b293SDd1aGJqVXJtSlFNLzVZMjJwZXVTK3FvY29IQktxSU5iZGhaS2N1alJySE1CckcreDcKRjJGbWM3b2xxc3dzQ05EUlkzL3oxSHkzQlV3bGlSMURndmlINkdzOVg4bzBvOEFscFN3SElsLzVtVjVhRUdMbAprNnVBV0xhOUl6ajV3c2ttbjdRUjBRZFJ1SllxaWtoUVBGSno2bFZ2Z0U4WnpZVTFpcDd5U2lmL1RoY0JZS25qCk5Dc25tOE81UFFNQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVTXlIOQpUQTFuNCsyRGRYdHNxY0tTb1pZclRLRXdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFLRE42V3BGRnZCUkYKWW5RYXRFeCtvN29VZGxVQnZLSThUblVROHFoWUZjOVpwTGxRL2lYb0o0N21VMC9xbTk1V3h5ZEthQkZmaWRkeQpjOXhEODlQZndUNUJZdVZBNC9LNHJEMUJZRmdNTjJod1Qxdk41UmVGTGozbDQ1VE1xTmZzZ0dXbGZpLy9tWVc3CjIxdldWd1hJcWZhS1V2SDdCb0g1NVNKMHdUeExVNVZBQUNXNzNna2x2MDlRQ2VQQnVQcTN5MmozRWdpait3RjAKc0llSWV0aE9VM0xyVGpPa0FiQTFndHllRVcvb2pOSmhFdFZ6WEl1ZDBlQlVEQ2daRGxFYkFFZ2E3b2xCQU1YSwpwV3ZDMUpaRjdRWEd0Qit3RE9Ta1VIajFNUzdBS050S294Nmh3UWFCOU9kS3YxNC9zOHMrRjlHQWVydHRvLy93CkdMU1VvQ0NneHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFdxY3B5RkNEQXN5eEpYZGF4c1BQbkNZaW91OXJ6VmlCY3NLS2g4WFJVdFVPSlB2CldxRUJKWFd5emRXWjE4TVFzbnBUUlZaNzFuSFF2L25USkQrRDdiTUhRUWRia3k4cXF6RnFLV0dSQWdYaUVYcVIKTzRNV2w2Vmh4SzBLT2Q5b2t2VGVVYXFOdTh2SU01Nm15czlPZnFpakFmdTZGdU5TdVlsQXovbGpiYWw2NUw2cQpoeWdjRXFvZzF0MkZrcHk2TkdzY3dHc2I3SHNYWVdaenVpV3F6Q3dJME5GamYvUFVmTGNGVENXSkhVT0MrSWZvCmF6MWZ5alNqd0NXbExBY2lYL21aWGxvUVl1V1RxNEJZdHIwak9QbkN5U2FmdEJIUkIxRzRsaXFLU0ZBOFVuUHEKVlcrQVR4bk5oVFdLbnZKS0ovOU9Gd0ZncWVNMEt5ZWJ3N2s5QXdJREFRQUJBb0lCQUdIc2JDQUt3elF1S2RTUgpjZTg2ME9qcitQNWdLb3JLTkFFam9ic2JDUFA2VmFCcTRRTlhjYllmRjc0NkFjR2dwSnVqU2NMUEQwWmoxbVFqCmk3UWpQVkdleUM1ZGMvTWlKa3djaXNoVCtSWER6VXRXUE13RVRpU1NpRmlDYk53Z0VVTXo2ME1mRW9iZ29rSFkKcEd0ZFFWWmFWK0VYK0VwNklBS2dMbUg3Rm5MQ0M0SCtaZGhRcm1lQ3J5WXJ6ajdIY3RMUktFLzZ6ZE5IeWwwZgpqenU2TkNycE5pbWFkdEgrb2I5UmpHaDIvMEZrTkNUMzJmS1Nma3pqSlhERFFXdVJRK2R0d0EwWWVjdWlqU0hUCk5rVDlwTHJFWE5Ydm55cGVuaFEvVHdJZlU3dGZPUnE3SzBjaGhSQkZqQm0rM1VaVDRCVHJkazI1NithejlZTHIKcy9YMUl5RUNnWUVBNUhCR0RiT3FDKzZHdTBaVTBsSjI1aTVFcmRvalJOZm55eFY3Nnppb1VaVTNpeHU1cWk5Mgpxbmo3MERTcFplbTZkTFlXa1RLSlRtM2NzMHA2cDU5dS9hdHozc3BKdzZodlZDRUJXREw3SE43WHg0aWx6TVNiCmt2UUFteGJnTGlZTENUdUZJdDJOd01XVFBTem9ONmlCQWdDdjM5M1I0bDV2ejhVWWI5VlJ2RGNDZ1lFQTNUd3EKYmxlbGNyUDFXcmpNbEV3YXVrVk93bzN1SlVjKy9jS1ByMEdnd1ZnOVY0bnV6VmhDQ20rdjVxd3JWNlZKTVhlZApXc3NjaythK0szV3hwcmFRQlVORVh0d1JnV1U0YUdTNWwxVzBwOEVwRW5NR2lGUHV3Zm1CNmh3TUdmWjJUZUZ4CmxTVVA3UEl0NjRyMlRDWTRCd2x6c1c5VkIwaDFtSElGQ1pWUVY1VUNnWUFkemtSbHIwYUZyZ2FvVXNIb2UxZ0cKS28xTmZjUFNUTFZ5dXdmakpnNVlMcmNEa0llR0hCRklwdVo4UVJMRk9GemFzNU40T0hiUDQrZkRBUG5GK3poNQpJckRJcGU0LytDOG1jL1AvOVE3c3NtckhIeDQ2L0lBc0NXZzIxQ0pHQXpLM2JxdXRZK2tGK1FHQUh1Ymh0RHU0Cjdpd0VjcVhhK21WdVg1SVRyV3F2dXdLQmdRQ0p0TDZRaWp1d2h2VnNyK1NmVmpPNHlCVTdJbzhlWXhlQmFvNTMKUHpscHY1d0hGaE12ZkFVM2E4ZW9wSGdpQ1A3akxKb2tmcExlT04wY1Boa0ROVlcyQU9YWXlkQ1hvMEtXTUVRWgpQNzdBUUlwcE1uSFpmNno0em02Z0l5OGhKZmtEaHhWbENYbTlPZzE5TkxVVU55SGV0M0pzK21pSnJQK05rVU16CmNONWVkUUtCZ0QvU2Z4dWg0RHdQMDVRbmJWSUtyMWNuZ3lpODVjUVNtNXhxSk1yWjQwUGE1d1hTdGp3ZFV6eDkKSmdUa0NEc0J5TFNJWWNXZ1Brb0RoT0lZdytxVEFmS0lMakdEU1hvUmxadEYxbGNaQTlVQ2dJbTBRcHZ0d1N6QwpUT0Y4MWcza05pRklwU2hGU1BvZ08rSG5GWnpxbU51Vk9KdjNaNnlFV1pZRExqWk43YTNiCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c281fa3075d86b905861397b6a92141d9817fa780cd26dde3bd0287c3e2bd76a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
