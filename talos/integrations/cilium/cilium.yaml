# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.0.0.0/8
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nmetrics-listen-address: \":9966\"\ndial-timeout:
    \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file:
    /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files:
    /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls: true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRR0lrcEIwckVVb2dmNkY5OS9ZQ3R0ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFeU1EVXlOekV4V2hjTk1qWXdPVEV4TURVeQpOekV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VVU2ErbnUzbjZoNTU5dDlBcENMN1M2YmM5eWE5b1pXaXJiS1hYVDR4S1pEUWZSbTUKdm5pSHREcGFzbFJVT2JDUXNIUzE4MGlNNXNBd2hsQWFGZmtoQUxucWhqUkpkeFNseXdNb0Z3RmJycGorUGIzVgpoWEdLaUk5YmVjRjBEaXVrcGMrS0Q0dlZrMkRlRG9ORm9JUE1pVStKd0ZNSXdtOXRUNU1QM0NHR3c4Z2RjWVB3CjUyMzJFWGplWm9SdklFbmdXL2ZraTlJcFhVdUNEUkI4M3l4R0hkYTFTTzNXYmpsLy9RTXZCS3dzSGptY2R3ZzUKMHFpVU5rVVF2emF3Wk43OEFZbDhDVUFuL0hPdUUyTWs4ZmpQY3NRc0dwclk1ZlZrNXMyM3lDQlgwT0pYRnZ1QgpqTHFIb1VIN0xrR3JZcDJ5ZXZqT2NLZW5FaTBkS3ZIdGJzVFJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCM2VYMlA0Q05SWUxTYjNNODFldUM1Tlh1M1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHak52RitYa0VZREsxb1RUOTRkNit3YjQ0NWNiZ3JqREg0dmxFTFc0YkdSalZPWkNtK2JBK25BCnVvS05wcDdSb0ROMU9TWVJ2VmcrbitHTFl0OE9mMU8ydm5oRDBQRHk5WHMrY2lqQmhiR2dOb1hhN01nWEI1bjMKVGJJQnlmSUtLc3p4dyt1MUxiNXFkZVNoS1ZwaTNSaVJ0bS9jUjNBdTdlbFh2NG5QbGVOeGwxZGUvN2pqeEJscwpkdEVnQ00xRWhRWnQ5T1Y4blExQnR4OFFucE1XbFpQSitBc0tSbTJxVGJrUXhuK1YwMFRmbGpDQk9TNXppM1ZvClNycHdnSU1Yc21pcFBySHRFallWTXJrZ0IwbnJSNEFiRm44U0FlalFSSHlIZGhXWVc5OE9maXhIOWxNZUY0QjkKUVA5VmhGNW5JNzBTZmtJV05sMVpadUpRMTNwenovMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmxFbXZwN3Q1K29lZWZiZlFLUWkrMHVtM1BjbXZhR1ZvcTJ5bDEwK01TbVEwSDBaCnViNTRoN1E2V3JKVVZEbXdrTEIwdGZOSWpPYkFNSVpRR2hYNUlRQzU2b1kwU1hjVXBjc0RLQmNCVzY2WS9qMjkKMVlWeGlvaVBXM25CZEE0cnBLWFBpZytMMVpOZzNnNkRSYUNEeklsUGljQlRDTUp2YlUrVEQ5d2hoc1BJSFhHRAo4T2R0OWhGNDNtYUVieUJKNEZ2MzVJdlNLVjFMZ2cwUWZOOHNSaDNXdFVqdDFtNDVmLzBETHdTc0xCNDVuSGNJCk9kS29sRFpGRUw4MnNHVGUvQUdKZkFsQUoveHpyaE5qSlBINHozTEVMQnFhMk9YMVpPYk50OGdnVjlEaVZ4YjcKZ1l5Nmg2RkIreTVCcTJLZHNucjR6bkNucHhJdEhTcng3VzdFMFFJREFRQUJBb0lCQUN4eVBmMWdJd3hyNXZoNAp2WDZwVmdUVTNWakZya09vdkppNlNSeERtalUxSlNuVEpVakhWNUZKb09SYmtsOCsvdm53QUNRZzArcHkwZHdOCnFTbFpwK0tERUs3dDFIb1hpMTFzWEV1Q0FlaWFZT3RuckFibyt0Sll1bDZGRlRHZTFOUFpsU1YrYmRTZEZxSGcKMHl2Vi80cUp0aUhITThpT3hiZWJrbjd1WHg4MUlNdy9BQTJZdFBtN0NvS1hxWmU3bGxFcUZLNGgyRzE2WHV4Zwo3R2hQT1RVSjFHMmRPNGcwaWpOeUxoMTNaL0N5YjBkYklQeHMrMUwzUmZld0U2Z0E5aVlsTW5xVVByeEMvWlFJClNrUXlDV200TWRCNkltQWNWTmlRUjMrTFc1THIxMHpFZTIxcXRNcGdxcEpGS3BTMFRLMEdDS2IxcHVybEdhTnYKWlY5cjVKRUNnWUVBeWZTcTFJWXgyUTNmZU9TTXRPS3RjVkJ6djZXNGJ1MVJsOXpBQ3BVekxSSEluak5qU2c2TQoxTEhpM2JoSFlLK2thNVo5ZUpuK3dLUFlPOG9RNlQ4SWlKajQ2ZXVzZjY4SVU4TWdIa0ZBejZpNno1bEV5VVdFClNadEI0QW5sZkNKU3d3T1lFSFRHYmR0ZldUa0ZFT044a1d5TGZzN21lNC8wMlk3Q2dFQnV3VjBDZ1lFQXlLN3YKajA4MGZ0SFplaG85WUJSbDJZb2dtY0FYYnFjOWpKNzQ0NmpzL3JhN2hieWFwSEZMT3ZyN2xYWCtwLzltUVpnaQpObCtkczRwUXNaNmtydXY1Y3kvYW1nZUNrSzk0d05TZTFnUjdqbXRWUGxJL2dvcTdNV3JSNlRBQ1dXNnNNQmtFCjVEU3A0bmU1L0d0bDZaWHpJcktleEdHbjFwR0hKYmQrdFhQVEZnVUNnWUFEUDNvWDNPaWtVd0xMRVBIcVh0TG4KUmFIMjdSVmdRMVRTbW14RVAwNEpaWVhTZFlVZFJjcWlDUkphK29HN1hsZklteXo5YVl5ZFVJVkR3T1l3dWlETApBWnJQT0VrWDdKcTNyaVd3RnVDUjltYTZ1LzVOTmw4QVNBenhLM2VUWFlIelBQV1BIakdxeHFKcjd1elQ3clNzCktoQzhRMXVWbFNVYzhwelNMemNZeVFLQmdDSm94RkNaTHhJVG55dHRkbHFVQk1haEJXZjNaTTBuUmNsbnRKc3MKYXI1ZHpKZG91RWM3MmI5YUsycjhHVmJxMXJpbWdpODZnOHEyQzVINDlwbTdna0Q2MG91WWdBMlkyS2FQamxCNQo0a21RSThTVXk2anhhcGxWakhwa0xmTHhvL3AzUDd4MVB5L0NnWlJEUWUwa05kVWNOVmJNdTc5eG9tK1lIOVN5CjhGMlZBb0dBUEs0VmM0NVRmeFhDc0NUMzBvNnFCL3ZsRW9wakJ4UllVSUN1WnZ3TW9rcENjNml1WmozUWx0clYKVmRnOEdMeklBMHhFdWdabjRwOEhwVTB5TXZWL1ptb0tjbVNkTGpEdGpUR1Bsc2IzY00zaW1OYnVWRWJQdVJSdwpja29SVmw0THg5bkJleFhrUmFNcTlGUUFxMnU5UTNibWxDRjZrb0hsb3dZRFNUUFBrclk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRR0lrcEIwckVVb2dmNkY5OS9ZQ3R0ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFeU1EVXlOekV4V2hjTk1qWXdPVEV4TURVeQpOekV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VVU2ErbnUzbjZoNTU5dDlBcENMN1M2YmM5eWE5b1pXaXJiS1hYVDR4S1pEUWZSbTUKdm5pSHREcGFzbFJVT2JDUXNIUzE4MGlNNXNBd2hsQWFGZmtoQUxucWhqUkpkeFNseXdNb0Z3RmJycGorUGIzVgpoWEdLaUk5YmVjRjBEaXVrcGMrS0Q0dlZrMkRlRG9ORm9JUE1pVStKd0ZNSXdtOXRUNU1QM0NHR3c4Z2RjWVB3CjUyMzJFWGplWm9SdklFbmdXL2ZraTlJcFhVdUNEUkI4M3l4R0hkYTFTTzNXYmpsLy9RTXZCS3dzSGptY2R3ZzUKMHFpVU5rVVF2emF3Wk43OEFZbDhDVUFuL0hPdUUyTWs4ZmpQY3NRc0dwclk1ZlZrNXMyM3lDQlgwT0pYRnZ1QgpqTHFIb1VIN0xrR3JZcDJ5ZXZqT2NLZW5FaTBkS3ZIdGJzVFJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCM2VYMlA0Q05SWUxTYjNNODFldUM1Tlh1M1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHak52RitYa0VZREsxb1RUOTRkNit3YjQ0NWNiZ3JqREg0dmxFTFc0YkdSalZPWkNtK2JBK25BCnVvS05wcDdSb0ROMU9TWVJ2VmcrbitHTFl0OE9mMU8ydm5oRDBQRHk5WHMrY2lqQmhiR2dOb1hhN01nWEI1bjMKVGJJQnlmSUtLc3p4dyt1MUxiNXFkZVNoS1ZwaTNSaVJ0bS9jUjNBdTdlbFh2NG5QbGVOeGwxZGUvN2pqeEJscwpkdEVnQ00xRWhRWnQ5T1Y4blExQnR4OFFucE1XbFpQSitBc0tSbTJxVGJrUXhuK1YwMFRmbGpDQk9TNXppM1ZvClNycHdnSU1Yc21pcFBySHRFallWTXJrZ0IwbnJSNEFiRm44U0FlalFSSHlIZGhXWVc5OE9maXhIOWxNZUY0QjkKUVA5VmhGNW5JNzBTZmtJV05sMVpadUpRMTNwenovMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9KVzFNVU5XYkVRalRjYUdreGs2N2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreE1qQTFNamN4TVZvWERUSTJNRGt4TVRBMQpNamN4TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJQamlBTWhHZFJ4NFo5VVdMSlB1MnJodjI1UkEKd0luVmpXM1RSbHhiTlVoczFqZ1diMTE3aGdQdVlhRi9USE0zTVc3TWVaMVFTZkxBUTNoa000dVZxWngzVElIVgpYS1lMU2E4UGYxZ0pUSFFsaHFWZUg3elVoMFdRWWV2bmYwWlRtWXBwZUhSVFk1NkxjRGJVZzBKSEhJRFhaSDdoCnIyMkh2NThKaVJHZUlYRTJjcHo4RzNrNzdkQUVXQ0lyQmVaa0VET3U5eVhjTzIvT0JZKzRScGN2YlZVWFlNT0cKcTdxYUdVYVBJckh1bW1MVnlmUzI4TGpRRnY1dHdtbGdMV2kxQWpvVTk1ZkxDMzlWWmVVTVhlbS9zdWFZZVhVMApEV2tEbXZ0VjlWMGJKNGVpeW5razV3N0Z4SndmU3psMzNZNzRULzQ5MEZDV0dhNmtLSm40dGkxMUNRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUhkNWZZL2dJMUZndEp2Y3p6VjY0TAprMWU3ZERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRUtXNXF3WjkzNk1QQ1NBaG9RZG5lZnlUVVd6aC9QckpWalR1TWxLSnV4OTV2ZDAKb3p0U2NwbUIxblliTXZ2S3BUYlFqUUxMOHpxVEV2eVZkMnFIR1krNmRJQVFhSTVkaGdObUN1Q2ZaL0gvd2dJMAp6R3pNT1NGU1hSU3BtcS9vaWpWNStHUGFmU2RDVU83b1JTUW1McmxNQUVmT1NwdzNZdHpuYU9FbkJCUGJObnRpCk9GUXIrVFFFQTNoWDNmeTdXd05weVBHRUxvejBUOHNzOE95c1ErcUlmN21QcTVEeXJMeU1rMFdpNThOdytwUEgKYTFJN3lLYzNqNk9uVXlkak9KTnE4S2duSUhwMG1oMGxDU2ZLaHR2RFBBalorRHJYeG9leGR4eXVWYTU1Y3VJOAoyWWJGUTJlOFRNcVcwSjBrNFphR3NrN2grek5MemY0T0xZUkluS0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBclBqaUFNaEdkUng0WjlVV0xKUHUycmh2MjVSQXdJblZqVzNUUmx4Yk5VaHMxamdXCmIxMTdoZ1B1WWFGL1RITTNNVzdNZVoxUVNmTEFRM2hrTTR1VnFaeDNUSUhWWEtZTFNhOFBmMWdKVEhRbGhxVmUKSDd6VWgwV1FZZXZuZjBaVG1ZcHBlSFJUWTU2TGNEYlVnMEpISElEWFpIN2hyMjJIdjU4SmlSR2VJWEUyY3B6OApHM2s3N2RBRVdDSXJCZVprRURPdTl5WGNPMi9PQlkrNFJwY3ZiVlVYWU1PR3E3cWFHVWFQSXJIdW1tTFZ5ZlMyCjhMalFGdjV0d21sZ0xXaTFBam9VOTVmTEMzOVZaZVVNWGVtL3N1YVllWFUwRFdrRG12dFY5VjBiSjRlaXlua2sKNXc3RnhKd2ZTemwzM1k3NFQvNDkwRkNXR2E2a0tKbjR0aTExQ1FJREFRQUJBb0lCQUZya2RhNC9qM2FldlU2aQpsSUpjUWhsQTdkYU9zdS81L2ZQUmtFSGE2anEza2ltSFU1SzFwdUVuVTY2TjlKeXh0b0VOWGZsU0J3eTB1UDg3ClZqd1h6MDlQWHdrZStJVTA0NTJXbGlndWxNUk9EQ0lTNThENXN4eGFHNks1R2U2eGYrQ2c4UWRRNlRqaDZSZlEKV0IrWlJsRGVDMUZOc3o1QjZpRnhhc3RTTEt3Wk9uY3p3OVA1dDZaMXNsYy9jQXlmVWNGR2orOVNFVmR2VkordwpqV1c1KytjZlo4NFEwYU92ZDA1emlWRGYwNzhrUldISnVzbmFrYk54cUhUOS8xU3RaQTB5Z0dSQ25Ebm8zVTRICmUveWNXQ2Frb0F2QzFaUzRoamo1N1g0U2NkUm12WURNSnFnSTRNdFRuZ2tRVW9VTHBDejFlTGhiZDM5SU9VNlIKNy9ITEJYa0NnWUVBMW9QMGljc1I5RitaVTZzUVJYTTMvdE4vb2x6Ylp3N1M1eU1FbXUzQnVKYWx3UkttOWw0RQpXbm1FNmpXYzI2Q1ZndTc1T1VmRi9GUGwrME5VLzV1Yi9tOXo2amFoV1Y1NFNQWkxPT0dXVUxidmt3U1BiMXd3ClZKS0lMcGxhTTNrRmdPVmhwV01oK0QxbnpYSm81YVMxYU4wNjZYNXFwVUdKZGRJVXJxZDJpY2NDZ1lFQXptdzkKaHpSZCtiRzA3Q05pc040eWFneTVaSGdrQVlaM1FlanBxWjR0OVFZbGZ0b29LWkVZM3UyQmtXTXQvTEtITU5MZgpGd3lJMDZEUTkwMFhwVWY2YU9yRS90d2VKcWJSMi9ZL2hhUElBSm9oNE96QVN2S0F3TnpUK3lFVDdjVmV1QjRVCnFacHdBL1N2SU5xbjFuOVZvanh3eGc1Vy9panIzUHBzWWZzZ2lxOENnWUVBeXpDd1ovalhKKytKcjJ2Z2ZMaFgKZU9QakNPc0YwNGVDRS9maWU5SHJaaW9rRlU3U29aaUtiUnlmM3EwcnlBbEN0WVFndzdZTmZpWUdPTXNkYndSNQpiVGNxeDlZNVhRcVR5eUNvUGRmSVp1bnc0Z1EyelJlNG05TTBkVmRDem5DNjJzM3JnUm4yYWtuWDBnMmwrS2ZjClFka1QzV21tSUtTRVRQclNKbUZ2Y2E4Q2dZQVNTWWlSNTlQRGdUalVDclo5a05IS2oySUZRcGQrQXhtaG55N0UKTmgxQUxkRTRrYjhwSDQraWdFd1FRMGNac2Y5RUZncHBrbFMwMnZSb1ZFNForR3g0eXdPMHlHOXJZVEFLV3FCNgpDRzU1ank0ZExSeEVCNFBja2pPOWRjcThMOVlhWFovYS9yR1p5QjJUdll0TTkyN3d0b1lQSmNvVExqRG5ITkJwClJjUTJSUUtCZ0d5U2UwZFU4SUdDam9QTGM0TXVDSjVaWUk0UzBXNHpLTHNHVVBIQlN4OW5iMGtTMU8ycUJDZUQKU2JWdTRtMXIwQ3ExdkM1QkFmZmJKVUlpallrL3g3ZUdQbTQvcjNGYUJ3azk0aWVXbmpmN0FDQTVrdXlka3hpcQpBUXNiY2JVN0MwSmxyZzBhTVVHdGhzUkVXK3hvN3d2M25NWVRNalAyUDBDOSsyZThDdU9XCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRR0lrcEIwckVVb2dmNkY5OS9ZQ3R0ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFeU1EVXlOekV4V2hjTk1qWXdPVEV4TURVeQpOekV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VVU2ErbnUzbjZoNTU5dDlBcENMN1M2YmM5eWE5b1pXaXJiS1hYVDR4S1pEUWZSbTUKdm5pSHREcGFzbFJVT2JDUXNIUzE4MGlNNXNBd2hsQWFGZmtoQUxucWhqUkpkeFNseXdNb0Z3RmJycGorUGIzVgpoWEdLaUk5YmVjRjBEaXVrcGMrS0Q0dlZrMkRlRG9ORm9JUE1pVStKd0ZNSXdtOXRUNU1QM0NHR3c4Z2RjWVB3CjUyMzJFWGplWm9SdklFbmdXL2ZraTlJcFhVdUNEUkI4M3l4R0hkYTFTTzNXYmpsLy9RTXZCS3dzSGptY2R3ZzUKMHFpVU5rVVF2emF3Wk43OEFZbDhDVUFuL0hPdUUyTWs4ZmpQY3NRc0dwclk1ZlZrNXMyM3lDQlgwT0pYRnZ1QgpqTHFIb1VIN0xrR3JZcDJ5ZXZqT2NLZW5FaTBkS3ZIdGJzVFJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCM2VYMlA0Q05SWUxTYjNNODFldUM1Tlh1M1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHak52RitYa0VZREsxb1RUOTRkNit3YjQ0NWNiZ3JqREg0dmxFTFc0YkdSalZPWkNtK2JBK25BCnVvS05wcDdSb0ROMU9TWVJ2VmcrbitHTFl0OE9mMU8ydm5oRDBQRHk5WHMrY2lqQmhiR2dOb1hhN01nWEI1bjMKVGJJQnlmSUtLc3p4dyt1MUxiNXFkZVNoS1ZwaTNSaVJ0bS9jUjNBdTdlbFh2NG5QbGVOeGwxZGUvN2pqeEJscwpkdEVnQ00xRWhRWnQ5T1Y4blExQnR4OFFucE1XbFpQSitBc0tSbTJxVGJrUXhuK1YwMFRmbGpDQk9TNXppM1ZvClNycHdnSU1Yc21pcFBySHRFallWTXJrZ0IwbnJSNEFiRm44U0FlalFSSHlIZGhXWVc5OE9maXhIOWxNZUY0QjkKUVA5VmhGNW5JNzBTZmtJV05sMVpadUpRMTNwenovMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUpFM2lDSVdTWE5HZXdSYk9pYVNwMHd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreE1qQTFNamN4TVZvWERUSTJNRGt4TVRBMQpNamN4TVZvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS0dGY0hBbmptMWkKQW1zRWt6a2lYZy9QVTYxYVpaR1BobVFNeWVJdzNMc3RDbXBzK0xxU2RxU0duemxQOFZUUlpmTTdKOUUwRzRsUwowN2Jock1WOE9ReSsyU0RpSm13eHdVQjJSTCt4a2NLRi82OHlzbCtpZkNQZjhPd0JzS0JLd0ZZVW1xOWwyVzV2ClZvcFFZZlZvT3BQaW16UkRJZUZPbXFLVWpoRnZnUWJ6RFNlQzJHNDFQVHVBOXRTWHdmdzZlcUxOd3U5S0ZIeDYKeWtnL3gyNFJKd2xWc2pCSzEzYkVPcWtMRkpZVUgyQjB0bnpkdjgyYkx6alU3c044VXZhSWJ2a2lzR2JmK2pFeAp0VWdSTFkwQnpnaS93SFk4dEhtVWFVU0tPVnlmbUN6dXl2QzNMZmNyd25NRDhtSTRlYlNEZ3R0b2NoT3hXL3FVCk80TDBCeUUwRlQwQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVQjNlWAoyUDRDTlJZTFNiM004MWV1QzVOWHUzUXdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGTnVvWTk2L3RIYjcKNU1hcGtTVWFRTG01MGx1dHdpYjd6a1FubTJuS3ZKam4yeUhOMFFyZk41aHorMWRRekFEVFUzeXRVT1U1bDgxdwpvdVBRUm9iZzNxOUpyYllROUZ2dlBMMnN1YUZFUnI0bEorRHFLWFo1QXhuYTY5Y1pMdE9PYjFzWm1sUlNwN2krCjM1S2J0aDJBUGdMTi85UVk5OGE5Vlg4dTVzR0lHTDBsd0NkSTFhRE1uWFQ4TE81dmZQQThiTGVoSmhwRUQ1SUIKRVR1QzRQZ0RrN0lpQlVmeURNWXdHeGFoRGlZOHRtcytMMFQwaHZ5NTN4c3p6ZkZpT2Z0VUppR2NzdVFGVVZNZApHUjJHQkM3SXY1YysrNi9kcWhJVmUyb3QzbzVNRGQ5c3lITkxRMCtUUzYra3NEK2wyUkVTMTljNk50cFRmRWZWCmpJSnpWVVdlY3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb1lWd2NDZU9iV0lDYXdTVE9TSmVEODlUclZwbGtZK0daQXpKNGpEY3V5MEthbXo0CnVwSjJwSWFmT1UveFZORmw4enNuMFRRYmlWTFR0dUdzeFh3NURMN1pJT0ltYkRIQlFIWkV2N0dSd29YL3J6S3kKWDZKOEk5L3c3QUd3b0VyQVZoU2FyMlhaYm05V2lsQmg5V2c2aytLYk5FTWg0VTZhb3BTT0VXK0JCdk1OSjRMWQpialU5TzREMjFKZkIvRHA2b3MzQzcwb1VmSHJLU0QvSGJoRW5DVld5TUVyWGRzUTZxUXNVbGhRZllIUzJmTjIvCnpac3ZPTlR1dzN4UzlvaHUrU0t3WnQvNk1URzFTQkV0alFIT0NML0FkankwZVpScFJJbzVYSitZTE83SzhMY3QKOXl2Q2N3UHlZamg1dElPQzIyaHlFN0ZiK3BRN2d2UUhJVFFWUFFJREFRQUJBb0lCQUVqR0xwclp0N3BnNW1ZQgpjYlBVWUQwUFZNeE9abVRuSGM0R1ZRK3NwRWRSUzlnWHNSbWUxQVhkQWZCNHJHdGl6V1NCeXJiZm0yaU1BUWZ0Ck5rTGtiVy9vclR1N3FVUW1Sc1FjaFcwNVBFdEF4S3JUVkxyeUlxeW5RWTJVVlZoalZiVnpJeDdUN050dEhyakMKN3QvN1RpbERlRnBieFBBVzBtVmVPWVJ4a05qb0FpQ05Wc3dma2laVWhlT1BYbG9xRHVTdndjV2lSWlR4RnJOUApWT3RNYzBhL1k0Tm5MYXIwY1FmQnRRaUVwV1dJcnAveUFvNHk2OE1NbWJmQjBTWHJGamVsbDVTREh0OUNETjhrCkpOUkNUZ3BYeEFGTE81K0Q0b3d4b1BkOWRpT1F3K3FoUUR5dmNXNStmRW5vRXQycURGaUphWDYrQlhIN25lbVMKcHhkSUZxRUNnWUVBMUxKVzN2ZlZJcnhZeFlkOTRBYUxnOVZoaEhCVXJYdVhYd1pFL2UyVTFLNG1ORjkxZFEzZgpydlh2ZTk2QXhZS3BSYUNwUEw3dytpeTBsbEJqZDBqMWYzR1I4bUdINlpYRDhYN1BOT3dOM3d4ZTVzN2VacHQwClpBU0dkWGkrcHFmNDBSN3dINHVrRXpKd041VExIKzlVbGFhSHpYa0w5VGFEYVFmUmtHUXRLb01DZ1lFQXdtZmMKRkc0UkRPdTJyNzFxVWp5aURlalV0ZUlzdU5wRWZRdHBldmRJcVpTby9LV3JhZUhENmJacHltMXEzVFlhbkl6YQpxL29Fb2dhMm1rMUVNdTY3MGlyZXhzK2pPRENjRDJBOXRMbE9GRERVK0RzKyt5dFRIcENrU0xOcFFKUVhJaWdECmxMYitncy9OUmNyU3RlV3JhQllhSDRGRDZ0TENxQ0N2NFBwWXRUOENnWUVBaTNXL3hnU2tDRm1NcnordXhpUWsKZURXQjhrK2hCZnNDZm5qaTVjaFFqTDcvSjlucmJ1dkEzYnc5NFc4NzZjVkpiZkR3NW5hZ0ZMa1pVM0cwTmpOdApYTG0vb3poVjRFK2xvWU92SXhrZjR6NytQc0luU3duazMrdWpxZ1NZcFRkL3lzWkpWYlcreUNPTE5yWm1GVE5jCnQ1N3dia1pQRStKQmVhMTV0LzRuS3pjQ2dZQTFkKzFPN1NyaFc5OUdISm1tZnFpdm5LOE1TMld6ZmN6Q2U2WUsKUFFNT0tTWUZQdWVUV3BYUXJPd1IwZUJIY1Q4R2ViTVhBOC9NWkg1S21CKyt4bXlBRkd4clQrWjdhTnN6VzJ2OQpUYzRNdlpXRnBIM2hCUHg2ZHB2SXB4ZTJ2RVJVajU3VWd6UWk5RlpuOEszZGU0cVdPU1g4TGtob3lJampSd0k0CnBZSktid0tCZ0VENVhjaE92NWl5c2xMb3JOM3FIbG5OcXVDQzRLTEtOL1dKRlJIMEh1U2Z0SEVuSkszZ2ZpZDQKYTJQWWtqVlRaa0VPUUtzV1hxUVBUcVhBSkJJRmFQRjhmZGUvQ0pmKzdNWFd0OGw5d2lROXJnK01FRWhVYzBGbAp2UXdxM3dLWjdDbHF2TG85TjhreVA2aUFDdmlweVliOVhYMExkL3RVSm9jZmJERmpCTWh1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    metallb.universe.tf/loadBalancerIPs: 192.168.50.195
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 0efd90b230059d5f365972ac9f23f8740104c8df11451a92187a5a7cf2048d2b
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: bd2b1b02e8b333410f9736e42dc2a6077c0d933efda3a6b6a1f68be20c9049fa
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
