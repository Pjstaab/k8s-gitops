# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRGJYNzN2SnRmWG5haWhqUFdRVEN0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXpNVFV3V2hjTk1qWXdNekkyTURFegpNVFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tmZVJ3dU85NFpmU3dpZTVJWGM3ZTNjSktTRDRBYTMwVzRCTlRIN29oRUt2NHY5MnYKbHJCUElwcU5NWmVTR1VSY1laWkNDcXU1M0pCSkJvSmZ3UkZyZnIrY1NGVEZFYW1Zc1M3OTZ5TEVEcXkxbEphbApGZVkxTlh1SEoxRjhrbGp0azJ6N3Z5aE4vaXdHTjBJeHVkUHFqdnczVk5Mc2FGcFMvWnRVVjdPT1VMSndwYkpGCnF6eEFBellOVkdrVnJoVzdQNjlGTldWTFZBUnorVGNJZ1Fma1N2aGtCeERycENYeEhndzk5eTBINDE3U3lCS2kKYWdCOVpCNEtlS1dqbUxxVGpSWm5jajd4eHBVKytyNzVaUlZZQ2dyQkZWSXE5cTU1c3hUdGt3cXhwVmIyMmcxbApGdG1RL2dQdnRWTU9neGdkWmNvMnFKb09LaTVtbGZqWUpzTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwa3BhQVFkR3dyclNKV1VVZXFibVNQMGxFUmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNDZxcHUycmlZaTIxYkRab2dVcjRKcFlwSlhGbmVqVWRXYlFiMXAwVTJDUHhHRXpVYXlWa2x0CkhDTzJ6a3RmOU9HRWtQUC84WkFHbnorc2JoRjFCUVowQnozYmlRQlBSSFcvMVMxbGhqbjd0RExXbUMvZG52YVIKWDFSc1RSY3FiTURza1BvZVZaYzBjVDNYcGU2dUJENTdDTm5GR0NTQWIvblg1S2UwUm1BTjR0UUJObVZ6SXdZTgprd3pLQUFVTEliQXVyT25pbStnRDFJNnlxaTNuZFlEU2JLVFpIYUE5U1F6MWh1RVVocGEzOFd5NWxmLytyL0QzCnZVd1pHOXhYTzg4S21MMEo3aE45NzhFeHp4SENZcmVvYTBBalA5VHBEOHRKdzdTY2hPS2Fuc2xuQVB1TGhWalkKQXdJVEFTVXFkVDhBMm5kc2ZUY0poNHcvdHFlY2J0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcEgza2NManZlR1gwc0ludVNGM08zdDNDU2tnK0FHdDlGdUFUVXgrNklSQ3IrTC9kCnI1YXdUeUthalRHWGtobEVYR0dXUWdxcnVkeVFTUWFDWDhFUmEzNi9uRWhVeFJHcG1MRXUvZXNpeEE2c3RaU1cKcFJYbU5UVjdoeWRSZkpKWTdaTnMrNzhvVGY0c0JqZENNYm5UNm83OE4xVFM3R2hhVXYyYlZGZXpqbEN5Y0tXeQpSYXM4UUFNMkRWUnBGYTRWdXordlJUVmxTMVFFYy9rM0NJRUg1RXI0WkFjUTY2UWw4UjRNUGZjdEIrTmUwc2dTCm9tb0FmV1FlQ25pbG81aTZrNDBXWjNJKzhjYVZQdnErK1dVVldBb0t3UlZTS3ZhdWViTVU3Wk1Lc2FWVzl0b04KWlJiWmtQNEQ3N1ZURG9NWUhXWEtOcWlhRGlvdVpwWDQyQ2JDMndJREFRQUJBb0lCQVFDRjFwa2t6cFNxVmVxKwpLYnhqelZBaExqYUQwandBZzNVSVE5SDFkSDh4b0NzTS9yQVZ5bm95S1dtdk1JYXZMVGZlSXRqcmExdEdveHdUCkR1VE5uSDNjQlFsSzA5K0ZhVldoRTZtMG1MbDA1S3ZLSXRoZ0FtMkpKYmNZeFBrY2JzZEVwd3VwMm1PazhnWkkKR0hZWGw2ZkIxZzJKeDg3RzVERjZEVGR4Yk5xQUZBSi91RUpudmxlWkxBbElHUDlVL01xVlYxemlLZ3lPbGFzVQpSK3hDN1RnaTYyWXp3bzZUSGVlWlpDWjdEUEZtWGN3NHdhOGlyajBicVlaYmI2MzFGMGt3aXdVczhlelNhZTZ4CkdzQk9SaGVTRnF1R096VjRYSGRPaFpSQUhFRnZWU1dXaEZMdHc2emZQVGE0a0FidW9YQnlTd0xJMzlHQnJtdXMKcG1XSmg5UmhBb0dCQU5mVGpVUG9wckx2a0ZRUkhrVjYyUGliRFdzb3k0TGdtMjZKdW42aVBrb0FOOUt3cUU0bApRaWdXcGQvVEV6UEdxanBXSEY5ZWZxVzBFUnY0cnBVcXBYUWdmbEFSV1BjOWdhaXIrNmhtcFFsYnQ1OEJZejdTCjBrYno0aDhNNC8veW5NK3lpL3p1TVVxUFl5UGFhVS9XdDF3VGRnZk9VM2pmTkFEcEs4aW9yMGVuQW9HQkFNTWMKSzRjN1QrNlRib3piSnN4ZnBhb1JkVUdDM21EUGM0RE5HVjMrM05wdEszajRjT1dWSkorejVCM0FBS2xMbU0wZQpYNEI0ZmRiQkVzaElMc0tVZG5ZcnJZVkxjZmpRclU3clV6RXZKbWs4ZlNRQUw4TlRjb0dNVW1xTWx2M3dodlY1Ci9RVHB4eVdraENya0ZiQk41YW5hd2FxSno0b2tUZHFPRjdNRXJOR3RBb0dBRE5TT3VWTERWaS9YcktlMzNQbUkKbkg3Yk5WdWZmWkJNclMyUzRLUlVmNkd6cjlyQXBxU2dZakcyZXEvWm5HSmJERXpDTXdrekRqYStMYU9DL1dzagptdHV6cHA3aFl4Rk0rL0g5YSsxdU1qZzVta0pDM0NFOFR1dUFyY2ZlWmdET1FhcWpsODJ4TUhXRnQwUHNyc3BjCjdDUmNCK3JFRzVOcFRBU1FqY1U1WmxFQ2dZQnRpSXNIU0V6L2F0Vk5UbHJoc1hDWG9XVnFlY1hPSTZoOFRxaEgKRktWNEdvR2xVQlJSVHdGWWh1MHhwbkM0bWpBV04wNzJHSzdNdVdlSitMd0hrTUZRWmdUc0tBYTc0S3JxKzBHaApBdzlWVlJnTDllN2FnU1p2aEE5Z3NieXlveTJnOGZNUnB3eWVIVlgxbmtadXk4eDdKc3hDcVV0U0NqK0t5dXFUCkhiVEhvUUtCZ0R2bllUd2M5NS9mdE9DcUw4RFhvbEtqUTJDb29YVElHUU9aWkREbndKTG9BMnlEc1lTSGNWMVMKdnpMRUl3MG9jaUZSMExGNEEwWWZxaDFTbnJrT0IzTzJyRElVdjhldEdoemc5RzlSTnc5dlZXMjNIeWM1MGFtegpLM2IyTTdCM3FpVlNGNkREOFJaa3lVZEV1c2J3a3RoUHBXL1Q2TlVyS2U2RzVjNzc5MExoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRGJYNzN2SnRmWG5haWhqUFdRVEN0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXpNVFV3V2hjTk1qWXdNekkyTURFegpNVFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tmZVJ3dU85NFpmU3dpZTVJWGM3ZTNjSktTRDRBYTMwVzRCTlRIN29oRUt2NHY5MnYKbHJCUElwcU5NWmVTR1VSY1laWkNDcXU1M0pCSkJvSmZ3UkZyZnIrY1NGVEZFYW1Zc1M3OTZ5TEVEcXkxbEphbApGZVkxTlh1SEoxRjhrbGp0azJ6N3Z5aE4vaXdHTjBJeHVkUHFqdnczVk5Mc2FGcFMvWnRVVjdPT1VMSndwYkpGCnF6eEFBellOVkdrVnJoVzdQNjlGTldWTFZBUnorVGNJZ1Fma1N2aGtCeERycENYeEhndzk5eTBINDE3U3lCS2kKYWdCOVpCNEtlS1dqbUxxVGpSWm5jajd4eHBVKytyNzVaUlZZQ2dyQkZWSXE5cTU1c3hUdGt3cXhwVmIyMmcxbApGdG1RL2dQdnRWTU9neGdkWmNvMnFKb09LaTVtbGZqWUpzTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwa3BhQVFkR3dyclNKV1VVZXFibVNQMGxFUmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNDZxcHUycmlZaTIxYkRab2dVcjRKcFlwSlhGbmVqVWRXYlFiMXAwVTJDUHhHRXpVYXlWa2x0CkhDTzJ6a3RmOU9HRWtQUC84WkFHbnorc2JoRjFCUVowQnozYmlRQlBSSFcvMVMxbGhqbjd0RExXbUMvZG52YVIKWDFSc1RSY3FiTURza1BvZVZaYzBjVDNYcGU2dUJENTdDTm5GR0NTQWIvblg1S2UwUm1BTjR0UUJObVZ6SXdZTgprd3pLQUFVTEliQXVyT25pbStnRDFJNnlxaTNuZFlEU2JLVFpIYUE5U1F6MWh1RVVocGEzOFd5NWxmLytyL0QzCnZVd1pHOXhYTzg4S21MMEo3aE45NzhFeHp4SENZcmVvYTBBalA5VHBEOHRKdzdTY2hPS2Fuc2xuQVB1TGhWalkKQXdJVEFTVXFkVDhBMm5kc2ZUY0poNHcvdHFlY2J0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcEgza2NManZlR1gwc0ludVNGM08zdDNDU2tnK0FHdDlGdUFUVXgrNklSQ3IrTC9kCnI1YXdUeUthalRHWGtobEVYR0dXUWdxcnVkeVFTUWFDWDhFUmEzNi9uRWhVeFJHcG1MRXUvZXNpeEE2c3RaU1cKcFJYbU5UVjdoeWRSZkpKWTdaTnMrNzhvVGY0c0JqZENNYm5UNm83OE4xVFM3R2hhVXYyYlZGZXpqbEN5Y0tXeQpSYXM4UUFNMkRWUnBGYTRWdXordlJUVmxTMVFFYy9rM0NJRUg1RXI0WkFjUTY2UWw4UjRNUGZjdEIrTmUwc2dTCm9tb0FmV1FlQ25pbG81aTZrNDBXWjNJKzhjYVZQdnErK1dVVldBb0t3UlZTS3ZhdWViTVU3Wk1Lc2FWVzl0b04KWlJiWmtQNEQ3N1ZURG9NWUhXWEtOcWlhRGlvdVpwWDQyQ2JDMndJREFRQUJBb0lCQVFDRjFwa2t6cFNxVmVxKwpLYnhqelZBaExqYUQwandBZzNVSVE5SDFkSDh4b0NzTS9yQVZ5bm95S1dtdk1JYXZMVGZlSXRqcmExdEdveHdUCkR1VE5uSDNjQlFsSzA5K0ZhVldoRTZtMG1MbDA1S3ZLSXRoZ0FtMkpKYmNZeFBrY2JzZEVwd3VwMm1PazhnWkkKR0hZWGw2ZkIxZzJKeDg3RzVERjZEVGR4Yk5xQUZBSi91RUpudmxlWkxBbElHUDlVL01xVlYxemlLZ3lPbGFzVQpSK3hDN1RnaTYyWXp3bzZUSGVlWlpDWjdEUEZtWGN3NHdhOGlyajBicVlaYmI2MzFGMGt3aXdVczhlelNhZTZ4CkdzQk9SaGVTRnF1R096VjRYSGRPaFpSQUhFRnZWU1dXaEZMdHc2emZQVGE0a0FidW9YQnlTd0xJMzlHQnJtdXMKcG1XSmg5UmhBb0dCQU5mVGpVUG9wckx2a0ZRUkhrVjYyUGliRFdzb3k0TGdtMjZKdW42aVBrb0FOOUt3cUU0bApRaWdXcGQvVEV6UEdxanBXSEY5ZWZxVzBFUnY0cnBVcXBYUWdmbEFSV1BjOWdhaXIrNmhtcFFsYnQ1OEJZejdTCjBrYno0aDhNNC8veW5NK3lpL3p1TVVxUFl5UGFhVS9XdDF3VGRnZk9VM2pmTkFEcEs4aW9yMGVuQW9HQkFNTWMKSzRjN1QrNlRib3piSnN4ZnBhb1JkVUdDM21EUGM0RE5HVjMrM05wdEszajRjT1dWSkorejVCM0FBS2xMbU0wZQpYNEI0ZmRiQkVzaElMc0tVZG5ZcnJZVkxjZmpRclU3clV6RXZKbWs4ZlNRQUw4TlRjb0dNVW1xTWx2M3dodlY1Ci9RVHB4eVdraENya0ZiQk41YW5hd2FxSno0b2tUZHFPRjdNRXJOR3RBb0dBRE5TT3VWTERWaS9YcktlMzNQbUkKbkg3Yk5WdWZmWkJNclMyUzRLUlVmNkd6cjlyQXBxU2dZakcyZXEvWm5HSmJERXpDTXdrekRqYStMYU9DL1dzagptdHV6cHA3aFl4Rk0rL0g5YSsxdU1qZzVta0pDM0NFOFR1dUFyY2ZlWmdET1FhcWpsODJ4TUhXRnQwUHNyc3BjCjdDUmNCK3JFRzVOcFRBU1FqY1U1WmxFQ2dZQnRpSXNIU0V6L2F0Vk5UbHJoc1hDWG9XVnFlY1hPSTZoOFRxaEgKRktWNEdvR2xVQlJSVHdGWWh1MHhwbkM0bWpBV04wNzJHSzdNdVdlSitMd0hrTUZRWmdUc0tBYTc0S3JxKzBHaApBdzlWVlJnTDllN2FnU1p2aEE5Z3NieXlveTJnOGZNUnB3eWVIVlgxbmtadXk4eDdKc3hDcVV0U0NqK0t5dXFUCkhiVEhvUUtCZ0R2bllUd2M5NS9mdE9DcUw4RFhvbEtqUTJDb29YVElHUU9aWkREbndKTG9BMnlEc1lTSGNWMVMKdnpMRUl3MG9jaUZSMExGNEEwWWZxaDFTbnJrT0IzTzJyRElVdjhldEdoemc5RzlSTnc5dlZXMjNIeWM1MGFtegpLM2IyTTdCM3FpVlNGNkREOFJaa3lVZEV1c2J3a3RoUHBXL1Q2TlVyS2U2RzVjNzc5MExoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRGJYNzN2SnRmWG5haWhqUFdRVEN0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXpNVFV3V2hjTk1qWXdNekkyTURFegpNVFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tmZVJ3dU85NFpmU3dpZTVJWGM3ZTNjSktTRDRBYTMwVzRCTlRIN29oRUt2NHY5MnYKbHJCUElwcU5NWmVTR1VSY1laWkNDcXU1M0pCSkJvSmZ3UkZyZnIrY1NGVEZFYW1Zc1M3OTZ5TEVEcXkxbEphbApGZVkxTlh1SEoxRjhrbGp0azJ6N3Z5aE4vaXdHTjBJeHVkUHFqdnczVk5Mc2FGcFMvWnRVVjdPT1VMSndwYkpGCnF6eEFBellOVkdrVnJoVzdQNjlGTldWTFZBUnorVGNJZ1Fma1N2aGtCeERycENYeEhndzk5eTBINDE3U3lCS2kKYWdCOVpCNEtlS1dqbUxxVGpSWm5jajd4eHBVKytyNzVaUlZZQ2dyQkZWSXE5cTU1c3hUdGt3cXhwVmIyMmcxbApGdG1RL2dQdnRWTU9neGdkWmNvMnFKb09LaTVtbGZqWUpzTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwa3BhQVFkR3dyclNKV1VVZXFibVNQMGxFUmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNDZxcHUycmlZaTIxYkRab2dVcjRKcFlwSlhGbmVqVWRXYlFiMXAwVTJDUHhHRXpVYXlWa2x0CkhDTzJ6a3RmOU9HRWtQUC84WkFHbnorc2JoRjFCUVowQnozYmlRQlBSSFcvMVMxbGhqbjd0RExXbUMvZG52YVIKWDFSc1RSY3FiTURza1BvZVZaYzBjVDNYcGU2dUJENTdDTm5GR0NTQWIvblg1S2UwUm1BTjR0UUJObVZ6SXdZTgprd3pLQUFVTEliQXVyT25pbStnRDFJNnlxaTNuZFlEU2JLVFpIYUE5U1F6MWh1RVVocGEzOFd5NWxmLytyL0QzCnZVd1pHOXhYTzg4S21MMEo3aE45NzhFeHp4SENZcmVvYTBBalA5VHBEOHRKdzdTY2hPS2Fuc2xuQVB1TGhWalkKQXdJVEFTVXFkVDhBMm5kc2ZUY0poNHcvdHFlY2J0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU42NDI3T3AzV3hDcldXT0tyZkowK3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeU56QXhNekUxTUZvWERUSTJNRE15TmpBeApNekUxTUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1Fc3JSTWUyUHRIeXMzTVdxOWhoOTlRNU5WN3QKL09JMlNaeTFzeVFIVmJJcXh0aGM2MlhVSzQ1cHRXbVpVSFlqZ0xEWTZqK2dNOG1IR0wwdWxkTC9aaHIxa1JOMQpGYlpka2RCekwrUmRTWWpEczhWNFNtdjlzMmNIdVo2dGlodnUxaHFTb2QyVC9ubUtwUklXRGRjK3A1eW1oR1IrCmdzM3FHWVJrVy9TcVdyK1c5dUJaN3pWNXp2ZmFTbWV2WTdtM3ZuVklBNVZUa1pqd3NWVERtYnVFYkJFYnBoVGkKcTg4b2w0alI0NjRTNDNPSWo0UCtHZEJ0SlpSOS9Ra3NMNlAzdjQvanBLM2ZMVVhJS3pXOG1UVXkzSWxMUnJKMQp3ZGZiWjRLcGYzRTdLS1NPTnNjZzE1MmNkQkhQY0w1bXlZRnBwVlR2TzBOb0I3UkNpb3JjK3oyWHF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU21TbG9CQjBiQ3V0SWxaUlI2cHVaSQovU1VSR0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRVNmQW9vSXF0UUF5aEtSTnZwT0w0Q1BKT25vdU9qWEhoTkhRMU45SGpEUjIybFEKU3M1eUx6SWkzR2Zid1d2UnFldm1nOHVpOXNyZWx4dHZDa0EvZ3J3SGJUdnBQQ0dPRXJTTWlhRm94eGNnbndMNQpwc1VQMEtMQThkdjJEeTZhMURhWGl4dElwUG9sd1VoVkFGOFY2VWlpcWFlWm50VnVaTlYwb1hPYjY4aW5OK2lPCmR4RkRocVprZkVvbEhERzFBQ0hwd0hJTS9xMnVmU1lYYmFRandPRDV3L0J3ZWg4a3pTalphVENFNjBsZWdORjAKdUh0RWZVKzhMUDFRS24rN09wdThONXVha3MvQ3FiU3c3QmJ5SEZEVFdnbXpYcGlVWnBUTVp2d3Z5OEpXdWoycApJNDdWL1diZ0xydmQ3b1NDY05aR0RyR29CbTBHbG1lUTArOXRVNXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbUVzclJNZTJQdEh5czNNV3E5aGg5OVE1TlY3dC9PSTJTWnkxc3lRSFZiSXF4dGhjCjYyWFVLNDVwdFdtWlVIWWpnTERZNmorZ004bUhHTDB1bGRML1pocjFrUk4xRmJaZGtkQnpMK1JkU1lqRHM4VjQKU212OXMyY0h1WjZ0aWh2dTFocVNvZDJUL25tS3BSSVdEZGMrcDV5bWhHUitnczNxR1lSa1cvU3FXcitXOXVCWgo3elY1enZmYVNtZXZZN20zdm5WSUE1VlRrWmp3c1ZURG1idUViQkVicGhUaXE4OG9sNGpSNDY0UzQzT0lqNFArCkdkQnRKWlI5L1Frc0w2UDN2NC9qcEszZkxVWElLelc4bVRVeTNJbExSckoxd2RmYlo0S3BmM0U3S0tTT05zY2cKMTUyY2RCSFBjTDVteVlGcHBWVHZPME5vQjdSQ2lvcmMrejJYcXdJREFRQUJBb0lCQUc5dXFQVkZzQXJkTWRtdAovMHUwSTFMa0hRdjVMdWZYV1dPWlg3WDVTY2loZWYxTytRWmcxdE1iL0NyNlhtenFWR1hvZ0g4K0dPbHJyd2NoCi9jRXd4eUdkM2tyTjB1RVZNL2ZxYnkzK3lXZHh3OGg1VitBVWptakRuWHByS1kyaGpLdHFmQm9sK0JDK08vMDIKYzU2aS9UeEZPZTRyWGdvMXd2SHkxa0FXa01PZXhUL3c1SWxGb01QaG8vRXZaenozRW1xQ1NkTnNNVmhZSXJBUgpzdzROa1o3Y0lROVBMYm9ieFI1c2dydzRZYWxFL2s4azNxay9hMHQ3d1ZTYU5HN25mV20wc2ltWVNOMngrdjNsCjZncVoxTjhUM3lzTVk4amFCQ0RPOWVoTTVWK2NZRzM1T29zcFFJOUJ5Qk1FVVRJbUhvTmJWREZmZmRWTW05dk8KVDNSYWJCa0NnWUVBeWVzZCtiQnNkOU51STFzYzFMSERBMWFReDhRMmJoRGlmV1k4VzVHay9mKzFadE5QVmFWaQpiYnh4U1V5ZDdSNE5GMFJ6VHQyOXFXd2RWT0ViZmYzSjZVajlHQ2pFNUJLSHh4Q1E5QmdCSGdFdW5GQWhjeFlHCjl5N2VYNFlneVpUYUI0ZGc4OGd4WW9ScDNnZDY1Nm84K3BkVHBIV0Q1b0lTRVE4Wk1iOXp5aDhDZ1lFQXdSVngKVXNrdVlFcDJDRUlKeW4yY3N5dGx5SGwyL1p2ZURUZ09VNVlUQ1JEMVE5K0F2SlJYcFk4c21xQU1HS0VodjRvdQptUFlvdVhnNC85Y1JucFF3UUU3ckFvdGM0a2UvUVZVOElibXVSZlRCcUZxOGVQanRYaE1veEZENEY1dnpKRVJVCnJjVlhORjJGazdHZTA5a1RBWUZCTm92V1NOUGVLUlo0Tm1xOTJQVUNnWUVBb2tIRnZMZ0E4ZWw5UC93Zmx1dWkKQWpTMTgxSEJTNEZWLzk3LzhiV0FHSHc3a1gyTTZ3NFRvb3NqbmZ0cmpQZnhIUmxzYjV2UXBTeTBCVmsvZG1kUwpzWnh0aGRSOUk2bWdZbDcxbkxFTmRNY09aWjRld3hTWVZGbmRhSFdvTTFUaVA5cVNGbFJ4R3ZHOUFTYVJwVWd2CjZFOWliMjNmcUlRdGNIZnBqd2lDUzVFQ2dZQkhaRTVLZGVpWDRmQlNqVmhoYnFDSi92bmJiazM0NTdEcTRsY3AKd011NUJuUXBiSEtGUjdSQW12ZTdGSUprZU8rcGlzWS8rSVNHVDFXRUExbVljT0tHWktld2dTY080OGhydDhCTQpHQVBBQ2dldzRCdmYvdXFGWmtBa2xtdWxEeHlQeEZRckRGUjZJRHBMcWRrNEs0TkRneTlCbytMUGVzY2lHaFRJCnloNzRJUUtCZ0ROVVFjTW9NZjk5cDRQTjI2Q0xXU24ybDFJNTk0M0Z5R2Z2MVV1SkJBdlhHamlhanI1SzJQWmoKY21pZ3hPYzRHV1ZtblFrSlpwckRtUG43SDJrUWdoRGlOdUdhZlZvRjBFZFlITVZTcjc5TGQvbWtkaWZvSG5seApicnZyWXZkOUlsdHBGS003TlB1T04rdHhaQjJCTDZoZ1RTc0t5SVl6R01Yb0VEckFGRHFxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRGJYNzN2SnRmWG5haWhqUFdRVEN0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpJM01ERXpNVFV3V2hjTk1qWXdNekkyTURFegpNVFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2tmZVJ3dU85NFpmU3dpZTVJWGM3ZTNjSktTRDRBYTMwVzRCTlRIN29oRUt2NHY5MnYKbHJCUElwcU5NWmVTR1VSY1laWkNDcXU1M0pCSkJvSmZ3UkZyZnIrY1NGVEZFYW1Zc1M3OTZ5TEVEcXkxbEphbApGZVkxTlh1SEoxRjhrbGp0azJ6N3Z5aE4vaXdHTjBJeHVkUHFqdnczVk5Mc2FGcFMvWnRVVjdPT1VMSndwYkpGCnF6eEFBellOVkdrVnJoVzdQNjlGTldWTFZBUnorVGNJZ1Fma1N2aGtCeERycENYeEhndzk5eTBINDE3U3lCS2kKYWdCOVpCNEtlS1dqbUxxVGpSWm5jajd4eHBVKytyNzVaUlZZQ2dyQkZWSXE5cTU1c3hUdGt3cXhwVmIyMmcxbApGdG1RL2dQdnRWTU9neGdkWmNvMnFKb09LaTVtbGZqWUpzTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwa3BhQVFkR3dyclNKV1VVZXFibVNQMGxFUmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNDZxcHUycmlZaTIxYkRab2dVcjRKcFlwSlhGbmVqVWRXYlFiMXAwVTJDUHhHRXpVYXlWa2x0CkhDTzJ6a3RmOU9HRWtQUC84WkFHbnorc2JoRjFCUVowQnozYmlRQlBSSFcvMVMxbGhqbjd0RExXbUMvZG52YVIKWDFSc1RSY3FiTURza1BvZVZaYzBjVDNYcGU2dUJENTdDTm5GR0NTQWIvblg1S2UwUm1BTjR0UUJObVZ6SXdZTgprd3pLQUFVTEliQXVyT25pbStnRDFJNnlxaTNuZFlEU2JLVFpIYUE5U1F6MWh1RVVocGEzOFd5NWxmLytyL0QzCnZVd1pHOXhYTzg4S21MMEo3aE45NzhFeHp4SENZcmVvYTBBalA5VHBEOHRKdzdTY2hPS2Fuc2xuQVB1TGhWalkKQXdJVEFTVXFkVDhBMm5kc2ZUY0poNHcvdHFlY2J0UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU8xUk1XV21lUHNDZHZTY3lWc2IxMFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeU56QXhNekUxTUZvWERUSTJNRE15TmpBeApNekUxTUZvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS0tXZmZrL01kM28KbWo0TXc4SHVhUDFDazhjNGF6emNMTlUxZ2FDdG9HOEdGZnRHMXU2WGo5UmZ5aHJzbG0yMk9oRnFIY25PVmtPUwpzVDRTZ3I5b3BDZWxzR0hlK0p3K3ArV0Z5NWtMOUQrd2NpRlhDNFh0Nmtjc1YvYTdIS1RhKzhNRlR3MXR3amlOClBKTFpueHdQZ2d5aE96NEdDcHFlRnIxTFdRK2NyMllKV1ZoTllRTHRyWXhyNk1HR01YcWcxMEM3T0I3a0tnc1QKNktVQ1A4MnpNRHZ3alNIOG1hNEVEYkJwK3lST01MUlp4c2tvVXVzNFJHc1FXcnJRYWZRYWc4bkkyNW1VUCtCdwpsZWxIQ2FIREl6Wkpuc29tK3JFM1BsMDdBczVkZzlaREVWcDRFVEJPMWRHQ0ZLa1Q1TytUZ2Vzc01HUDhSZzhxCjlnSXA1c3FSMEljQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVcGtwYQpBUWRHd3JyU0pXVVVlcWJtU1AwbEVSZ3dNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlT0M4cDBKRmRFUisKb2N2dm8zdnRsRXJvR1N6MTlJM1hEMjFTT2FtdDk0SjFvOXNDaitrOVlVNTdQaXFnSXNzc1Jud0dzeVExOFNqMApFMHgyNmZwK1JJZzlZTEZFOUJPZWVjUk5kUXRtZDdjaUpqT3lvQVZoUjBuWitoVk9vYnVSTjR1MmpLZUFmMnFCCm1pQWNveXBpYUhqTmNvSG56UWwyUDJRbTdSZXdPaWI0RzJiV0lDNTNwa3VxTzd1ZVFoeE0rN1lkRnVPdEU4Sm4KdGpIemRtc1VTTkR0cEpCV1pXOTdQSUVqRXZ4d0RPWFBqSytUT3RGMXJYbElOcmRMOU9GYUp3UkthT1cyZ3JueQpwS1p0N3hBcDJqUi83S09TTlVpaGlITGsrS3pOS3dTYVRmcGkwQVM5Sk43Z2o0cWRhYjVUS3dJcVJVbWZaODc3Cmg2N2lkY1NBcnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBb3BaOStUOHgzZWlhUGd6RHdlNW8vVUtUeHpoclBOd3MxVFdCb0syZ2J3WVYrMGJXCjdwZVAxRi9LR3V5V2JiWTZFV29keWM1V1E1S3hQaEtDdjJpa0o2V3dZZDc0bkQ2bjVZWExtUXYwUDdCeUlWY0wKaGUzcVJ5eFg5cnNjcE5yN3d3VlBEVzNDT0kwOGt0bWZIQStDREtFN1BnWUttcDRXdlV0WkQ1eXZaZ2xaV0UxaApBdTJ0akd2b3dZWXhlcURYUUxzNEh1UXFDeFBvcFFJL3piTXdPL0NOSWZ5WnJnUU5zR243SkU0d3RGbkd5U2hTCjZ6aEVheEJhdXRCcDlCcUR5Y2pibVpRLzRIQ1Y2VWNKb2NNak5rbWV5aWI2c1RjK1hUc0N6bDJEMWtNUlduZ1IKTUU3VjBZSVVxUlBrNzVPQjZ5d3dZL3hHRHlyMkFpbm15cEhRaHdJREFRQUJBb0lCQVFDZlNjOXJkTlZYTWo2RApFaUJyakRiQ0FRc2xBQXBZR3VHMWxQRkZ5VFZIOEc5eXVlbHk0WHdoTmlPY2t6T2hrd2w2N0RyNDdyVW5DTDJyCk1abDFDNERmOHYxR05admQvNmlnUHAvRWRxaTZDUlVYd3Q3Z1BNSHRMdTJUSmFnZmZ3ZHUvbkYvbDR2VHVkT2gKajZISmJRd2RjWXpIN0VWUlRCYTlKK2UrV3VTZ2tuSjBRbko0TzRtelFJanc3cURKamcvZVVRUDRscmthUUlkbQpCY1RFUnYrdWlMbDBmQVI1M1UxeVNscDZ1N1hIZFlGbWpCYUNRWnNIT0JyaEpsS1c4Y21MWTZ4YytCbEpqWHY2CjdOVmZ2eWIyUGF0T05wS0tzbGt0dHJNdzFZMWI5bzl4ZEJ2dGZSMkJMNDR5YVduSVpkOFRBV09XZE55aGxEdDYKYTdSQ2xkZDVBb0dCQU1tcDNudVA1NHZvRmp6UWlKQVpmdHQ4b0drZ2k3QXZiUTh2bzNJaENlQ2pjenBiU3NvbQpsVzVHMUQ3SERlUkhxK0RUaThxSGVZczVvcUxvSGVWRkZNc1F2Tko3TjdGVlFXS0VmMEF0ZTlzdE9xRHVYNk0vCjd6b01pdHY1ZUFGMElVTG5VWDdwUUo5WDhSczEyL3hweDEyY1hPWlV1YVZCSXp3VHhUYmJUV0kxQW9HQkFNNWwKVFZlR2o0d1hLWTIybU9yUk1lVHhQVHh1NHdkenY5RnVKQnNwNUt6UjdCSzhCT3NET29XZ0h3NTdlUUJITkErWApzWG9RQmZuUEROem8rZm5wVlE0V0JvR3BnbmdiREVpWGF0bXU4MWlWazlvSzltb1BxMkpMZzJpbUM0cWhib0F4CjRqRG45b0ZvUlI5SnJxcmExLzlpUHJqMkp0Um5kbVJpb3ZpWUx6OUxBb0dBQ1RLTEtCMkhGUFZ2MWpRNGxrSGoKYkVWQjE2bVpWVjdFWFpYeG9XbnFWbWw5L3VKZEJkMCtvWG52Z2pGMzY3cHRGMkx1bEQwYmlRTUc3T0VqUStxagpxU05KU1Z3L1RRSXphamZheWVXSktaVGxnS04ranlhQ1ZhWnV5dHVVNHBRV1ZFUFNqclE2czBuQ2dGZ3pnVTZkCnZpSThobkRFeXNtdXZyVzBIKzFlbVNVQ2dZRUFsZGYrR3JsYXBqNTZzS1FNeVE0dnh5Tk5iZjZqWE5td1BZQlYKUGxOZjdnaEorQ0FCQWc1S0FwR0plcDR4N3YzQzBqOHpYb2NiajQyK3JQT0g2T1I2Rjh2dDFWMFhsOU1yUzlpQwpmcUFCbENLa1FQME1nVnYyOVZvVmdYaHJrSzQ2NTE5UDlHbTBFYWQ5NTRVN0JsZnowVG1taCtwTnJvK2U2S3FqCjN3KzkzWmtDZ1lBV1ZPRGp2YytYMTFpajVJbXlTeGZzcHN4UmNTaGJCam9HWURhdkRqV3gvaERIN2Ztcmtzc2QKRkJ6ZTRaVno3UWRxaXV5bW96TnJrWEhrM1g5a3Fxc0JIZzBjNmVsbGlMMHhib2VqenlwOGRkMkxBbW0zZ0dMSAp2OW10cU4zcFEvRXJ5MTY5WU10WForMTRxU0IweTNjZlZiaXJ3V1R3dXhibGZFS1U3c2hScFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c281fa3075d86b905861397b6a92141d9817fa780cd26dde3bd0287c3e2bd76a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
