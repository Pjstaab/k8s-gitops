# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  annotate-k8s-node: "true"
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-cilium-endpoint-slice: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-firewall: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "true"
  enable-ingress-controller: "true"
  enable-ingress-secrets-sync: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-lb-annotation-prefixes: service.beta.kubernetes.io service.kubernetes.io
    cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU12d29PSDMrSjJvMUM3TGFseS8waE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT0ZvWERUSTJNRFF5TURBeApNRE0xT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2UVNseVJQT2hvNUw1QUtaUFB2OUVtR1JmR2Z3VTVLZ1VBdWlEemlJNUlneVBvcFkKRlR6cTZSRVFNZjhQVkU0bzh0d05rRld2ejkxZ2RDMWlDL1ozSDRRVzBtOWVJWDlMc1ludSt2dHNhRGFMaXVzeQpBRDJjay9HNEo1Uzc2amFBMW9TNVdXcDc2M2tmK21vTzhTam93QW9iQi9tOWp6TlphMkFoSEhpYnRzUHdmNnVWCmIyYUw5djcrRDFFdmk0NjhXMjVKUUovalQ0QllGUm5WYndvUUNJeTNEaTZXM2Q4UWRHRjcyTHdlTmYrZE96QVMKQXhTVWNYcjl5U2lBSkh3N1ZXU1JaODE1TzVOTWNOektGSzRDR0RXVVdvb245STBpRDZUNHNwZDJJQ2xsTFFoZgpXY1VQZmFubFZUZkxmdzU1aU15T3JNU3A3Z1lreTc3MzBmZDBud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1DUFk1dFU0NkxOS290Y0JGVElaSGpMb3JzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVOcURpeXY3KzFXVU9Pa0daTFhQdUR4ejhyWkpiWVNkTXlhU3F0L0VrSng4V1lBOTZXL2J6Clo5b0czQW9TZVR3WkY2ZjhTbytwb2Y2RjAxem5EZW80WXdFMllBT25mKy9TeEhiaHRBL3UzeGxJSE85Z1JmNEMKdTMzS01qTUx0Umc4U2l0bXhwMWNlSm96ZzU3VVZGNExIZFZFWjI4OFB1ZzBYdWx1akkvclFOa1FDQ1FaNEJUQQp6dEhvNnFlMXVhcHVFdnp3MjhHMVVST043dVMydnpFQXBBY2VURlpwODAxTVpWNzF5SGJ5UXNUYnd4N0tWWnVoCnVvUHpxNXkrektTTmc0QWZQbEdxMDYyZ2VjUDRBUDEzSXorV1FDejRsTk9mSFJKdEJFZG9Ya1duN3hoMmtseWQKdE02MHBjaHRCSWh6a2JNcUJZRGZzd3M0eURYeGpFYUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdlFTbHlSUE9obzVMNUFLWlBQdjlFbUdSZkdmd1U1S2dVQXVpRHppSTVJZ3lQb3BZCkZUenE2UkVRTWY4UFZFNG84dHdOa0ZXdno5MWdkQzFpQy9aM0g0UVcwbTllSVg5THNZbnUrdnRzYURhTGl1c3kKQUQyY2svRzRKNVM3NmphQTFvUzVXV3A3NjNrZittb084U2pvd0FvYkIvbTlqek5aYTJBaEhIaWJ0c1B3ZjZ1VgpiMmFMOXY3K0QxRXZpNDY4VzI1SlFKL2pUNEJZRlJuVmJ3b1FDSXkzRGk2VzNkOFFkR0Y3Mkx3ZU5mK2RPekFTCkF4U1VjWHI5eVNpQUpIdzdWV1NSWjgxNU81Tk1jTnpLRks0Q0dEV1VXb29uOUkwaUQ2VDRzcGQySUNsbExRaGYKV2NVUGZhbmxWVGZMZnc1NWlNeU9yTVNwN2dZa3k3NzMwZmQwbndJREFRQUJBb0lCQUJUUElTMU01K3k2VjdLSApjclZiREpac2RXYmJ6b0owM3Y5UStJdHlidWV4OHM0ZHp1cXZwVEQ1ZHUzNkpZYmpmL0NVdDAyUGtXWngrYjl3Cmk1M0RpWVBIdC9kODJVRVkwWTEvSVBjeW5OR3dSNWFJcEIyUXF0OUN1a0pwUm5MWGcwR2FwUWtxQnZCNmlrRzQKVVdMTlhTcGZNbkNqVnZJZjloVXpKUklNV1NBNnE1bkdubVlVSDZJRlhRd0k2aDBEL1RmZnRkb2prVGZGdzJSdApuQy9zcmNHbTU0TERISnFMS1pxeXgyZ1FiYnpRLzMveW54UDNvOWd2ejJ4U3haN1FYVVFraUM4dDhGZjFhM0UzCktRYWhZVnpRZ283TmhMdmVQV3hJbWtaRm5ZeEVUcUJMOVB5RjJCNnB0c3lKTGN2eHIydjdBbi9HVDRRdXg1TGgKYlNtOE8vRUNnWUVBMXV4eWN6UXQ4ZXZOTHBSRXExUklzZHBEQlJZQmRQWXk5eG5lNGZaTTJ4TWNnK2dNVWtYTAplTURmZXRDTm0xK2ZDRUFlRGlzWmZSdHhEQkNwcFdLT3pGWnRneHBFUHMwdFM0ajNLQ3BuTzB2NlcwSUlrS2dmCnZ5YkFnTk5wS1N6Tk5NZ3VVYXpFd3phM2ZPVVBIaG80azBHQ0E4azcwVnlaTkRURi85QmdGaGtDZ1lFQTRTUzUKdjVwbVdRbEhXR3oyeStRc0JsS1ZpeUtWeTkzS2xuSUYwQzhWZnhxSFUvczI1OEEyN1ZMRmMyNHBhS1N0U0ROTgo4VTBtdEd0Z0pKaTdoN1d2MWFsdERtSlM3RHU5TkFNcE4yZ2RqQkdhT3NtcHp1Snh6NjJINEhuaWU1UGlXVkYrClc5dzd0UGNubEJ0dDlnNVFjS3N4TVE2VW5aU0FmN01BeGUrV2gzY0NnWUJ3SVV4VTdwUko4MHhKVVBIQ3NXWjcKNC9Pelk1ZSsvZlA1RjNaQlRjOHJQUDFUbEcxWlB6QzQvMmVaRzlYRmlrM2VjQlUrTHg1Tk4xUHpoMzM2MjBERgpPeEpIcEJ5VzUxVUtZNXNQU1pBeVQ2RitteVQ4MDdvOGNHdGV5dTNDbmEweUxINTkvalZwNDlJM1J3cHNHaUlLCk1kTXpSbm4rOE9DOWJBc2hQQVhsZ1FLQmdBeFJ1Q0ExMEpmYW5CN0loNUNNZ2FRdTdLUGFWcHY3SE5TeWxJTFoKc0xGdHdDM21OeERqUVo0bXcwc1hvZ2hweWxtREJTYkk4KzgzV09Gbndnc2c4K2diQnk2Y1RyRkNhNDNuQm1CVAp3Qm9qOUc1M0RtV1ZtbWlrdENTaVJyUkFXVWhOM3o0amhOallGVUJUWitib3pabjhwQXB0STlDamlZeHpQUDJYCnFJTHRBb0dBSUpIRDN5Q2N1STJNMlJET1FVak56M1hxZDlyNkdTeHphTnQxcmlvSFZLdEJmTWtiUGI0dkZPdGEKUWh0Z2FnOERpQVNTdGJyQjlmOW9VTUlUbExKSHFvOVFGbk9HT0pCTi9GNytDUWM2aGFWRjgrVjJjdUxWeVVlZgpmczhnTDJMNkxyQWEwUS9sc242YjI3OEYwY3gxbVYzdFNVTUZQZ1UzclpTb0ZUcUxSZEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU12d29PSDMrSjJvMUM3TGFseS8waE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT0ZvWERUSTJNRFF5TURBeApNRE0xT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2UVNseVJQT2hvNUw1QUtaUFB2OUVtR1JmR2Z3VTVLZ1VBdWlEemlJNUlneVBvcFkKRlR6cTZSRVFNZjhQVkU0bzh0d05rRld2ejkxZ2RDMWlDL1ozSDRRVzBtOWVJWDlMc1ludSt2dHNhRGFMaXVzeQpBRDJjay9HNEo1Uzc2amFBMW9TNVdXcDc2M2tmK21vTzhTam93QW9iQi9tOWp6TlphMkFoSEhpYnRzUHdmNnVWCmIyYUw5djcrRDFFdmk0NjhXMjVKUUovalQ0QllGUm5WYndvUUNJeTNEaTZXM2Q4UWRHRjcyTHdlTmYrZE96QVMKQXhTVWNYcjl5U2lBSkh3N1ZXU1JaODE1TzVOTWNOektGSzRDR0RXVVdvb245STBpRDZUNHNwZDJJQ2xsTFFoZgpXY1VQZmFubFZUZkxmdzU1aU15T3JNU3A3Z1lreTc3MzBmZDBud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1DUFk1dFU0NkxOS290Y0JGVElaSGpMb3JzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVOcURpeXY3KzFXVU9Pa0daTFhQdUR4ejhyWkpiWVNkTXlhU3F0L0VrSng4V1lBOTZXL2J6Clo5b0czQW9TZVR3WkY2ZjhTbytwb2Y2RjAxem5EZW80WXdFMllBT25mKy9TeEhiaHRBL3UzeGxJSE85Z1JmNEMKdTMzS01qTUx0Umc4U2l0bXhwMWNlSm96ZzU3VVZGNExIZFZFWjI4OFB1ZzBYdWx1akkvclFOa1FDQ1FaNEJUQQp6dEhvNnFlMXVhcHVFdnp3MjhHMVVST043dVMydnpFQXBBY2VURlpwODAxTVpWNzF5SGJ5UXNUYnd4N0tWWnVoCnVvUHpxNXkrektTTmc0QWZQbEdxMDYyZ2VjUDRBUDEzSXorV1FDejRsTk9mSFJKdEJFZG9Ya1duN3hoMmtseWQKdE02MHBjaHRCSWh6a2JNcUJZRGZzd3M0eURYeGpFYUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdlFTbHlSUE9obzVMNUFLWlBQdjlFbUdSZkdmd1U1S2dVQXVpRHppSTVJZ3lQb3BZCkZUenE2UkVRTWY4UFZFNG84dHdOa0ZXdno5MWdkQzFpQy9aM0g0UVcwbTllSVg5THNZbnUrdnRzYURhTGl1c3kKQUQyY2svRzRKNVM3NmphQTFvUzVXV3A3NjNrZittb084U2pvd0FvYkIvbTlqek5aYTJBaEhIaWJ0c1B3ZjZ1VgpiMmFMOXY3K0QxRXZpNDY4VzI1SlFKL2pUNEJZRlJuVmJ3b1FDSXkzRGk2VzNkOFFkR0Y3Mkx3ZU5mK2RPekFTCkF4U1VjWHI5eVNpQUpIdzdWV1NSWjgxNU81Tk1jTnpLRks0Q0dEV1VXb29uOUkwaUQ2VDRzcGQySUNsbExRaGYKV2NVUGZhbmxWVGZMZnc1NWlNeU9yTVNwN2dZa3k3NzMwZmQwbndJREFRQUJBb0lCQUJUUElTMU01K3k2VjdLSApjclZiREpac2RXYmJ6b0owM3Y5UStJdHlidWV4OHM0ZHp1cXZwVEQ1ZHUzNkpZYmpmL0NVdDAyUGtXWngrYjl3Cmk1M0RpWVBIdC9kODJVRVkwWTEvSVBjeW5OR3dSNWFJcEIyUXF0OUN1a0pwUm5MWGcwR2FwUWtxQnZCNmlrRzQKVVdMTlhTcGZNbkNqVnZJZjloVXpKUklNV1NBNnE1bkdubVlVSDZJRlhRd0k2aDBEL1RmZnRkb2prVGZGdzJSdApuQy9zcmNHbTU0TERISnFMS1pxeXgyZ1FiYnpRLzMveW54UDNvOWd2ejJ4U3haN1FYVVFraUM4dDhGZjFhM0UzCktRYWhZVnpRZ283TmhMdmVQV3hJbWtaRm5ZeEVUcUJMOVB5RjJCNnB0c3lKTGN2eHIydjdBbi9HVDRRdXg1TGgKYlNtOE8vRUNnWUVBMXV4eWN6UXQ4ZXZOTHBSRXExUklzZHBEQlJZQmRQWXk5eG5lNGZaTTJ4TWNnK2dNVWtYTAplTURmZXRDTm0xK2ZDRUFlRGlzWmZSdHhEQkNwcFdLT3pGWnRneHBFUHMwdFM0ajNLQ3BuTzB2NlcwSUlrS2dmCnZ5YkFnTk5wS1N6Tk5NZ3VVYXpFd3phM2ZPVVBIaG80azBHQ0E4azcwVnlaTkRURi85QmdGaGtDZ1lFQTRTUzUKdjVwbVdRbEhXR3oyeStRc0JsS1ZpeUtWeTkzS2xuSUYwQzhWZnhxSFUvczI1OEEyN1ZMRmMyNHBhS1N0U0ROTgo4VTBtdEd0Z0pKaTdoN1d2MWFsdERtSlM3RHU5TkFNcE4yZ2RqQkdhT3NtcHp1Snh6NjJINEhuaWU1UGlXVkYrClc5dzd0UGNubEJ0dDlnNVFjS3N4TVE2VW5aU0FmN01BeGUrV2gzY0NnWUJ3SVV4VTdwUko4MHhKVVBIQ3NXWjcKNC9Pelk1ZSsvZlA1RjNaQlRjOHJQUDFUbEcxWlB6QzQvMmVaRzlYRmlrM2VjQlUrTHg1Tk4xUHpoMzM2MjBERgpPeEpIcEJ5VzUxVUtZNXNQU1pBeVQ2RitteVQ4MDdvOGNHdGV5dTNDbmEweUxINTkvalZwNDlJM1J3cHNHaUlLCk1kTXpSbm4rOE9DOWJBc2hQQVhsZ1FLQmdBeFJ1Q0ExMEpmYW5CN0loNUNNZ2FRdTdLUGFWcHY3SE5TeWxJTFoKc0xGdHdDM21OeERqUVo0bXcwc1hvZ2hweWxtREJTYkk4KzgzV09Gbndnc2c4K2diQnk2Y1RyRkNhNDNuQm1CVAp3Qm9qOUc1M0RtV1ZtbWlrdENTaVJyUkFXVWhOM3o0amhOallGVUJUWitib3pabjhwQXB0STlDamlZeHpQUDJYCnFJTHRBb0dBSUpIRDN5Q2N1STJNMlJET1FVak56M1hxZDlyNkdTeHphTnQxcmlvSFZLdEJmTWtiUGI0dkZPdGEKUWh0Z2FnOERpQVNTdGJyQjlmOW9VTUlUbExKSHFvOVFGbk9HT0pCTi9GNytDUWM2aGFWRjgrVjJjdUxWeVVlZgpmczhnTDJMNkxyQWEwUS9sc242YjI3OEYwY3gxbVYzdFNVTUZQZ1UzclpTb0ZUcUxSZEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU12d29PSDMrSjJvMUM3TGFseS8waE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT0ZvWERUSTJNRFF5TURBeApNRE0xT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2UVNseVJQT2hvNUw1QUtaUFB2OUVtR1JmR2Z3VTVLZ1VBdWlEemlJNUlneVBvcFkKRlR6cTZSRVFNZjhQVkU0bzh0d05rRld2ejkxZ2RDMWlDL1ozSDRRVzBtOWVJWDlMc1ludSt2dHNhRGFMaXVzeQpBRDJjay9HNEo1Uzc2amFBMW9TNVdXcDc2M2tmK21vTzhTam93QW9iQi9tOWp6TlphMkFoSEhpYnRzUHdmNnVWCmIyYUw5djcrRDFFdmk0NjhXMjVKUUovalQ0QllGUm5WYndvUUNJeTNEaTZXM2Q4UWRHRjcyTHdlTmYrZE96QVMKQXhTVWNYcjl5U2lBSkh3N1ZXU1JaODE1TzVOTWNOektGSzRDR0RXVVdvb245STBpRDZUNHNwZDJJQ2xsTFFoZgpXY1VQZmFubFZUZkxmdzU1aU15T3JNU3A3Z1lreTc3MzBmZDBud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1DUFk1dFU0NkxOS290Y0JGVElaSGpMb3JzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVOcURpeXY3KzFXVU9Pa0daTFhQdUR4ejhyWkpiWVNkTXlhU3F0L0VrSng4V1lBOTZXL2J6Clo5b0czQW9TZVR3WkY2ZjhTbytwb2Y2RjAxem5EZW80WXdFMllBT25mKy9TeEhiaHRBL3UzeGxJSE85Z1JmNEMKdTMzS01qTUx0Umc4U2l0bXhwMWNlSm96ZzU3VVZGNExIZFZFWjI4OFB1ZzBYdWx1akkvclFOa1FDQ1FaNEJUQQp6dEhvNnFlMXVhcHVFdnp3MjhHMVVST043dVMydnpFQXBBY2VURlpwODAxTVpWNzF5SGJ5UXNUYnd4N0tWWnVoCnVvUHpxNXkrektTTmc0QWZQbEdxMDYyZ2VjUDRBUDEzSXorV1FDejRsTk9mSFJKdEJFZG9Ya1duN3hoMmtseWQKdE02MHBjaHRCSWh6a2JNcUJZRGZzd3M0eURYeGpFYUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUs4SXFUc0JaWVJHRWhwSXhPNnZJN293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT1ZvWERUSTJNRFF5TURBeApNRE0xT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXFXVUVJM1dTNFNiVGIxUUxybUtXOU85R251Q28KVUkxa0JDMjlKb1l0QlFYeXBnQUFWaEZHZkxMeENaZlA2RHJCNEdLRVBmcC9lUzNqZU0ra1YrVUIwaWlCTjN0QQpwZ245SkMzcjg2RVNGYndNUnVhKzRpVkNzN2hXcTlMU3djT2QrS0FBS0tQZVpoald3K2haL25vYVZZMEp1bmo0CkcvWEhhL1RBTFNWTW5LTjk2QXR6ODJFdHFVRU5VR0dwU1lFOFhBZUNsYVNjcHhaekpxTSsvczk5S3NyaWZ2R3cKVHF4TDM1U1ZFcVMyd0xPd3hpTTFoZ0wwL1FmK0lsUlRsLytaTU50VHZEb1hqenRPYzlLNWF4UEl4b2hNY3BCegorcXkwa2pZVDJsR0NtL3g5SlVLRjE2NDhvRGkyeE5EbzJpb0V2K0xWWGRQU1pBZGV1SElwL0M4YmN3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlpnajJPYlZPT2l6U3FMWEFSVXlHUgo0eTZLN0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBREJsMVR2MlRrOVVPbkd6WWV2UUtjRG9VMlBCcHYxMTNIMnR1UmZRd1lXOWJGVzQKRXRIakdRNFVDdnphQXVGTkFqU29BNitJN2FQUElSc2liOS9PNTFyRVNVK0w1R3FJVTBlSk5iSnlDVE0vT0RBNAowYmt1Y29MSmsxeWFDbUNySU9XMlExdG9PeHVDWlpvYlgzOE9hQ3JBN2dLazdmVEQ5QTVxRUVnaVNTYXNoajVVCmRCRUJORnNBTVVHdEI1c3lHNVpMeEFVbG9pYzhUSUQvc1JOWHh4MHlhbEdXVFh0blZyeUNoa1hQVFB0YmhJL0cKWWxiZ2VEQnBsRXM3N0U3UEZwTExtS3N2eEt0K1c1RDVSbm5Oakd4dlNpMmxuS2pqQTVpSEw3T3V3NkRia3ZHeAo2b3JXOG04aWh3Rkh0ZTJ4Q29nbUsxSDgyY0pIaWhZZ00yMzR3K1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVdVRUkzV1M0U2JUYjFRTHJtS1c5TzlHbnVDb1VJMWtCQzI5Sm9ZdEJRWHlwZ0FBClZoRkdmTEx4Q1pmUDZEckI0R0tFUGZwL2VTM2plTStrVitVQjBpaUJOM3RBcGduOUpDM3I4NkVTRmJ3TVJ1YSsKNGlWQ3M3aFdxOUxTd2NPZCtLQUFLS1BlWmhqV3craFovbm9hVlkwSnVuajRHL1hIYS9UQUxTVk1uS045NkF0ego4MkV0cVVFTlVHR3BTWUU4WEFlQ2xhU2NweFp6SnFNKy9zOTlLc3JpZnZHd1RxeEwzNVNWRXFTMndMT3d4aU0xCmhnTDAvUWYrSWxSVGwvK1pNTnRUdkRvWGp6dE9jOUs1YXhQSXhvaE1jcEJ6K3F5MGtqWVQybEdDbS94OUpVS0YKMTY0OG9EaTJ4TkRvMmlvRXYrTFZYZFBTWkFkZXVISXAvQzhiY3dJREFRQUJBb0lCQUhFK2hCN0VpbFlWSThMSQplQ3F6NUdHSTJUaDd6bXBUcStxVFBXSFV6NklORU9QakdsWnZwQ1RYYUFiV3cvcG4xWmNScFlEZHgzeVdyZnpsCksrUkt5QVhjYUU1VUNxczJBRkxBbEg1Q1R4blNwbzU3MGw3VE5CMTcvZzFPbXZGSXVvSXRUUTNlUjE4UCtmdnMKaU1WMGtjaGh5b0FzUVFwSUxITENvL3RLZFVZOWUzWVJTSXhndzllemt5ejRhMkhIWGpteloyZ2ZvNW9RazVBTQpOdjJGWURnWDBBbElnUkFvOEhTNzhRekFjSXZ3U3hyK0RTRm4xQlNEU0FuWlNBd1d1VW1TcnRyZnV4Q3p1YWF4CnVlSS9aS1hNLzJEaStpcGlIVExJOVpxVVg1VklUTG1HSGJJT1lUeGExdzZwS3Rmbi9jYTlOSCtjenBzVFRpWUEKaXJYcUdka0NnWUVBM2xDdVBubFBiY0hITjRBcWF4QkloMVVOUWtQWnFzemZoV3FRSG55ZENXR3lZLzJPODRHYQpMYkJXTWZrYUpVcTNRYjEyc3lSZVkva0x0S1ZsYVlNWHhkWWxEZnNlNGFHQjJzeUt4WDhVS1NjQTJvQkJUSXBOCmJBZ0YxaVNnNGVheVZRL25La1NjNzdtSjdEMTZJNzd3ZHkrY0VmalBYTjRUQWw5NFNDTkY0T2NDZ1lFQXd3K2QKWllzZmppMXJrcmg5VzIvNzFDaVBQRjNWdm9Yemo1VWdZUFBtWnJCSHUvTXkySndrTDg4WnRMZC9uRjRaeTJ3RgpqOTFLL3Yya3ltRFprSXFJV3JrOEVEWW1iM2xUc3c4ejVXNXN1QlMwL0FrQVd0ZjhHRVB4V3pPOXp3UWMxUStoCnMxTHBMTG1rOWZUMVc2eXdDSno2cjVJQVFiVkZrOHZGRUNPTGc1VUNnWUJjeWx3UDQxNU50MlhKT290NTZHLzkKWEhpT1FmZW1IS0RtOU5WMmhCaWZnOUdMZnBlZDkyZzh6YThNYUthTERpWnpIL3RkUmo3SGgzbGxTdXVMSUpaWgprc29namNJVDl1OVdQYTFtUldaS3p1YkNUR24wNG56eUxGOFRSSEtLRjFvenV0R0hpTi9nQnhjVUxZeS9Rc0RuClhrM01Db2V5Z1ZaNTFSTkZPTU8vM1FLQmdRREN0UEYrRE5OZ3pvSFVvUWV3b0NXVjd5NmJLV2RVbU0wNGc3a2cKVGhXc1owWVRuSDBpcnltSDk0aEhWZXV4b0ZUTE0zYVIxbWtvQXZQZGQ3TjBqblB4YTNsRERXcHNWNFZ1OVR2dQpScjJMT2xBMlRKM29FRFI1M0VndHE0WktBR2J2WG4wZ1RTQ29IbDlGakZEbVE0Z3I4TlpqTHEvRzV6VWVoSWFlCngzeFp5UUtCZ0ZvVHljUjlrc3VFdVY3MnhaeUs0V2N3aVR1KzFPaldiOUJkcEwwMkNtSU5wVlYyNkFBWEU0V1kKZ1NQc2hrZWtOUEFwMEZjcjNmeEs5ZXVZR2d1aXltMDFCSnQ3Y0txNlpsTTZsWWxDUmhhSmpsUXdjdWsranNYVgpBYzI1Z2VVQzkwdXBEOWsvdTBiK0ZraGlmYjV4RHVtelBqNHRJQjg4UUtvQnJGTnNUWUJOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU12d29PSDMrSjJvMUM3TGFseS8waE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT0ZvWERUSTJNRFF5TURBeApNRE0xT0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2UVNseVJQT2hvNUw1QUtaUFB2OUVtR1JmR2Z3VTVLZ1VBdWlEemlJNUlneVBvcFkKRlR6cTZSRVFNZjhQVkU0bzh0d05rRld2ejkxZ2RDMWlDL1ozSDRRVzBtOWVJWDlMc1ludSt2dHNhRGFMaXVzeQpBRDJjay9HNEo1Uzc2amFBMW9TNVdXcDc2M2tmK21vTzhTam93QW9iQi9tOWp6TlphMkFoSEhpYnRzUHdmNnVWCmIyYUw5djcrRDFFdmk0NjhXMjVKUUovalQ0QllGUm5WYndvUUNJeTNEaTZXM2Q4UWRHRjcyTHdlTmYrZE96QVMKQXhTVWNYcjl5U2lBSkh3N1ZXU1JaODE1TzVOTWNOektGSzRDR0RXVVdvb245STBpRDZUNHNwZDJJQ2xsTFFoZgpXY1VQZmFubFZUZkxmdzU1aU15T3JNU3A3Z1lreTc3MzBmZDBud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1DUFk1dFU0NkxOS290Y0JGVElaSGpMb3JzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVOcURpeXY3KzFXVU9Pa0daTFhQdUR4ejhyWkpiWVNkTXlhU3F0L0VrSng4V1lBOTZXL2J6Clo5b0czQW9TZVR3WkY2ZjhTbytwb2Y2RjAxem5EZW80WXdFMllBT25mKy9TeEhiaHRBL3UzeGxJSE85Z1JmNEMKdTMzS01qTUx0Umc4U2l0bXhwMWNlSm96ZzU3VVZGNExIZFZFWjI4OFB1ZzBYdWx1akkvclFOa1FDQ1FaNEJUQQp6dEhvNnFlMXVhcHVFdnp3MjhHMVVST043dVMydnpFQXBBY2VURlpwODAxTVpWNzF5SGJ5UXNUYnd4N0tWWnVoCnVvUHpxNXkrektTTmc0QWZQbEdxMDYyZ2VjUDRBUDEzSXorV1FDejRsTk9mSFJKdEJFZG9Ya1duN3hoMmtseWQKdE02MHBjaHRCSWh6a2JNcUJZRGZzd3M0eURYeGpFYUcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQU43RkphNUpIRnVFM05peTE1YXpFbDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1UQXhNRE0xT1ZvWERUSTJNRFF5TURBeApNRE0xT1Zvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXpGSjRSY1hkQnAKQm53MFJRVm00UDYvRmI1WXQ3YW13cmFYMXg4QW5pcGxDM0JWOW13WExpWk0xNGNOSjgxY1h3NEdFK2NmajJRZQpYdUVVK0srbGZCOHZuRXRLNmcyelROWVZDRWtrT0c0U2pmcyszYnVIOTVXV2p4ZDE0RjNYYUFock4xOS9QUmFICi9tbG5ZamlqQXA5UVFhaUEraXBZaXB3ZFBIaHV2bzcvd3Q1SHFKWWlxUnZTd1ZFOS9CMEVpejBSc2M5bE1zcUoKR0ZCUEtPcXZUSUVXcFFDOGp2RThJTmo5MmZxeEJkeUJEWFIvSnNibWhNSEh0dG5yNnA3cVA1UjBCK1pBWktKcgpJb2xBUnNqWEF5aG16NHZPRUNCTjhpU245akFVaWxRWDhpdW8ySU5JWkplRnIwQWxqWThSY1ZMZzJqRFRrdzg5CnZmckxLdnNkQXZVQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVV1lJOQpqbTFUam9zMHFpMXdFVk1oa2VNdWl1d3dNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFiVGovQzk5cUdCWXcKZ0N5MU8rYnRPYnFtQUpnWUdMclo4SUFzQTdxcTUzK3dqQndPVi96a1M4T25UNDBlNmtsZCs5eGlxSW1vQkpvRgpQbUxQUlZlYlQ0YVk4OUs1dUJlUUpxVmxwWkEzSmoxZ2JKQnFHeGs3VjRoTXlMRXZ0YUNPRWk0Zm1La1B6VHpYCkxBNy9TZ2wzUURYL05Fc0RsTFZKR0ZkaW1yM0ZiMGxJdnNGWVRlREQrMzVtM0hKam8zSnV0M3hDZkkxR0JDN0wKaEJzYXVkZ0xseFpqQllaWnd1cXkzbjRRQ1ltRW5Hay95bVcycVdLQ29XYUlqc0JxZnBIVlpPNFRrNUgxRUxpWAp3cEl1Ti9IWURwaWFoVm1XOXkzcXN3Z0lDNS9NMUtaMGE5bnc3bUt2ZXQyQ2xSWXB5aVhYdkg0blp0Z0R4L1dvCjZzb1laU3BJRFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBek1VbmhGeGQwR2tHZkRSRkJXYmcvcjhWdmxpM3RxYkN0cGZYSHdDZUttVUxjRlgyCmJCY3VKa3pYaHcwbnpWeGZEZ1lUNXgrUFpCNWU0UlQ0cjZWOEh5K2NTMHJxRGJOTTFoVUlTU1E0YmhLTit6N2QKdTRmM2xaYVBGM1hnWGRkb0NHczNYMzg5Rm9mK2FXZGlPS01DbjFCQnFJRDZLbGlLbkIwOGVHNitqdi9DM2tlbwpsaUtwRzlMQlVUMzhIUVNMUFJHeHoyVXl5b2tZVUU4bzZxOU1nUmFsQUx5TzhUd2cyUDNaK3JFRjNJRU5kSDhtCnh1YUV3Y2UyMmV2cW51by9sSFFINWtCa29tc2lpVUJHeU5jREtHYlBpODRRSUUzeUpLZjJNQlNLVkJmeUs2alkKZzBoa2w0V3ZRQ1dOanhGeFV1RGFNTk9URHoyOStzc3EreDBDOVFJREFRQUJBb0lCQVFDSEhOUE5UMUVMa2pFWQpSVGtCcm5kcFA5WnVDWVgyL0NQZ2JXSWhiN3Z0UjB6NzY0eTBsN3I0eEowMTNHVlY2TXhEcVpqNldPVzVieHkxCnNhdkI0aFI3VTJQeWZsVGZnMTZBcDlJV3lOSi9OcmorZmVXNnRxV1R5NHRSTkpNOStFTUp3d3ovY3lwd3NuMFoKT1lFaTA5U0lJR0dpZUxBWXZ1Rit6disyaTRRclA4TVN1RFdISTB6T1M5VVZvWVZZSUxVOGdnQW9JQWtja0xneQoyS3dnSk5jSHE5TWwxNURpdXpmOERLVk85YkVKZzl5aGJYWHR4c0dRV0VSeUp1M01rdnVPaTlLL2pRaTl2QUFRCkJHVXlSR3pEdUVsSDFmeC9kMmt1ZUlpVitJN20yQmRGZHNVSDVkS1FmT01iYWxVWGkxREtYYkxRVUdFYWp5S0MKVEFCTU56VUZBb0dCQU8xTFRDY01NdFNSMEdjYk84VU5DQyt3OStQOHVLMmh2Qi96anA0ckpVMDY4NEdQRmNPZgpVK0FMeWVOdzZyWG1RSDBORFM2NVZiMk1MQTRhTkQ2M0NoZERIWjJJQzdsOHRNVXloSldsbFdGVUhuSXlCY0Y3CkI5Wldud2pkbDM2U29lbmY1U3JTZHBiNHI5T25jMERPL3FZVmxQWUNScUZEVEdhdWxzazJtV0hUQW9HQkFOenAKZ2dzUXAzVkp4R0tZejNmOVVkRXFTMlhwN1RtSEExalpmbkJtTXpWY3Z5bDQ5dWZkVmRLaVU0emJLRWh5dTd4RgpFcXdNMmVCd296LzVRZ3B0anFOS25ETDQxcHA0MGI3M1NhV3NNR0dINkhSRnVVckNacVd1MzUzZzJMMzRVbkpICmJqL2RQUWswS04xdmtVSFJGRW9wTWU1UkhkS3hjdjFFNkhwR2VVTVhBb0dCQU5mYUdjQ2ZVUkdhUGtlOE55ZHQKVGxnTGs4TDQzWWxjU1FPTGl0MElCRnQzVjVBdjl5MUdub1o4VXI2b3RXaVh0V3ZMVm9WOUk2aFRmTE9yVklFRQpBWkxkZzNBTUZCWTdnVGlzVm56RjdkZG1MSGZXVnZRRUZVSDg4NWVkOHJPNWNMMk01Q3FLM2tOQW5yaGFadlc2CkZWeEEzNHJVMFNqYVRnSk5xRzRLVTRYdkFvR0FJb2ZOYi9WV2Q1cmtPNVV2T000Nzc3bnd0eWx0ajBSdlhZQUIKcDRnU0VSRkNRRFZNUXNueUZFNlRTTDBvK3NvVVZrVmx1Y2I0ZDRDancrZ3VUbnI1aE1Td3piYmZ0SjJXQzRlVAoxM1dteWxmNEdkU2NOZmRWSENqTmcxd1dCUHUveDJVcThvaWVkY1hWYldkM0NSYXBXVDQvTThVeUtERGNqSUlzCjVKQUhmRmtDZ1lFQW9nMTU3enlFakdaY1NZM25ZY0JtMjNlV2szSldmaU9UN2t3ZHRjdkJ1MnlYcjdUNnhRdEYKb0JhUm5zU0htYnFHM3JFbjdlSVFmcGVxL2lJdTBWVFJmNWl4MFNLS3Fjc01WT0IwUGJ5ajBTeUgvQVNWQ1dvdwp0T2haVzdLVUFmcGE4a2pJTXVBTmdsaFFlVnZ2TFNCLzBJSWV4WkZnYkdjZ25wQXRKRG1SUkRzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    cilium.io/ingress: "true"
  name: cilium-ingress
  namespace: kube-system
spec:
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  selector:
    app.kubernetes.io/managed-by: Helm
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 8faa0dcdec645f6c1a96c82f26f314bcd632a8ecd1f126863d68abe68c922be3
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/managed-by: Helm
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/managed-by: Helm
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: Helm
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        meta.helm.sh/release-name: cilium
        meta.helm.sh/release-namespace: kube-system
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
spec:
  controller: cilium.io/ingress-controller
