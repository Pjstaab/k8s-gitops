# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.traefik-ingress.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZZXIzQTg5YmpkenVpamRXVGN5Vnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFeU16QTVNVGMxTVZvWERUSTJNREV5TWpBNQpNVGMxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwQzUyNFZQWUdMcjdUSjVpZnNwYzRaN2w1TTBuVFJhdW5NcEEydjRxZzZHWnMxQzQKUUlHcnhXMWoxSCtSYitoRkN2c3pGdjQ4dWM3VE16dUxyUlJSTVEzT0ZDbEVhVmdNYUdPeHBUV0ZrNGw3VWl1dgpEeEVJOWtUd2hhcndBK0xWSG1BSlRrQ0xId0hTOGh1RVduVlIyRGVGTEFhanRaZnlQTEw2MWJnNDNJRmtiNGlDCmIvMjhzM1ZSZi9Lb1ZTRHpKSlFPZ2ZxbGRuQytPSzZBcUl6ZklUUWhTdlE0aGlKZ1B4OTA0ek1OL1h6bjFBMjQKbmtqclZIbkhiSGc3V05ZWTlkVm5mL25ndzVDWHAycTE2NSt4NWYvZnpzZjYybjYxYjgwY3hXTGtCVGIvaHNlZgozY0NycTc5K1VKZ1djYVZzZEx3VUx3WTBiNTN2ZXN4QTlrSkZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNuNTVRa1o5QUlMV2RSN2RURERCL2JaWlVpTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU4xR0Y0Qy8wZXZLRW4zNlVXRFJHbFdtb1RPc3RTcUdLRjROaHg3VkxzK0dmMnU3Wk9tcmRTCmNkYnJXamJhNzlzNXZQMXU4UCttQ0VCR2M5c1pFM1ozWjRMS0h4eVZ1KzhnN24zdSt0dytIYk9rV2ZQVEdaWWEKQitOR1ljREtuYjFWQzdKUUs4aDZ4MGN3L1ZVdCtsVW14S0hac3k4N1BKcHBicFhpV21GR0dvM3dOcjNYMzJNcgorK0NNZUFZeEZoRW5FVVpaTmxveXo4cTIrWGZyMUU5eGw3TzFKb3JiTjk2aFlRU1BUTHBiMDdjRUVZeW1yTS9HCnA1VGJ2emxsNWViL1ZmQ1NmMm51ckM3R2hYT3E1S09MU29BajlVRjdHK3N2VU85amR0RDZTRndrTElYOWJZWHcKUHRFKzB0YXBodHhjSGIrbkh1cXdiZWVIenA3M1JaOVEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEM1MjRWUFlHTHI3VEo1aWZzcGM0WjdsNU0wblRSYXVuTXBBMnY0cWc2R1pzMUM0ClFJR3J4VzFqMUgrUmIraEZDdnN6RnY0OHVjN1RNenVMclJSUk1RM09GQ2xFYVZnTWFHT3hwVFdGazRsN1VpdXYKRHhFSTlrVHdoYXJ3QStMVkhtQUpUa0NMSHdIUzhodUVXblZSMkRlRkxBYWp0WmZ5UExMNjFiZzQzSUZrYjRpQwpiLzI4czNWUmYvS29WU0R6SkpRT2dmcWxkbkMrT0s2QXFJemZJVFFoU3ZRNGhpSmdQeDkwNHpNTi9Yem4xQTI0Cm5ranJWSG5IYkhnN1dOWVk5ZFZuZi9uZ3c1Q1hwMnExNjUreDVmL2Z6c2Y2Mm42MWI4MGN4V0xrQlRiL2hzZWYKM2NDcnE3OStVSmdXY2FWc2RMd1VMd1kwYjUzdmVzeEE5a0pGbndJREFRQUJBb0lCQUdtdGJJTnRnR0R0YWV1Mgo2dURaOE5SSFNRUWdjRGJkc0wyK25iV05HQi9CeExnVjNiSkJJT1VUWm4zVVZBdXVxSDJ1am55NWlqSDRINVgrClFDVVlEeThMaHZVTkRjRThCUEJveXlER1RveGFXZE9ZZ1VEd3NNL3lwdlh6aytzbEZuSlk1ZUJuT3pmK1FRck4KbFI0bU4rbStKVWY0QnRxRHkxK3NxMUFhT0NNV1VNWnBkWVRiUzNnWVpSTjkyR25jcW5TU0VvYUFTNW9qUm1QRApyVUE3L1Izc0h5ZFdOcmw5QnBPV2Z4aEpidnFxRHZaRkdLSjllKzJRZERJeXFOeFdjWnJ0NS9pNkxxYWNPU2paCjZzbEdtTXhsdzR6SHJIMk01K0tDSjMxei85bkFBaU5aNzVHZHFLSXFpNmZ0ZTdBakdyaXpHeDF0TUtsbHZwTUYKSDVydGVJRUNnWUVBMWJzL0d6Q0hzY1BrT2V4dHBTZEptZTJKakpLc0RnNjRORUR6dUNLK3VPaGQzWHdyRTRxUQpJZkEwRktES3lZNmxvSm81U0plOUlEYnhJdUlMRVNoK0krajR4ZXlzd1JjVzRSVlg2MEsxK0NtTENWdk12bzdZCmROVkZmQ0hIcDh6U0VpWW5rdEtQK1lGalFiZFZKeTV1YXdNazY2a0lNRTNzUzlkU2FxT2dHekVDZ1lFQStWbzgKc1FxVEFTY0EwTkFxUmRJYmhrU1VrSFZ0RERxRFlKTld6UXhPUndUbXFabzdzV2VrbG9VZGh2Mk1NWkJhVEMzVApOdjRvVXRWS0ZXUk1aQmduMVNhNG1JbFh0NG1yNnV0dmtQdlRGZ1g0akJCMW81MmJVSFhETEF2VkgzMGd1QXBCClNXQnBXR0Z1d0tDVUV4UVJsZVlVZDJqSGhOWEZab0RDRHZWTW1jOENnWUF4WmR5WkFTZHJtNVhsR1ZMaUorbG4KN1RHc1RyMzdaY1dITmpmZUtCR2lsUG9VMWJ6ekFFUjl3NUdWN3UvUGsrdU42ZmN4WXZpd09HS1ZLRjljY05wdQpuRXJiRys5MWxVdVJiQ2hzMUhkUVN2RzZrUUFLVHVPU1pUUnhFekdkQThiTnNRbldjbG9hVmFCR01RUTZVUTN1Cko4VGh2cWlJMllteW9hcUh3UmVoRVFLQmdCVWMwOWkxcVg3R2U2WXlpZkhCZVgwajMyUmYzT3pWSTN5UTNSK2QKZEI5RlJmYUVUWnVXeC9QS3I1WlhiNEJlMVpadnB0dVlKM2ZrQVZMUVhEdDVaQjRER2t3b0ROcEllTnI2TmtjVApXMnNZOUZOL3JVWStPUUZXQjBGNmV3QWdpeDJxR0o4SzM4Q1E5MXl0Ky91bGpsdWYwSW5Qd0Z6NThLM2VKeEEzCkt0WTNBb0dCQU0vMCtpcGFpMkd1QlgrOWNYNmJDNlRIRUFTUC9VYlU2UVRPVnAxVEJmcGZ4aWRSTldTV2ZsQjIKeW43MjZHZU13M1FXV1RVY0liR0ZpeHUzbnJKNmRGRmtNNmpsWENkQkJpUS8wN25rVVQ2R1E4VnpaMGhrZEJSdQo2WEZQU0lGTmh4Q1Nqa2dwRGZrRFk2ejZqMGpNQWhFR1p4YURvYnd0TTFzVTV6K01Gd1BwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZZXIzQTg5YmpkenVpamRXVGN5Vnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFeU16QTVNVGMxTVZvWERUSTJNREV5TWpBNQpNVGMxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwQzUyNFZQWUdMcjdUSjVpZnNwYzRaN2w1TTBuVFJhdW5NcEEydjRxZzZHWnMxQzQKUUlHcnhXMWoxSCtSYitoRkN2c3pGdjQ4dWM3VE16dUxyUlJSTVEzT0ZDbEVhVmdNYUdPeHBUV0ZrNGw3VWl1dgpEeEVJOWtUd2hhcndBK0xWSG1BSlRrQ0xId0hTOGh1RVduVlIyRGVGTEFhanRaZnlQTEw2MWJnNDNJRmtiNGlDCmIvMjhzM1ZSZi9Lb1ZTRHpKSlFPZ2ZxbGRuQytPSzZBcUl6ZklUUWhTdlE0aGlKZ1B4OTA0ek1OL1h6bjFBMjQKbmtqclZIbkhiSGc3V05ZWTlkVm5mL25ndzVDWHAycTE2NSt4NWYvZnpzZjYybjYxYjgwY3hXTGtCVGIvaHNlZgozY0NycTc5K1VKZ1djYVZzZEx3VUx3WTBiNTN2ZXN4QTlrSkZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNuNTVRa1o5QUlMV2RSN2RURERCL2JaWlVpTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU4xR0Y0Qy8wZXZLRW4zNlVXRFJHbFdtb1RPc3RTcUdLRjROaHg3VkxzK0dmMnU3Wk9tcmRTCmNkYnJXamJhNzlzNXZQMXU4UCttQ0VCR2M5c1pFM1ozWjRMS0h4eVZ1KzhnN24zdSt0dytIYk9rV2ZQVEdaWWEKQitOR1ljREtuYjFWQzdKUUs4aDZ4MGN3L1ZVdCtsVW14S0hac3k4N1BKcHBicFhpV21GR0dvM3dOcjNYMzJNcgorK0NNZUFZeEZoRW5FVVpaTmxveXo4cTIrWGZyMUU5eGw3TzFKb3JiTjk2aFlRU1BUTHBiMDdjRUVZeW1yTS9HCnA1VGJ2emxsNWViL1ZmQ1NmMm51ckM3R2hYT3E1S09MU29BajlVRjdHK3N2VU85amR0RDZTRndrTElYOWJZWHcKUHRFKzB0YXBodHhjSGIrbkh1cXdiZWVIenA3M1JaOVEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEM1MjRWUFlHTHI3VEo1aWZzcGM0WjdsNU0wblRSYXVuTXBBMnY0cWc2R1pzMUM0ClFJR3J4VzFqMUgrUmIraEZDdnN6RnY0OHVjN1RNenVMclJSUk1RM09GQ2xFYVZnTWFHT3hwVFdGazRsN1VpdXYKRHhFSTlrVHdoYXJ3QStMVkhtQUpUa0NMSHdIUzhodUVXblZSMkRlRkxBYWp0WmZ5UExMNjFiZzQzSUZrYjRpQwpiLzI4czNWUmYvS29WU0R6SkpRT2dmcWxkbkMrT0s2QXFJemZJVFFoU3ZRNGhpSmdQeDkwNHpNTi9Yem4xQTI0Cm5ranJWSG5IYkhnN1dOWVk5ZFZuZi9uZ3c1Q1hwMnExNjUreDVmL2Z6c2Y2Mm42MWI4MGN4V0xrQlRiL2hzZWYKM2NDcnE3OStVSmdXY2FWc2RMd1VMd1kwYjUzdmVzeEE5a0pGbndJREFRQUJBb0lCQUdtdGJJTnRnR0R0YWV1Mgo2dURaOE5SSFNRUWdjRGJkc0wyK25iV05HQi9CeExnVjNiSkJJT1VUWm4zVVZBdXVxSDJ1am55NWlqSDRINVgrClFDVVlEeThMaHZVTkRjRThCUEJveXlER1RveGFXZE9ZZ1VEd3NNL3lwdlh6aytzbEZuSlk1ZUJuT3pmK1FRck4KbFI0bU4rbStKVWY0QnRxRHkxK3NxMUFhT0NNV1VNWnBkWVRiUzNnWVpSTjkyR25jcW5TU0VvYUFTNW9qUm1QRApyVUE3L1Izc0h5ZFdOcmw5QnBPV2Z4aEpidnFxRHZaRkdLSjllKzJRZERJeXFOeFdjWnJ0NS9pNkxxYWNPU2paCjZzbEdtTXhsdzR6SHJIMk01K0tDSjMxei85bkFBaU5aNzVHZHFLSXFpNmZ0ZTdBakdyaXpHeDF0TUtsbHZwTUYKSDVydGVJRUNnWUVBMWJzL0d6Q0hzY1BrT2V4dHBTZEptZTJKakpLc0RnNjRORUR6dUNLK3VPaGQzWHdyRTRxUQpJZkEwRktES3lZNmxvSm81U0plOUlEYnhJdUlMRVNoK0krajR4ZXlzd1JjVzRSVlg2MEsxK0NtTENWdk12bzdZCmROVkZmQ0hIcDh6U0VpWW5rdEtQK1lGalFiZFZKeTV1YXdNazY2a0lNRTNzUzlkU2FxT2dHekVDZ1lFQStWbzgKc1FxVEFTY0EwTkFxUmRJYmhrU1VrSFZ0RERxRFlKTld6UXhPUndUbXFabzdzV2VrbG9VZGh2Mk1NWkJhVEMzVApOdjRvVXRWS0ZXUk1aQmduMVNhNG1JbFh0NG1yNnV0dmtQdlRGZ1g0akJCMW81MmJVSFhETEF2VkgzMGd1QXBCClNXQnBXR0Z1d0tDVUV4UVJsZVlVZDJqSGhOWEZab0RDRHZWTW1jOENnWUF4WmR5WkFTZHJtNVhsR1ZMaUorbG4KN1RHc1RyMzdaY1dITmpmZUtCR2lsUG9VMWJ6ekFFUjl3NUdWN3UvUGsrdU42ZmN4WXZpd09HS1ZLRjljY05wdQpuRXJiRys5MWxVdVJiQ2hzMUhkUVN2RzZrUUFLVHVPU1pUUnhFekdkQThiTnNRbldjbG9hVmFCR01RUTZVUTN1Cko4VGh2cWlJMllteW9hcUh3UmVoRVFLQmdCVWMwOWkxcVg3R2U2WXlpZkhCZVgwajMyUmYzT3pWSTN5UTNSK2QKZEI5RlJmYUVUWnVXeC9QS3I1WlhiNEJlMVpadnB0dVlKM2ZrQVZMUVhEdDVaQjRER2t3b0ROcEllTnI2TmtjVApXMnNZOUZOL3JVWStPUUZXQjBGNmV3QWdpeDJxR0o4SzM4Q1E5MXl0Ky91bGpsdWYwSW5Qd0Z6NThLM2VKeEEzCkt0WTNBb0dCQU0vMCtpcGFpMkd1QlgrOWNYNmJDNlRIRUFTUC9VYlU2UVRPVnAxVEJmcGZ4aWRSTldTV2ZsQjIKeW43MjZHZU13M1FXV1RVY0liR0ZpeHUzbnJKNmRGRmtNNmpsWENkQkJpUS8wN25rVVQ2R1E4VnpaMGhrZEJSdQo2WEZQU0lGTmh4Q1Nqa2dwRGZrRFk2ejZqMGpNQWhFR1p4YURvYnd0TTFzVTV6K01Gd1BwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZZXIzQTg5YmpkenVpamRXVGN5Vnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFeU16QTVNVGMxTVZvWERUSTJNREV5TWpBNQpNVGMxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwQzUyNFZQWUdMcjdUSjVpZnNwYzRaN2w1TTBuVFJhdW5NcEEydjRxZzZHWnMxQzQKUUlHcnhXMWoxSCtSYitoRkN2c3pGdjQ4dWM3VE16dUxyUlJSTVEzT0ZDbEVhVmdNYUdPeHBUV0ZrNGw3VWl1dgpEeEVJOWtUd2hhcndBK0xWSG1BSlRrQ0xId0hTOGh1RVduVlIyRGVGTEFhanRaZnlQTEw2MWJnNDNJRmtiNGlDCmIvMjhzM1ZSZi9Lb1ZTRHpKSlFPZ2ZxbGRuQytPSzZBcUl6ZklUUWhTdlE0aGlKZ1B4OTA0ek1OL1h6bjFBMjQKbmtqclZIbkhiSGc3V05ZWTlkVm5mL25ndzVDWHAycTE2NSt4NWYvZnpzZjYybjYxYjgwY3hXTGtCVGIvaHNlZgozY0NycTc5K1VKZ1djYVZzZEx3VUx3WTBiNTN2ZXN4QTlrSkZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNuNTVRa1o5QUlMV2RSN2RURERCL2JaWlVpTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU4xR0Y0Qy8wZXZLRW4zNlVXRFJHbFdtb1RPc3RTcUdLRjROaHg3VkxzK0dmMnU3Wk9tcmRTCmNkYnJXamJhNzlzNXZQMXU4UCttQ0VCR2M5c1pFM1ozWjRMS0h4eVZ1KzhnN24zdSt0dytIYk9rV2ZQVEdaWWEKQitOR1ljREtuYjFWQzdKUUs4aDZ4MGN3L1ZVdCtsVW14S0hac3k4N1BKcHBicFhpV21GR0dvM3dOcjNYMzJNcgorK0NNZUFZeEZoRW5FVVpaTmxveXo4cTIrWGZyMUU5eGw3TzFKb3JiTjk2aFlRU1BUTHBiMDdjRUVZeW1yTS9HCnA1VGJ2emxsNWViL1ZmQ1NmMm51ckM3R2hYT3E1S09MU29BajlVRjdHK3N2VU85amR0RDZTRndrTElYOWJZWHcKUHRFKzB0YXBodHhjSGIrbkh1cXdiZWVIenA3M1JaOVEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTW5PczFOaE5ZOTJEbXBQSXQ5YjVWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1Ea3hOelV4V2hjTk1qWXdNVEl5TURreApOelV4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDamEvOEd4eTRuTnQzWG1pNC9QYzc4OUYwV0ZWKzMKNXhVUEEyZkYyUlBPdHJ5czR3SXVRM2N0RW80cE5VTEJ4Rm5rYXRQeEF1S2lwY3NiSXQrekFabmE0aE1zUXdyRgpEMjRXT1AxODdEZTBZMkNlYnBGckllM3hqYmNxOE12d0Q5VHF5YVF4bnJ1cjhpYUVqdEROR0haNjMvWERNcGhlClJWVk4vLzFYTU5vY1p1bVZCZFZSa0oxSE1PWEhvME1kb3RnMEFQYmpBajhLK0xDaDlHdm9VMHIxNExBTTZ0T0gKOWlGcnRMTEFWYU1iS0dSL3FMMVE0K0ZCTzZFS3haUCtIZkxHSHZwK0gyL1lvR0J6OU9PRXVtT3VFTGQzYjRXYQpoSTBnVDQrOFVBM3hvdHdFbHg4ZW03YXY0TzZUZlVKQVY0aGZnenFyYmpjc1R0eS9SV2RLclBSSEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNM241NVFrWjlBSUxXZFI3ZFREREIvYgpaWlVpTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFSYjNZeDVSMW9XNDBSUEw3Ym51YWVYTmZVQ3ZnYm1VbzJkWWY4dG55ZUYyZVVuMHEKTlRod2U3RklFaWJteGRBL1RaSGlWQVN0NGprbFkwZkNkbEg3SVZFbUFsakVUWnFTb3EyaWdvRVczN1F1LzFVcwowU0tMcDUxYWw4YUY4b2lPRUtJNjk0eWpUT2JZS005NmZxWS9sV1NkWU5NRXgrbDdOdnpNN0ZwWUtBcnlFcnNiCjlXVFJqR0NKK05HVmxQczdrOGFhMEtCVFU0OVdUR1pPdVF4U0ViSzcrc3Q4YXU1azhBRVdsTGhoWkRwMXhDYnoKaDdsZS9TZWhYRkRBd1ZQWitkbkx2MkVjWld5dk13SnUveG9RbC9LaXZHWVFCNkJEdXd2WGxNeVpoYkEyZmVuQgoxNmtNWFIvZXZYQXFLWjN0NG9aekE4Y1ZydkhlaXVSdXA0NVQ1dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbzJ2L0JzY3VKemJkMTVvdVB6M08vUFJkRmhWZnQrY1ZEd05ueGRrVHpyYThyT01DCkxrTjNMUktPS1RWQ3djUlo1R3JUOFFMaW9xWExHeUxmc3dHWjJ1SVRMRU1LeFE5dUZqajlmT3czdEdOZ25tNlIKYXlIdDhZMjNLdkRMOEEvVTZzbWtNWjY3cS9JbWhJN1F6UmgyZXQvMXd6S1lYa1ZWVGYvOVZ6RGFIR2JwbFFYVgpVWkNkUnpEbHg2TkRIYUxZTkFEMjR3SS9Ddml3b2ZScjZGTks5ZUN3RE9yVGgvWWhhN1N5d0ZXakd5aGtmNmk5ClVPUGhRVHVoQ3NXVC9oM3l4aDc2Zmg5djJLQmdjL1RqaExwanJoQzNkMitGbW9TTklFK1B2RkFOOGFMY0JKY2YKSHB1MnIrRHVrMzFDUUZlSVg0TTZxMjQzTEU3Y3YwVm5TcXowUndJREFRQUJBb0lCQVFDRno0SU1iTDh2d004NQpJTGZKZExTdGp2RkJpZExNWkZ4cjVKL3Q4bWN6bFpFOEJzemNVTVdlbEZqdkNQdFdhWTRwYUFlT2lveEVIWGtICkNURWVBNnVVL0JReTQ5cEhyUEM1SllUNTZ2bFpyUjJKM0lNWnM3aC9WMGlwMG0xS2Jjd3JTMXcwZlFLeU1oNnoKMzdTOG10RTRuM1UrbFlrSmQ3LzNsQ28rWUhQWFdHWFUxVUVYQ09zaWhHb0pJTlpmNktJQi94eDRETE44UnorbApqVGRuYjhubURBc1dobVA0NUZhK1J4QTJwUG50bzJtUkJHaWVPZUVvOThPMVRJWlUyTWVsOU4xUzZlUlBIV3ZYCld2ZEUzZXR0QkRCUUc3a2YxTkVzc29TRkg4VUJrazlvVGNZZ0FoNzN4V2FEMDB3SlJ5NVh0QzNxd0NvVmkzT0wKRWtXbEN2UHhBb0dCQU5FQjJpL2JwK011WGdLVzljUGdsNEpkN0tBQmt4amVqaXBoc3FDTUdxV2xpdFcvby9Pcwp5U284L1dlTTJ1VnJ0Y1FUTFdrY3VxaXo1RUZJTFNEbWl4TFpQa01IQnA5MFB3MFpPVXF3V3BxOStUbTg5TzFyCk9GSnZqaU44OVJrdGxVZG9DWHB1dTdUS29UYTVmU2Y0TUdsUU5zQ1VBUW1ya1RRdnp6Q0dJaXIxQW9HQkFNZ3EKVVNtbkRrZkNCU05xQnBYcUViV1BaSlFqbmF5YXQreEtWQklkVzY4cFBzNHBxWHI2L251SS9IbUQ5cDhHeW9Pego0Mk1UVVYwWnRRSVpQMkpjSE1mb0ZlNXU0cno3QWlnM0JwanZja2l1T0p5aGgwbTE0dUZLclByU3lObmZVTVpICnRSREZVbzN1cDU3WkJ6RkRqRk9ncUE0ZzNNSVVjMDdtTTZROHV0VExBb0dBYlN2Q2crMEFMTEl6ZUxiUmVKYi8KaktEeTBFRUNUS016THdBSkJjTW95QTFJRDQ0aVhVMkxaZnlsZ0VrYXJXc3RibFYyQ3NsdTFsL2dnaGpwT1o0eQpWbzRTNzMvai9iWUNtUnpyeUErRncvNG5CL21qRmNCRGt3dWgrdmR5THN5WWhNdmE1NUNmaXplc0xhR0Z0akwxClZvMEhqRi9DaXdLS3ZlK2JFWVYrbzJFQ2dZRUFscHhBdGJhZGFDRDAvTkNxWStMYnNHRlVyS0tmNFdBSlJDSXAKWC9mM0pMVkVMSnZzaWp5UmZ5SnoxbnNVOWxPRnpkTnRKUDlFR1dsZWFWWFYrNHlUbTFkbUtTSUdPV3dsRTExVAorWDh4M3I0NG1xSnZ5V2F5Y0JKZ1ZkcUVobXNodkEvNGpjWHJlQ0E2djZ0TlhpUVZVbGR3SERGZDZpcTVHSVRlCkZwWWJma0VDZ1lFQWtjM2dEaFhzNG9mZ01ZZjczeDEzd3pRV0hTbnZ6VWlVVmVjNnpaSXp0Ti9FRFcxQU5VN1YKMnNaN1B4QlRJYnVrb3BsOGxZbyt2V0NZdU1meFZ2TEt1MVBSTHVSQWtwTVJpVWJQaFBoUHAvakZCRzdURVVGbQp0TWJpNDVRdVB0dFBpaXEzSmYzaGN2Y3VNTEJCSTRXbXRFWXdYNGtNc3U3bjJMRTlBejU2TjVBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZZXIzQTg5YmpkenVpamRXVGN5Vnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFeU16QTVNVGMxTVZvWERUSTJNREV5TWpBNQpNVGMxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwQzUyNFZQWUdMcjdUSjVpZnNwYzRaN2w1TTBuVFJhdW5NcEEydjRxZzZHWnMxQzQKUUlHcnhXMWoxSCtSYitoRkN2c3pGdjQ4dWM3VE16dUxyUlJSTVEzT0ZDbEVhVmdNYUdPeHBUV0ZrNGw3VWl1dgpEeEVJOWtUd2hhcndBK0xWSG1BSlRrQ0xId0hTOGh1RVduVlIyRGVGTEFhanRaZnlQTEw2MWJnNDNJRmtiNGlDCmIvMjhzM1ZSZi9Lb1ZTRHpKSlFPZ2ZxbGRuQytPSzZBcUl6ZklUUWhTdlE0aGlKZ1B4OTA0ek1OL1h6bjFBMjQKbmtqclZIbkhiSGc3V05ZWTlkVm5mL25ndzVDWHAycTE2NSt4NWYvZnpzZjYybjYxYjgwY3hXTGtCVGIvaHNlZgozY0NycTc5K1VKZ1djYVZzZEx3VUx3WTBiNTN2ZXN4QTlrSkZud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTNuNTVRa1o5QUlMV2RSN2RURERCL2JaWlVpTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU4xR0Y0Qy8wZXZLRW4zNlVXRFJHbFdtb1RPc3RTcUdLRjROaHg3VkxzK0dmMnU3Wk9tcmRTCmNkYnJXamJhNzlzNXZQMXU4UCttQ0VCR2M5c1pFM1ozWjRMS0h4eVZ1KzhnN24zdSt0dytIYk9rV2ZQVEdaWWEKQitOR1ljREtuYjFWQzdKUUs4aDZ4MGN3L1ZVdCtsVW14S0hac3k4N1BKcHBicFhpV21GR0dvM3dOcjNYMzJNcgorK0NNZUFZeEZoRW5FVVpaTmxveXo4cTIrWGZyMUU5eGw3TzFKb3JiTjk2aFlRU1BUTHBiMDdjRUVZeW1yTS9HCnA1VGJ2emxsNWViL1ZmQ1NmMm51ckM3R2hYT3E1S09MU29BajlVRjdHK3N2VU85amR0RDZTRndrTElYOWJZWHcKUHRFKzB0YXBodHhjSGIrbkh1cXdiZWVIenA3M1JaOVEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUlLS2k5T3lnVEpYL3JhdmJ0TG1zSTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURFeU16QTVNVGMxTVZvWERUSTJNREV5TWpBNQpNVGMxTVZvd01ERXVNQ3dHQTFVRUF3d2xLaTUwWVd4dmN5MWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTG5KRzg2bm9YcVIKZWRIOG1iRkRKSmVyQTEyZ1BlQjZqYmdZdmRmYmZLRkkyYzFyVEU3S1Yrc2I0VlJBb2xESWpISkdqMnBvWXJyUwpCQWErakxtZmNNY1dsVEVjVnB4YnEvL21CbjFmYUtvRzFOZVR4YTJodWsyVThpdFNlbFdXVldwc1phamZReXNHCjRvSWFhYVVXMll1SnNKMzVEYlBwM0hNbFI4UTNrTDd4ZnRFZVk5eEFqME1EMGdBZ3BjcVZ1ZUFPdk5qTmx1SGIKcEcwZ3dSSnlzeXpKRXdId2tmSXFld0pNdW05NlZUZFZqN29CSVBpeXdKdnV4dDNleDBvTUVCWkg5d2JtM0FjMAo5alkvU2QvMUcxdWU2NWlkcW5LYmMrUjh0UWt5NlVTODRoNTRQMDJRdXJNSDJ4ZWVwR0ExdnhGM0Z3T0hrVGRZCnl2ZmNJTmd5Y3hFQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVemVmbgpsQ1JuMEFndFoxSHQxTU1NSDl0bGxTSXdNQVlEVlIwUkJDa3dKNElsS2k1MFlXeHZjeTFrWldaaGRXeDBMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFsME5XQjRFdVpGYzMKVFFtenVTeVU1NHJVdkV6REJtUU01VVhJbUlMRzNqUE9kMm91NTRzWjVQUEZuRnJpK3ludDNad2FPcGNwY05mQwpMZUU0U2hkVy8zR3VzWUtqUTR4ZThxWjNrNDJuVXRCQkhkRDVaTHplcGwrdm1tNU9Gdy9BQnVDK3R3WTVDa2l0CnUvV3k5TWJSVWI2ZW9PYkIrNUluRDljb083SnFoTE8vUk1vditIK1F0R1ZiWHB2cTEzZUgwSTVGd2NSUzByVW4KYm9TS0hDRXNSaFlodG1qOEluYklIQTlDV1U3U3hsTk5FbXJDd3hRS3pGVDB4T3liT0p0NnNaTHl4TC9DVks2VApNWjNnSFRkZnN6TTVIbmlxdVFodjB3aTFLY2Zmczg1OXdZdmNTVzU5RlV5UC84NXZhNXhoVCtyc3JDa2lXWWliCmV3dmRFV2taUUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWNrYnpxZWhlcEY1MGZ5WnNVTWtsNnNEWGFBOTRIcU51Qmk5MTl0OG9Valp6V3RNClRzcFg2eHZoVkVDaVVNaU1ja2FQYW1oaXV0SUVCcjZNdVo5d3h4YVZNUnhXbkZ1ci8rWUdmVjlvcWdiVTE1UEYKcmFHNlRaVHlLMUo2VlpaVmFteGxxTjlES3diaWdocHBwUmJaaTRtd25ma05zK25jY3lWSHhEZVF2dkYrMFI1agozRUNQUXdQU0FDQ2x5cFc1NEE2ODJNMlc0ZHVrYlNEQkVuS3pMTWtUQWZDUjhpcDdBa3k2YjNwVk4xV1B1Z0VnCitMTEFtKzdHM2Q3SFNnd1FGa2YzQnViY0J6VDJOajlKMy9VYlc1N3JtSjJxY3B0ejVIeTFDVExwUkx6aUhuZy8KVFpDNnN3ZmJGNTZrWURXL0VYY1hBNGVSTjFqSzk5d2cyREp6RVFJREFRQUJBb0lCQVFDeEpwV1FVUUZGMlUrYQpyazF5M0Q0WkxPVVJzb2t0OGs0T0cvRngwWVVlV1ZQdGJ3R2RJNDMvemw3bXNwYlRodGQ4NDlFK3VuaGlBWDM3ClhGamRhcTNqK0tHYjZaU2dsVDBGempXaitJVFprNWdDVTVLcnhNbmJ6a200aTNYQkJJOC80a3B4WXlvdDdldXYKK1RXQlNLOTVRWHFhdDIrY2ZVTkt2R0taTkE2ZU1oRXdWbGFjR3UzM3Exb3QwOGIzMllXTlpjYldvNTFFY0hzeAo3Wm8vWUc3dEhrTUczZU9RZEcxUURKb0NyZ1lXcm02VkVzT1VaaEV6Sk9ySDI4QmloOHdpa1gyb1RSZ3NhczBFClRnd0xVdlF5NzJpb00wNER6bHNMZ1E5eVJ5c01OeEp0bkplbVBTOThITDkyM3Z6dDhRZXRoZnlXTnZaVjdrYW8KT3ZBV3VvUlJBb0dCQU9vcitIekxXQVZrUkRVc2U0clYxY3NPWnoyTVNTQlNVdzl0WHk3Wi9IbU15UTFzb3o5bgp6TmZXNlR6dUlodE1JNjJJem4wTUJqZFRvbXRIY3h3MkR5Rm9vaGJWczFiQW9aSFhTbThMSk1xTkxsdmJ4bElICk1oUEY4L3hrT0hoemVJcW9vQTduV1JpcEhWOEpKNkdOdW1na1AvQ3lnWW5kaElDTFJtZmk4emt0QW9HQkFNc2EKZ0R1Tlk2UUtiL053c1NadGs1OWRyYkM2QllLYnlJb2J6M2RSZmtnblFhVDlPNTE5ZzhvMVFmYXBKcXUxL3BHUApuMjlVOGlmRk9qYmF1SWtpL1MzejV1TkEwWWM2U0RCdkZhQklCSjVuaXd3dmV2WlowY0RLaW8rVElwY01vbDQzCmh1NmdDSDJUN3VjSE9XK2RtVjF5TldBYUo5b2MyVmo4UjB2TEhvZjFBb0dBSUcvU3pjYUUvTW8wd0lEVzVCWlcKdFBmYnlTVERoRnlpOE1JZnF5ZTYxME52SGhMc1VmNFkyOVVESGRPR21lMWtDOGVsZ3FERnc2Z3NHVndlVDh3VgpNSFdEN2xIUHM3YWZLc3A5bndBV0twQi8yVzJKL1JiT0V2c2FudDFyRFJSQm9FTlhXSGtuV0Vra3JtTmdQL3FYCjFaRWY0a0YzdkJjWklZMHBSWDZrWGtrQ2dZQmpiV2JIUUpFOTFnbzJINzNwZFEwbW9FS09XSktuL01Gd3N1cWUKbTl0NVVSWjJ3YTEwak9SK2toSG53YWozdUpHV0NyeGZVVE4ydXJ1ajdQRVgyWFFlRWQrKzhwVmdZT3pFSVMxeQpHSytDS0doT245UFBVK3MyT1RFWjFrckJyV0t6UXZXZ1RlRzZNRGh0Q3dGWUhjdmRqaktKQ0dUb0J1VjBCWlNWCml5czRIUUtCZ1FDNEpzeDRZOHVnNUlQeCtCOEp6dS91MUdzR25kQ2JhcUhteTN5dU9BNndyUlppNjJ4bTZsei8KTjh1QWFSNVZrKzBkaU1qbHUrakNZSFF2bWFXdnVMaFhJeCt4V1FNcnQwdTAxV1NYQ0VGRU1DZ2xWdVRFTzR0bgpQR0k3SU5uSjlzMFZhSnh1aFgybGp6OUJlN1M5SVpoay9FODBFbWRmZGdERG4xNldmMDduTUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 9381de91a285c93e2d5fe7cac557de9996ed6b0dfb15577ae7c96a9a48b550e1
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27eb75e39cae7cc63616f8b5023285c4c5c343e8ba9b5e6fa3b653c67769efc1
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 50b6d009b5d2e021911e720df40c411ec815d16153d7d84c93ab3578e15197ba
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
