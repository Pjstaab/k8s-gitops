# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.traefik-ingress.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1I4Sk5ybXpuM0hpN0N6NXdleUlXREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzN4clpsK1p6ZzV2SVV0eUZLOWZKWit1cTdEYmZLZGprSm52Zm10RndWMnBXRGlNTFoKMTl1cUJmSDcxRjA0anBleWxzWmw2RlIzY1VZMHlKbkZ0bWNOYUdxZEZhSXd0VzFldHZoNTE5aGxuREZ3aU9Odgo5MnZ0R0NLTUpKOE83RXJrWUVRak0xVGhYWmdPZCtlRWU5VnpDUFFWb1VNaXhmb1lDb1FRekFiMUlVdk4rT0pRCmtmOG5sWnFnOVNWbjBXYTZ1b1hXQTFVdTllVmlncGJhd2I5K2xNdHJTWWF5QlRjeEExMjhPUWF1eGErd0tpenoKaGZzZGtkaVZ5MHhjQVNka2N0MXZLRi9CRTRRRytQMVcreDYrOWZWSE9xNGM4UkFGRms4MjFOSUFNTkNiY0dPego1Uk42NThiSWJzNDBVUTJQTFJ3cmxJb09ZR1BLTGMzbDNaS1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVbHdvb2RzSlRZM1FCbXdUTkxZSWJ2OThFclV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJL2JaUTBVcTczcnExbjd3b2ppZmd2YU5xNTZTVkswMEVmZ3MzZFZJL3RwZTdiN21oU3N0VXNSClNTL3QvdWFyU005U04xcGs4bWdkTmdRNVY3VXFnbnJrUlJnVmhWcGxzWng0T1hMZi84MGlEYTNzaVFYYlJiVjUKVU5aUEZOeXF6REpZUUVURzBhTXJzYk01Q3h4SHE1Szh3MkFnRlRtM2lEUERLSk8wTmkrZ3hSeUtlUkNqRlI1TQpxQzJ4STNRT2RBaXkwRklHc3dlMjVjS1JtU1NGU0R2Vk5aM0tNYmFVNUc0SklaSkZiRkZkazA4T0ZHZ1lZR013CmNnVllGdVlmL1NiQ0hTVlEvSmZ3TkUyUE9KbThuMFdMc0dQMVBCbHhmTUtjNm40ZWlrUE5JYTNkOW5BaU9obDAKMFVVWC9qSUxEd3hkUkZXZUErcERWcS82Mm96ZDh0MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdDhhMlpmbWM0T2J5RkxjaFN2WHlXZnJxdXcyM3luWTVDWjczNXJSY0ZkcVZnNGpDCjJkZmJxZ1h4KzlSZE9JNlhzcGJHWmVoVWQzRkdOTWlaeGJabkRXaHFuUldpTUxWdFhyYjRlZGZZWlp3eGNJamoKYi9kcjdSZ2lqQ1NmRHV4SzVHQkVJek5VNFYyWURuZm5oSHZWY3dqMEZhRkRJc1g2R0FxRUVNd0c5U0ZMemZqaQpVSkgvSjVXYW9QVWxaOUZtdXJxRjFnTlZMdlhsWW9LVzJzRy9mcFRMYTBtR3NnVTNNUU5kdkRrR3JzV3ZzQ29zCjg0WDdIWkhZbGN0TVhBRW5aSExkYnloZndST0VCdmo5VnZzZXZ2WDFSenF1SFBFUUJSWlBOdFRTQUREUW0zQmoKcytVVGV1Zkd5RzdPTkZFTmp5MGNLNVNLRG1CanlpM041ZDJTa1FJREFRQUJBb0lCQVFDSXpjSGw4NFRXM3RTQwptemlMWnI2OFFNOFA0OHhYU041NHpQL1ptNVdaSnhoNXpBclF3NkZmMWdFbTZCVmxEckRhWHViZDRhOVBJdUdTClZXb3pCZTk4eWFmanU4RDY1WE8vT0JHTUVpT2lzRDBWZXJGa0hoa1hiQW43clI5Q3FwK3RsZ1BpK0VsTllyRFkKeEdWeCtBVVRGeTBzRk5tM1B3MUhiRHlYakduNWUwWDF5blViSnVRaHVjVUhyK1VQekZvQi9hK1crekpUN0F4YwpSemhESWhBYTFYNGFOR0hhZFg2bVY1UDYyVTFEbTk1d3VLMjB4RUplK0RNYXNXZklZN2NIeTNXRUlhNDZXN0JiClM0VGRNMU9hWHUwYUJ5Z0dJU3pTejhLZlhzSmwzNjMwdG5TRWw0QytWTmpqditUMlZWd3pZUDJrK2xUeDBMUnEKRWc1OGNKRGhBb0dCQU1sOWV1UThRWjMvNEZ1WW9Qb2NWejJJL0lySEMrNU5YcmFrVnZOLzVZcXNEWGlUZW9QSgpBTmlHL1pjU1lwTzdIVW1aVlRSbVcyUHZRa3pnQXFuaGE2VjB4K2RMbkFXYUFKTnBLNkxyUUhDa1A3ak5yLzRuCnZVdFZxZ3JYdkVGL0k3ZGdkUWRlSXorL1NPM1VXTyt6N21IUG54NHhmUHBFcHF2RkVBTVk3TWxWQW9HQkFPbCsKYlA4bTRSdFVjcW5FaEZZZGcxTHJmYzZlc3dMRDYzUlh2a2VBb1JxQjFncFFuMVZIbENuMXhkOFZKcU9wOTcvMApBOGFKT3lLSSs2RDZlRGlPUm1FMG1GNUg4cytuQVphV05GNlZYeVBlUlBxZFpBT0FFdVMvT1p5UVgxSmNhZEkxCnZpaXg3Q2Y1d3k5Q2VrSkE1bzV4WDE1blI3dTM4RWU0cmgvYndQUk5Bb0dBZFZsQWJwYnRmSERmSVZtbVA2U3IKNXFuV3M1aXp5U21FaFFqM256K1kxNGZYSEtlQURpck45RTNDZWU3NlBLSVlyNW0rOXhLNkhWem1sMUZNRzlhdQoxQ0ZNbjlmNFdZYlUyUVhDcFZNd0o2cHhkbGROTGMvRlBvLzR4Zkhac2FlempJU0FCRGQrZmcwUkUzcStCWFVjCjNCaUl5cFAxL3VobXpkbXF0ck1ZalRVQ2dZQjhqUnI1VkRUNkRpY0lGakw5ZU1ySG5hVERaZlpaZ0VjR0RaUUwKc2pxOTJBcGtBRE91R3Z1WEVtcFZvSU8zQkFDTFhVL3lSTnZOaFVLczBVNzE1RGI0dlVTVjdrMUFwWFo4YkcxTgpFdUxvVURWOWRoMlduR2YzcTJYQTlXWlRtY1k5QXJ3SUd6aTg3a2RHMjNBNkRVS3ZNeHpMVDg1OC9SWm9POFJ1CmJCdldkUUtCZ1FDZ2FvRTZGN21FMlhCLzVGLzMvSCtGcVZjSURIam9Scm5CUlQ2NmxoNXNqc3R2VHJvcXYrS3gKS09zZjVVTDNxWnNIK2c4MnEzUUI0YUdzL0ZtVmhaempIRzJGdTBsQ0duQU9tenhsekJXdWxjbk9WS3hoWklncQpLN0pDbm5zL3hnMU9OZGNtaFBiV0N1UDVPWVgyV3J4eVlEc3VzQmp1L05nSGI5b3BQbkQyRFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1I4Sk5ybXpuM0hpN0N6NXdleUlXREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzN4clpsK1p6ZzV2SVV0eUZLOWZKWit1cTdEYmZLZGprSm52Zm10RndWMnBXRGlNTFoKMTl1cUJmSDcxRjA0anBleWxzWmw2RlIzY1VZMHlKbkZ0bWNOYUdxZEZhSXd0VzFldHZoNTE5aGxuREZ3aU9Odgo5MnZ0R0NLTUpKOE83RXJrWUVRak0xVGhYWmdPZCtlRWU5VnpDUFFWb1VNaXhmb1lDb1FRekFiMUlVdk4rT0pRCmtmOG5sWnFnOVNWbjBXYTZ1b1hXQTFVdTllVmlncGJhd2I5K2xNdHJTWWF5QlRjeEExMjhPUWF1eGErd0tpenoKaGZzZGtkaVZ5MHhjQVNka2N0MXZLRi9CRTRRRytQMVcreDYrOWZWSE9xNGM4UkFGRms4MjFOSUFNTkNiY0dPego1Uk42NThiSWJzNDBVUTJQTFJ3cmxJb09ZR1BLTGMzbDNaS1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVbHdvb2RzSlRZM1FCbXdUTkxZSWJ2OThFclV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJL2JaUTBVcTczcnExbjd3b2ppZmd2YU5xNTZTVkswMEVmZ3MzZFZJL3RwZTdiN21oU3N0VXNSClNTL3QvdWFyU005U04xcGs4bWdkTmdRNVY3VXFnbnJrUlJnVmhWcGxzWng0T1hMZi84MGlEYTNzaVFYYlJiVjUKVU5aUEZOeXF6REpZUUVURzBhTXJzYk01Q3h4SHE1Szh3MkFnRlRtM2lEUERLSk8wTmkrZ3hSeUtlUkNqRlI1TQpxQzJ4STNRT2RBaXkwRklHc3dlMjVjS1JtU1NGU0R2Vk5aM0tNYmFVNUc0SklaSkZiRkZkazA4T0ZHZ1lZR013CmNnVllGdVlmL1NiQ0hTVlEvSmZ3TkUyUE9KbThuMFdMc0dQMVBCbHhmTUtjNm40ZWlrUE5JYTNkOW5BaU9obDAKMFVVWC9qSUxEd3hkUkZXZUErcERWcS82Mm96ZDh0MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdDhhMlpmbWM0T2J5RkxjaFN2WHlXZnJxdXcyM3luWTVDWjczNXJSY0ZkcVZnNGpDCjJkZmJxZ1h4KzlSZE9JNlhzcGJHWmVoVWQzRkdOTWlaeGJabkRXaHFuUldpTUxWdFhyYjRlZGZZWlp3eGNJamoKYi9kcjdSZ2lqQ1NmRHV4SzVHQkVJek5VNFYyWURuZm5oSHZWY3dqMEZhRkRJc1g2R0FxRUVNd0c5U0ZMemZqaQpVSkgvSjVXYW9QVWxaOUZtdXJxRjFnTlZMdlhsWW9LVzJzRy9mcFRMYTBtR3NnVTNNUU5kdkRrR3JzV3ZzQ29zCjg0WDdIWkhZbGN0TVhBRW5aSExkYnloZndST0VCdmo5VnZzZXZ2WDFSenF1SFBFUUJSWlBOdFRTQUREUW0zQmoKcytVVGV1Zkd5RzdPTkZFTmp5MGNLNVNLRG1CanlpM041ZDJTa1FJREFRQUJBb0lCQVFDSXpjSGw4NFRXM3RTQwptemlMWnI2OFFNOFA0OHhYU041NHpQL1ptNVdaSnhoNXpBclF3NkZmMWdFbTZCVmxEckRhWHViZDRhOVBJdUdTClZXb3pCZTk4eWFmanU4RDY1WE8vT0JHTUVpT2lzRDBWZXJGa0hoa1hiQW43clI5Q3FwK3RsZ1BpK0VsTllyRFkKeEdWeCtBVVRGeTBzRk5tM1B3MUhiRHlYakduNWUwWDF5blViSnVRaHVjVUhyK1VQekZvQi9hK1crekpUN0F4YwpSemhESWhBYTFYNGFOR0hhZFg2bVY1UDYyVTFEbTk1d3VLMjB4RUplK0RNYXNXZklZN2NIeTNXRUlhNDZXN0JiClM0VGRNMU9hWHUwYUJ5Z0dJU3pTejhLZlhzSmwzNjMwdG5TRWw0QytWTmpqditUMlZWd3pZUDJrK2xUeDBMUnEKRWc1OGNKRGhBb0dCQU1sOWV1UThRWjMvNEZ1WW9Qb2NWejJJL0lySEMrNU5YcmFrVnZOLzVZcXNEWGlUZW9QSgpBTmlHL1pjU1lwTzdIVW1aVlRSbVcyUHZRa3pnQXFuaGE2VjB4K2RMbkFXYUFKTnBLNkxyUUhDa1A3ak5yLzRuCnZVdFZxZ3JYdkVGL0k3ZGdkUWRlSXorL1NPM1VXTyt6N21IUG54NHhmUHBFcHF2RkVBTVk3TWxWQW9HQkFPbCsKYlA4bTRSdFVjcW5FaEZZZGcxTHJmYzZlc3dMRDYzUlh2a2VBb1JxQjFncFFuMVZIbENuMXhkOFZKcU9wOTcvMApBOGFKT3lLSSs2RDZlRGlPUm1FMG1GNUg4cytuQVphV05GNlZYeVBlUlBxZFpBT0FFdVMvT1p5UVgxSmNhZEkxCnZpaXg3Q2Y1d3k5Q2VrSkE1bzV4WDE1blI3dTM4RWU0cmgvYndQUk5Bb0dBZFZsQWJwYnRmSERmSVZtbVA2U3IKNXFuV3M1aXp5U21FaFFqM256K1kxNGZYSEtlQURpck45RTNDZWU3NlBLSVlyNW0rOXhLNkhWem1sMUZNRzlhdQoxQ0ZNbjlmNFdZYlUyUVhDcFZNd0o2cHhkbGROTGMvRlBvLzR4Zkhac2FlempJU0FCRGQrZmcwUkUzcStCWFVjCjNCaUl5cFAxL3VobXpkbXF0ck1ZalRVQ2dZQjhqUnI1VkRUNkRpY0lGakw5ZU1ySG5hVERaZlpaZ0VjR0RaUUwKc2pxOTJBcGtBRE91R3Z1WEVtcFZvSU8zQkFDTFhVL3lSTnZOaFVLczBVNzE1RGI0dlVTVjdrMUFwWFo4YkcxTgpFdUxvVURWOWRoMlduR2YzcTJYQTlXWlRtY1k5QXJ3SUd6aTg3a2RHMjNBNkRVS3ZNeHpMVDg1OC9SWm9POFJ1CmJCdldkUUtCZ1FDZ2FvRTZGN21FMlhCLzVGLzMvSCtGcVZjSURIam9Scm5CUlQ2NmxoNXNqc3R2VHJvcXYrS3gKS09zZjVVTDNxWnNIK2c4MnEzUUI0YUdzL0ZtVmhaempIRzJGdTBsQ0duQU9tenhsekJXdWxjbk9WS3hoWklncQpLN0pDbm5zL3hnMU9OZGNtaFBiV0N1UDVPWVgyV3J4eVlEc3VzQmp1L05nSGI5b3BQbkQyRFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1I4Sk5ybXpuM0hpN0N6NXdleUlXREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzN4clpsK1p6ZzV2SVV0eUZLOWZKWit1cTdEYmZLZGprSm52Zm10RndWMnBXRGlNTFoKMTl1cUJmSDcxRjA0anBleWxzWmw2RlIzY1VZMHlKbkZ0bWNOYUdxZEZhSXd0VzFldHZoNTE5aGxuREZ3aU9Odgo5MnZ0R0NLTUpKOE83RXJrWUVRak0xVGhYWmdPZCtlRWU5VnpDUFFWb1VNaXhmb1lDb1FRekFiMUlVdk4rT0pRCmtmOG5sWnFnOVNWbjBXYTZ1b1hXQTFVdTllVmlncGJhd2I5K2xNdHJTWWF5QlRjeEExMjhPUWF1eGErd0tpenoKaGZzZGtkaVZ5MHhjQVNka2N0MXZLRi9CRTRRRytQMVcreDYrOWZWSE9xNGM4UkFGRms4MjFOSUFNTkNiY0dPego1Uk42NThiSWJzNDBVUTJQTFJ3cmxJb09ZR1BLTGMzbDNaS1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVbHdvb2RzSlRZM1FCbXdUTkxZSWJ2OThFclV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJL2JaUTBVcTczcnExbjd3b2ppZmd2YU5xNTZTVkswMEVmZ3MzZFZJL3RwZTdiN21oU3N0VXNSClNTL3QvdWFyU005U04xcGs4bWdkTmdRNVY3VXFnbnJrUlJnVmhWcGxzWng0T1hMZi84MGlEYTNzaVFYYlJiVjUKVU5aUEZOeXF6REpZUUVURzBhTXJzYk01Q3h4SHE1Szh3MkFnRlRtM2lEUERLSk8wTmkrZ3hSeUtlUkNqRlI1TQpxQzJ4STNRT2RBaXkwRklHc3dlMjVjS1JtU1NGU0R2Vk5aM0tNYmFVNUc0SklaSkZiRkZkazA4T0ZHZ1lZR013CmNnVllGdVlmL1NiQ0hTVlEvSmZ3TkUyUE9KbThuMFdMc0dQMVBCbHhmTUtjNm40ZWlrUE5JYTNkOW5BaU9obDAKMFVVWC9qSUxEd3hkUkZXZUErcERWcS82Mm96ZDh0MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQ1hGYmhyUnpsRDZFaXNoOFdlMFVEREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUUhoejc3UnBZb1dETnBIWGFLY2pMckFxcmRDcVIKcmRhM0RLZUVybHlYZm1HZXIrcERmMTFyWmxCOHkvYTZNSFdlS0J2ZCtGNWJhZmFqQkJ3ZERCbmlrdXFaMW03VQpIck00WXZlWTZqbENEdWhPcHF0T2FFbGVMNkhkRVZwNkVzY0hVMW9qdlVpUDNKRGZaTXdLZkRqeHU4UXczK1l2ClQ3SGoyWVBmZ1o2NDE2cDlrNXBRZmJKam5lQmF2ajQ1eUk3WUQzcHJqaTFzdGo4T1lEZFMyNVE1clhhSkwxNEEKc3NBUDI5eWxGNHB3cFllZ1lPV2dxSTNlOW11eldmUVl6UTVHTWtCU2V3d21OR1Flbm00R0UwWHFtWmtPZlJOQwpxT2tndzZmNFZFd2ZSeDhSc3lZNWJPQ0RqMjdxYmVmdVFzRmVWR2wycTNkWE05WWtIK01QenQ4bkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGSmNLS0hiQ1UyTjBBWnNFelMyQ0c3LwpmQksxTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFQZEVLSm1YUFk3bUtPQkc5VjRwTXVQNkFNanp1c29ISU1Zc0kxRmFYejJoSmJEUFAKUlpPZDF2UlJkanF2bmpCNjREb3ZtMTh2ZmMvZUFyaTFkRk1FWHRVVnR0QzNGY2lRdmlMWVJNQVNxd0JJVVppSgp5bitNMDZpNG43OTYvajByTFZPSGRmRVZMYXVlL2xPUHhSR2Jrci9UQTBVUFFkUnpwaVVmbm9EcTlmZFpjYWlwCmYwckJveUNQOVFiN3cvdWNRNHcranVoSWhsQVZlSjhJNWQwMGRranpKU1MrMmg2S1ZBMHpac0dITTBqQTZKaFAKOWo3NWQ0Sys4dVkvOHJRZXI1eWhkNzZIWThXR3MyK1gzR3RUc3JCbmNnOEpLRUxwcWV3TEVIMG5Hd2hKQno1WApmNDJ6WWRkRHZHVGt0eUJHTkZkV3VDY0EwZzRjd2lDeEhITW41dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEI0YysrMGFXS0ZnemFSMTJpbkl5NndLcTNRcWthM1d0d3luaEs1Y2wzNWhucS9xClEzOWRhMlpRZk12MnVqQjFuaWdiM2ZoZVcybjJvd1FjSFF3WjRwTHFtZFp1MUI2ek9HTDNtT281UWc3b1RxYXIKVG1oSlhpK2gzUkZhZWhMSEIxTmFJNzFJajl5UTMyVE1Dbnc0OGJ2RU1OL21MMCt4NDltRDM0R2V1TmVxZlpPYQpVSDJ5WTUzZ1dyNCtPY2lPMkE5NmE0NHRiTFkvRG1BM1V0dVVPYTEyaVM5ZUFMTEFEOXZjcFJlS2NLV0hvR0RsCm9LaU4zdlpyczFuMEdNME9SakpBVW5zTUpqUmtIcDV1QmhORjZwbVpEbjBUUXFqcElNT24rRlJNSDBjZkViTW0KT1d6Z2c0OXU2bTNuN2tMQlhsUnBkcXQzVnpQV0pCL2pEODdmSndJREFRQUJBb0lCQUhkU2ZKMjRjSjJXVVJFMgpsTmR6azR1cTVTY3VZR1hML01wUXVBOHJoU3phcWcrNG5xRDZlazVraUFzMVNnMndVUTlQd2NKL2IySU1HL3VWCkZLVlcxZFNCRlg4RVllQytoVlR6OFMrOFF2M3IzQ2VVQ2EzWHZ4RUFVRmFXWjRDTUdZN0tyR2pIVXI0ZzRQTWsKTUpSbWFxTzJXeU1HakV4ZDdnbE1JZjdZcTI4Z05mcmMxeXFGNFJvalBlZUdhUm55THNvV0dUcWdaWlhPelZSRAptTnFOeUVNS3c4amxZcTJMRTFOem12N3d5eU16bHBmVWhrTTA3R05ZVXFZSC8zck5FQ01WcXIzNWFoSEhsemNHCmdiZ2FKLytFcHpHQm9kUXJ4K2RkL0kzakVVOTBzK1A2eUJEWjhLTXhkbUdvS2xOa3RVaFM3NWxueDRYdm5mcEsKSU9OYmlia0NnWUVBL01QQ1p0ODFFUWROd1FlSmdHeW5ISnF3WnM2NXdqSkptN1VDK0d6NmY1S0NTY2V5ZHhScgpNT3hjQXRtc2QwZGxnYStzTG83SlF2eDY0Wm8yZVlnQnJ2RUozaW9yTkhYdTVHTTcrcnBYc3FIVUpZL3ZOdDlpCmNQdHkxZnV3eG1YZnVnRkJLZ3M0RTV2OVJESklmWGZ4cHNWekFibXlZYy9ML05GSEhWVUlNZXNDZ1lFQTBzZ08KdzIxRlFPd0JKVE1QV09DV05iNnlnY2dHNktza3UzaytNcWRtT08xRWtYWXdZejl3OFVObnhUcW4vVjNDazNwegpnQVAxY0FxTGs4K3BrQS9tME5TQWFuakpWUmFMV21SdWYyREZzU2VrVUlJZ0YvMVhXZjJBUkUzQjVMKzdyVEl4ClJrWmFCRWV5Q29wZlZ5Z3l3UWFqRi90K1liaWFCdzJxbXlOUnZMVUNnWUFLTm42c1dXaHpmN0FNbEpsaHJ3SXgKamE2QytPZFlpVitnQXZoVHdWTjl4Qld2bFhvSWhiS3ZEMTNJWDdNd1BwcERXeTNCMDlNZCtjV2RSL1hiZ3p0TwpMajhQMHZSYjhrZnN3bld4ODhXSFdqS1FNZmlnWnZZN1NtMmhaOElFd2lrQUF2ejNEZXorSGRkbDRnSTd6NVRjCkFDNWRhM3RocUZ1OW8xY1VRRk5NY1FLQmdBeWNYWTNCcnVBSWZyVU1EZ0lDUmRwblUyVENZKzl0dGQvbGpCd1oKdWRyMER5TW8wQkpRREdEUzZKVjdRZXU5dlZOM2d3dUlzUm1IOS92YTg4a2p1bXFLSERqQ2kwRWsvU2RtVk5vWQpIeHZQUkZ4d3ZKelMwblFXMzZLMmlFQTRYSEVyVEpsb3doLzViaVNGVE5qNUZiaEl2bDlEODdiREJhd2dYREcxCjlrRDFBb0dCQUt3TGxGSndJSzY0NmVxMi9FUGdVbnJQWThpUGlpV21nbk5OYk5SdXZSUzhyNlRmTTJuaG1mTk4KRVVkNkJBZ3owd1NHZTduMEFZaWM2N0VIbEo2VklxakVzV05TVC91Ym4vdTZIYXQwdVd1c1ZjSVArcUtuWWJZbAoxczNrNGVGUWoxMDVBS080N096dGF6V0hweDB2Y0F1d09zdG0rbldkMHBZYThTNVdPNWZFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1I4Sk5ybXpuM0hpN0N6NXdleUlXREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzN4clpsK1p6ZzV2SVV0eUZLOWZKWit1cTdEYmZLZGprSm52Zm10RndWMnBXRGlNTFoKMTl1cUJmSDcxRjA0anBleWxzWmw2RlIzY1VZMHlKbkZ0bWNOYUdxZEZhSXd0VzFldHZoNTE5aGxuREZ3aU9Odgo5MnZ0R0NLTUpKOE83RXJrWUVRak0xVGhYWmdPZCtlRWU5VnpDUFFWb1VNaXhmb1lDb1FRekFiMUlVdk4rT0pRCmtmOG5sWnFnOVNWbjBXYTZ1b1hXQTFVdTllVmlncGJhd2I5K2xNdHJTWWF5QlRjeEExMjhPUWF1eGErd0tpenoKaGZzZGtkaVZ5MHhjQVNka2N0MXZLRi9CRTRRRytQMVcreDYrOWZWSE9xNGM4UkFGRms4MjFOSUFNTkNiY0dPego1Uk42NThiSWJzNDBVUTJQTFJ3cmxJb09ZR1BLTGMzbDNaS1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVbHdvb2RzSlRZM1FCbXdUTkxZSWJ2OThFclV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJL2JaUTBVcTczcnExbjd3b2ppZmd2YU5xNTZTVkswMEVmZ3MzZFZJL3RwZTdiN21oU3N0VXNSClNTL3QvdWFyU005U04xcGs4bWdkTmdRNVY3VXFnbnJrUlJnVmhWcGxzWng0T1hMZi84MGlEYTNzaVFYYlJiVjUKVU5aUEZOeXF6REpZUUVURzBhTXJzYk01Q3h4SHE1Szh3MkFnRlRtM2lEUERLSk8wTmkrZ3hSeUtlUkNqRlI1TQpxQzJ4STNRT2RBaXkwRklHc3dlMjVjS1JtU1NGU0R2Vk5aM0tNYmFVNUc0SklaSkZiRkZkazA4T0ZHZ1lZR013CmNnVllGdVlmL1NiQ0hTVlEvSmZ3TkUyUE9KbThuMFdMc0dQMVBCbHhmTUtjNm40ZWlrUE5JYTNkOW5BaU9obDAKMFVVWC9qSUxEd3hkUkZXZUErcERWcS82Mm96ZDh0MD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRY3ZVNVk4Z0ZGbEx2TmFrUW02TFFGakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TVRJek1EZ3lOREV4V2hjTk1qWXdNVEl5TURneQpOREV4V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0RXBPYlpSRGt5QUEKODFjdnJCWDRkZGd4NU9Sc1h5OTJZUDg1MUdOdmR3SmdtTTlYSVo1TGVaaEY5VWJSSU85MnJCL0l3THR0Vy9sZAo5cDN3Q3lERHNzK1ovaVp1bE9GUllTRkxmZjBrZTBzcWcyb2NjUkdJS3dudEVOWlN6Mjkxd1A3L0FvTkZ6T0VyCnR4MWhGRlNZZVlRanZaTUtYODhoL3JOR0tFMXIxSEhYSEdTZnNsZ2tlQUw1RFdnbHQwc3BiZ2RTc1pLcGFaa0wKSnNNK3BZaXVwSEtNb0JPbGxUcUpraWUyQlBDTzBqYS8wM3l0Y0xJY0ZhcVNBbzFLa2tUZytDMkNWWkwwUzhMNQpsVWYweEYxejFSanF0dG5RanlkSWtUUGJ2U1pUSW1KMnNOWjhlS3VtT1Jzd1F6eE5haFFLdHpIYU9oU1BWckgwClFhalZ2RHBNblFJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJTWENpaAoyd2xOamRBR2JCTTB0Z2h1LzN3U3RUQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0JPQ01pd1BGMVEwOVEKSXBvNWRGUHk3UzdFQjNyQ21SeFFsdlRacWttVkxaREtjd2RiQXFHMDMrS1BaQUwxMGxNb2wvcDRUeXc4Wi9YUgpDTHlLNkZhQ3gzZXQycFRObXNoTnNEcVZUOXJoem11eEd4NzcrSUZwUndidXNTS3RKQ2Zha29DK0srcS9nQ1RqCmhLQ0htTFZqNTljQ2FZeHRROXhuMWNDZDhYTk12UVVma3M2eXVocU1KVlNValgwRkdNNVAxOFdhU2hkSml4aGgKeGJZNlBRc25BbDhmUml4cDZXeTVqbEdrdjhnOXVyeVZqVE5JTWltTGN4ZUNIYTVDaTlqMWtkRTdiU2IvY3NNWQpheER0V20wT3lJR0dWcjlLaFFhMktvWUIxYTQ1VjJxNXc1NVVKTkdtcHhPTVVLcFQzTDlOcFB4TG5ZL3ZhamM5CkpUOXlkUTBtCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBdEVwT2JaUkRreUFBODFjdnJCWDRkZGd4NU9Sc1h5OTJZUDg1MUdOdmR3SmdtTTlYCklaNUxlWmhGOVViUklPOTJyQi9Jd0x0dFcvbGQ5cDN3Q3lERHNzK1ovaVp1bE9GUllTRkxmZjBrZTBzcWcyb2MKY1JHSUt3bnRFTlpTejI5MXdQNy9Bb05Gek9FcnR4MWhGRlNZZVlRanZaTUtYODhoL3JOR0tFMXIxSEhYSEdTZgpzbGdrZUFMNURXZ2x0MHNwYmdkU3NaS3BhWmtMSnNNK3BZaXVwSEtNb0JPbGxUcUpraWUyQlBDTzBqYS8wM3l0CmNMSWNGYXFTQW8xS2trVGcrQzJDVlpMMFM4TDVsVWYweEYxejFSanF0dG5RanlkSWtUUGJ2U1pUSW1KMnNOWjgKZUt1bU9Sc3dRenhOYWhRS3R6SGFPaFNQVnJIMFFhalZ2RHBNblFJREFRQUJBb0lCQVFDeEMwc3JGbTZwZXNNVQpNMmp3SDM4bkVsQWt5eCtVOVlIVlRLMFlZVEVqZUNVdHltWnc4QWFEK01HeVZJR25TeUNKZElqcW91T0liMEFUCm54TUxpbmhERHRUVkhCNTVleTQwS01MK2pPa1hYai80WHVwaEttdENnSFBabGU0cUgvVk51ZHJvTjhzQ241Z1QKTVBtVlFtR2M2dU5DRmJRWlU4bTVXWWtxcUtTY01DeXdEMHNMc1RxbTFBM2Q4MWR2amJNYS9WbExTVmpadkNMZgpxOG9OMzlPQzJKMzd4amtHWGhMMVRYTjdFZmpYb0dzeVR4Q2FoUjNXbjR0cTBoZGJFZWFVVUlyemcwYnVrMDJZCjdvUk83NXBjOEpUY1JqcjBlTHVnRUxsczBzWkFqZDdvMDBFMlg5Wnk3Nk1vY29rL2JySjVzbHFwUUlCbUY3ejMKNVI3Um4yek5Bb0dCQU5XelRUVWFrdnBkUUV0L0hPNWZSZU5BV1VzVG9TZDF2aTZxKzdFWWpmcE5qaXZlblgybwp0YU9panBhS0lhSHhHUjFvNjVGcWxSS0NlRVdOR3NhYUZ4N1pPRUx6Y0lvb05EZDVROXMvcDcvTEk1Yno1UEdHCnFGeHR3K0VEbjUyekNqb1k4RStBRUdHV1UrVVVEMGsvZGQwTENCK2E0UWoxWW9aNnZMWjdCMzJuQW9HQkFOZjYKQ1BmeXl4Z1JvL2h3S0RiQmFvamZKT0d6c1FiWjFRY0IwQzJNTFNBcTBVUG5NTFZJOW93RUdTQTFwZlZMUlVRZAppaG5WY1Ntbk1RQnlBU2F5ZEdQRExXN2cwSnZ4RWdGa09ZcG1IKzc2M2VENGJ4R1VsbXhGd2ErSHErZXFXZDJoCjNPWTJHR2NkemN3S2laWExWV2VibHBDQW5YL0tYaUZzcGtqb1NSUWJBb0dCQUlqNWg1aHRNeDVsSFN3SEN1MUQKaGhGV2txV0xySFVWaEZSM1ppS3FnWDZaclhJekc3R0tyUHA0M0hwamlaRTZiNFdwVmF6OHF4YVZLREEwZEtBdAo3bm5vYzZaK1VYbE1zY09JNTlTbHBZbEsxTUlTRElJL2RMVGg2bmJWRXI5TEhsZ0UyaXVyQTFUNXZVYU5LQXNrCk1SRUEzREVkM2ZZWEN4TDFvdlk0UDZIckFvR0JBSmgxbVpVbVlEVzZaaXgvUi9QM0x6UTFpVHlHYzJYcHFaYUwKc2lBay9zbmhUOTRHT24wT1ozUkpoRThYYi9LclV0Y1ZueUpEYU9IRmN6TGtSMm5BdWFhZTVkaUtmTmhJSWJTMwp3bUt2V3NXQmM5VldxbGtYc2VQMmpoWlJ5SWo5MlBnNlJjeUF6Vk1sVjl3OGFBbEZBeUhqVkRMbmg4Ym8zTy90Cldhakh5S2FYQW9HQkFJLzIrcWluNUM4VGNNSnRxdGFEbEFRRWpDbXgzdGVBN1J1UTRSTVk1cVJRdjg4bGNwUDgKam9jK3ZqQVRkUE5YdVZ6NzFtRTdEL2ZEYjlpZlRMcThxb0taSlhvZ3Bndk5PSkg3Qy8zNHA1Q2t0QXV5ZHJXaQp0YjZwc0creUVSTGxTd3VQWTdjQVFoTTdvSkxDRng4VW91S2RzNTBXRHpNemxjVjFCcUp6WWk3SAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 9381de91a285c93e2d5fe7cac557de9996ed6b0dfb15577ae7c96a9a48b550e1
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27eb75e39cae7cc63616f8b5023285c4c5c343e8ba9b5e6fa3b653c67769efc1
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 50b6d009b5d2e021911e720df40c411ec815d16153d7d84c93ab3578e15197ba
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.5
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
