# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos-default
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.0.0.0/8
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  prometheus-serve-addr: :9962
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos-default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\nmetrics-listen-address: \":9966\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # CORS
            add_header Access-Control-Allow-Methods "GET, POST, PUT, HEAD, DELETE, OPTIONS";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Max-Age 1728000;
            add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;
            add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;
            if ($request_method = OPTIONS) {
                return 204;
            }
            # /CORS

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_pass http://127.0.0.1:8090;
            }

            location / {
                try_files $uri $uri/ /index.html;
            }
        }
    }
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZHovTVV6MTZIcFkwSXpDTmMxZkhaekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9SUnpUZjhXMWk4T3UySlE0MmYyTU9HVTBxdTdNZmdXeDZLb0puWVlFeGkyREJ5UTAKRkZESElqZE5NclI5RW5BU3NHZFM2NFVtckJ3VUxWSDl3WXhJTnBBZ1hQckUvZFM5RFNCcFAyenVXdGFKN0hQOApMRlZZRE9DYjRDQWp1dlZOTGNJSHk5dkdjTEwxcTRCMk9aR04xRTNicUxQQTBhY2Q4V1pDQzl2Q0FWQURLc3EvCmNCbkhEYUFQcDNhR3pWeWJxQzUrZEtzRGl5R1ZvOHQzc1Z0c3NrZmlwbHZ2MTYvZXVlUzYwNzJoNDJMeG5HRVEKdHJ1L1h3QmRrQWdNNXRNejVpdFVUN1RWRWtJWlh6VmIzaWtpQjIrL056WVJtM2Q0T1NZRHpNTjRwY3lXZ1VwVwpjcnU1WXBNME9qVVhDNVNqMWN3N2t3N2tEWjJ2czNKZVlwRVZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUraTZzVHl2cEhoY2VFSWJpZVF5OXQ4U2FpTmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQzl1akN3OFZmYzZIcHlvbXRkaEpMZGFtL25VMHF5VDUvRm5sZlJmenFVbDNPaHE0MTFyZnhBCjN5Qi9xb0kweVkvMkRLdUdPMlpsVngreFdPTW5BeTFDOTJKZURFMzNDK1VkSHNSUHprWjNJS1FNcWpqS0lhQVAKd1BlNzd2cktibXhvajl2b3dVbjR6Q2J6SEFDc0VhZSt2MXVlSnJpQVY0ZFRqYnFrVFJJanNlbUFRSlByZlFRawpueHh2VnRsbitKVklSN29ZdkxaZnI5QTBNN2x0Qkx6Q1FuOHExdXF6SEFrOFp3clhTZkppa3BtMCtKQXdadkFxCmcyd3ZwdzBIbk1LWGxDSmhlTkhHQnhRNVEwZ2h2aFRyY1YvaFZvM0wxYjlwc0NkbFhhQkRmWUhMWVpzbGpkNGUKY1RQZXJOYVU5YitqR1ZKWi9lTTVQVTRaMSswS01YST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjBVYzAzL0Z0WXZEcnRpVU9ObjlqRGhsTktydXpINEZzZWlxQ1oyR0JNWXRnd2NrCk5CUlF4eUkzVFRLMGZSSndFckJuVXV1Rkpxd2NGQzFSL2NHTVNEYVFJRno2eFAzVXZRMGdhVDlzN2xyV2lleHoKL0N4VldBemdtK0FnSTdyMVRTM0NCOHZieG5DeTlhdUFkam1SamRSTjI2aXp3TkduSGZGbVFndmJ3Z0ZRQXlySwp2M0FaeHcyZ0Q2ZDJoczFjbTZndWZuU3JBNHNobGFQTGQ3RmJiTEpINHFaYjc5ZXYzcm5rdXRPOW9lTmk4WnhoCkVMYTd2MThBWFpBSURPYlRNK1lyVkUrMDFSSkNHVjgxVzk0cElnZHZ2emMyRVp0M2VEa21BOHpEZUtYTWxvRksKVm5LN3VXS1RORG8xRnd1VW85WE1PNU1PNUEyZHI3TnlYbUtSRlFJREFRQUJBb0lCQVFDTTZVUFZaVHFwQnpEQQo3WG8xY0JQbGE5N1RzR0tCY1E2TkJWWFFBNmNxZVQ0cVcrYUdIN2xyRzRBV2RaYVcxakNPOURzSzBjeWtzd04wCnNmYkh0Z0c5YWNWQXNuOWxCWVBuUzNablUzelRGVVVkRTRCWGRlbmlGb3FiQzhGaDBXaksxVDB2TlRiU3VWQisKd1R6QTNLU3BFcEhSbERYcGhndFNlZmZXREpwNEQrdHdPNzBoc1F6Sk1OSXJScUROOEhQRnJQMFNwSDlESjFySwpvL21TbmlBQ2RmMlRQTkg0QjNMVDVuMncyZnhiMi9ja0IzYlEySnFlUFE5bEJ5cmlHQ28weDh5c0FmSFE0TDRHClVydjZ0U1RJbWwvL1V4dmkzOE1DZFFLR2o5RVprWENwY25GSy9nM3VjZmpMVUh3NVZ0TXN1d3dTMS84U05ucE8KOFVoZWEwSEJBb0dCQVBjek41REFlU2M0TnNYdFVYcW8vOGNhM0VtKzY4c2cxOUZjNy8rU0Nmd0Vsa20yWDhqTApYZXkrbm1sS0M1NTZ3SFZQa1ZEZk5wMjQzeENWUWVvMDluOXpUSHZiTVRUSEJuNjFRem5JclNjSExQZHR0S0hNCjF1ZUtTTkVNME1jQUkwYXpOR1QzYitjZEFwVG9VMjN3dmhUQ2JWYXFia1NDWUcwY28yd3haUG5KQW9HQkFNWVUKTVkxQS9JaVE2TUZ5VjNKamJzQXNwWk4xQW13YjR2TE93cm51SGlDdHdrSXV6dHNPaWMxVWpLK2JYdDN2MVR4QQo5N2RtdjRDZXpTWWoxQlQrSnI5R2pmM2lBTytwVlZUZ2x3WUlxU0JuSlVxTk1qazFnbyt2TkFrYWVhNTZtSmJuCk45ZW03dTZMNVhRTkdIdW9kenhQMUlOeTIzWTVaSmJvNEJNb05jTHRBb0dBUTBEVjd6WE9RRk5VNDRoclVIbkcKREw5TUMydzc3bW1qRGJ6Qk5zRGVvb2dFODAwQXhqbzk5WGp1MUNwbSt0amVuNHZrTnlKalU0bkdkbGFGTmxqdQpiMEpKSHJGRnM5d3A4ak1TZFJnWnM3S0tFMDd2ZzgyYzhpVjNKaGpjZkNlWGNWYXovSHd0SDYyTzFFQlk0bUpLCjlJN28vRmtsNHRHdHRrSENYRjhiMzdFQ2dZRUFucGFXWWNpeEo4b1ZnS1JDWFVRODdNSVNRekJBb3p2a2haQ0QKR1lnTE9SREZZbVhGbWw5V2R6NEZjYWZNMlpabXZGb3J1dndad1NuamlIRFJJWW1tamlnNEVSZjh0ZVYyZTRGaAppU1F2L05CNGErc0dWZ1dBcGZlWml0eFdwaHBqeHhZU2dLZVh6d2ZVeXdpZEhJeHlBcWpMdGY2a3RWQVlPRGIxCkNJRitJYlVDZ1lBWDJHNWNRYk5XK1lVU1lJY05Ldjl2TTk0ODVvY0JnN3NnbFo2dlVVeERJeDFFNzlzd2xFbGIKTmlVUi8xU21HeEtjUlpudWt4WGZhOE14NWZBZDFsZXdRNTRTOURmVjlFTEFpSU1YdHAzbE9DT0JudjFYd21wQwpkSElseEVMU3FCMjVOR1l6eHg4dkVqYSt2NVdpMFMzU0pVd01YUnpTaGtEdjhoTy81aEpqN2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZHovTVV6MTZIcFkwSXpDTmMxZkhaekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9SUnpUZjhXMWk4T3UySlE0MmYyTU9HVTBxdTdNZmdXeDZLb0puWVlFeGkyREJ5UTAKRkZESElqZE5NclI5RW5BU3NHZFM2NFVtckJ3VUxWSDl3WXhJTnBBZ1hQckUvZFM5RFNCcFAyenVXdGFKN0hQOApMRlZZRE9DYjRDQWp1dlZOTGNJSHk5dkdjTEwxcTRCMk9aR04xRTNicUxQQTBhY2Q4V1pDQzl2Q0FWQURLc3EvCmNCbkhEYUFQcDNhR3pWeWJxQzUrZEtzRGl5R1ZvOHQzc1Z0c3NrZmlwbHZ2MTYvZXVlUzYwNzJoNDJMeG5HRVEKdHJ1L1h3QmRrQWdNNXRNejVpdFVUN1RWRWtJWlh6VmIzaWtpQjIrL056WVJtM2Q0T1NZRHpNTjRwY3lXZ1VwVwpjcnU1WXBNME9qVVhDNVNqMWN3N2t3N2tEWjJ2czNKZVlwRVZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUraTZzVHl2cEhoY2VFSWJpZVF5OXQ4U2FpTmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQzl1akN3OFZmYzZIcHlvbXRkaEpMZGFtL25VMHF5VDUvRm5sZlJmenFVbDNPaHE0MTFyZnhBCjN5Qi9xb0kweVkvMkRLdUdPMlpsVngreFdPTW5BeTFDOTJKZURFMzNDK1VkSHNSUHprWjNJS1FNcWpqS0lhQVAKd1BlNzd2cktibXhvajl2b3dVbjR6Q2J6SEFDc0VhZSt2MXVlSnJpQVY0ZFRqYnFrVFJJanNlbUFRSlByZlFRawpueHh2VnRsbitKVklSN29ZdkxaZnI5QTBNN2x0Qkx6Q1FuOHExdXF6SEFrOFp3clhTZkppa3BtMCtKQXdadkFxCmcyd3ZwdzBIbk1LWGxDSmhlTkhHQnhRNVEwZ2h2aFRyY1YvaFZvM0wxYjlwc0NkbFhhQkRmWUhMWVpzbGpkNGUKY1RQZXJOYVU5YitqR1ZKWi9lTTVQVTRaMSswS01YST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjBVYzAzL0Z0WXZEcnRpVU9ObjlqRGhsTktydXpINEZzZWlxQ1oyR0JNWXRnd2NrCk5CUlF4eUkzVFRLMGZSSndFckJuVXV1Rkpxd2NGQzFSL2NHTVNEYVFJRno2eFAzVXZRMGdhVDlzN2xyV2lleHoKL0N4VldBemdtK0FnSTdyMVRTM0NCOHZieG5DeTlhdUFkam1SamRSTjI2aXp3TkduSGZGbVFndmJ3Z0ZRQXlySwp2M0FaeHcyZ0Q2ZDJoczFjbTZndWZuU3JBNHNobGFQTGQ3RmJiTEpINHFaYjc5ZXYzcm5rdXRPOW9lTmk4WnhoCkVMYTd2MThBWFpBSURPYlRNK1lyVkUrMDFSSkNHVjgxVzk0cElnZHZ2emMyRVp0M2VEa21BOHpEZUtYTWxvRksKVm5LN3VXS1RORG8xRnd1VW85WE1PNU1PNUEyZHI3TnlYbUtSRlFJREFRQUJBb0lCQVFDTTZVUFZaVHFwQnpEQQo3WG8xY0JQbGE5N1RzR0tCY1E2TkJWWFFBNmNxZVQ0cVcrYUdIN2xyRzRBV2RaYVcxakNPOURzSzBjeWtzd04wCnNmYkh0Z0c5YWNWQXNuOWxCWVBuUzNablUzelRGVVVkRTRCWGRlbmlGb3FiQzhGaDBXaksxVDB2TlRiU3VWQisKd1R6QTNLU3BFcEhSbERYcGhndFNlZmZXREpwNEQrdHdPNzBoc1F6Sk1OSXJScUROOEhQRnJQMFNwSDlESjFySwpvL21TbmlBQ2RmMlRQTkg0QjNMVDVuMncyZnhiMi9ja0IzYlEySnFlUFE5bEJ5cmlHQ28weDh5c0FmSFE0TDRHClVydjZ0U1RJbWwvL1V4dmkzOE1DZFFLR2o5RVprWENwY25GSy9nM3VjZmpMVUh3NVZ0TXN1d3dTMS84U05ucE8KOFVoZWEwSEJBb0dCQVBjek41REFlU2M0TnNYdFVYcW8vOGNhM0VtKzY4c2cxOUZjNy8rU0Nmd0Vsa20yWDhqTApYZXkrbm1sS0M1NTZ3SFZQa1ZEZk5wMjQzeENWUWVvMDluOXpUSHZiTVRUSEJuNjFRem5JclNjSExQZHR0S0hNCjF1ZUtTTkVNME1jQUkwYXpOR1QzYitjZEFwVG9VMjN3dmhUQ2JWYXFia1NDWUcwY28yd3haUG5KQW9HQkFNWVUKTVkxQS9JaVE2TUZ5VjNKamJzQXNwWk4xQW13YjR2TE93cm51SGlDdHdrSXV6dHNPaWMxVWpLK2JYdDN2MVR4QQo5N2RtdjRDZXpTWWoxQlQrSnI5R2pmM2lBTytwVlZUZ2x3WUlxU0JuSlVxTk1qazFnbyt2TkFrYWVhNTZtSmJuCk45ZW03dTZMNVhRTkdIdW9kenhQMUlOeTIzWTVaSmJvNEJNb05jTHRBb0dBUTBEVjd6WE9RRk5VNDRoclVIbkcKREw5TUMydzc3bW1qRGJ6Qk5zRGVvb2dFODAwQXhqbzk5WGp1MUNwbSt0amVuNHZrTnlKalU0bkdkbGFGTmxqdQpiMEpKSHJGRnM5d3A4ak1TZFJnWnM3S0tFMDd2ZzgyYzhpVjNKaGpjZkNlWGNWYXovSHd0SDYyTzFFQlk0bUpLCjlJN28vRmtsNHRHdHRrSENYRjhiMzdFQ2dZRUFucGFXWWNpeEo4b1ZnS1JDWFVRODdNSVNRekJBb3p2a2haQ0QKR1lnTE9SREZZbVhGbWw5V2R6NEZjYWZNMlpabXZGb3J1dndad1NuamlIRFJJWW1tamlnNEVSZjh0ZVYyZTRGaAppU1F2L05CNGErc0dWZ1dBcGZlWml0eFdwaHBqeHhZU2dLZVh6d2ZVeXdpZEhJeHlBcWpMdGY2a3RWQVlPRGIxCkNJRitJYlVDZ1lBWDJHNWNRYk5XK1lVU1lJY05Ldjl2TTk0ODVvY0JnN3NnbFo2dlVVeERJeDFFNzlzd2xFbGIKTmlVUi8xU21HeEtjUlpudWt4WGZhOE14NWZBZDFsZXdRNTRTOURmVjlFTEFpSU1YdHAzbE9DT0JudjFYd21wQwpkSElseEVMU3FCMjVOR1l6eHg4dkVqYSt2NVdpMFMzU0pVd01YUnpTaGtEdjhoTy81aEpqN2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZHovTVV6MTZIcFkwSXpDTmMxZkhaekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9SUnpUZjhXMWk4T3UySlE0MmYyTU9HVTBxdTdNZmdXeDZLb0puWVlFeGkyREJ5UTAKRkZESElqZE5NclI5RW5BU3NHZFM2NFVtckJ3VUxWSDl3WXhJTnBBZ1hQckUvZFM5RFNCcFAyenVXdGFKN0hQOApMRlZZRE9DYjRDQWp1dlZOTGNJSHk5dkdjTEwxcTRCMk9aR04xRTNicUxQQTBhY2Q4V1pDQzl2Q0FWQURLc3EvCmNCbkhEYUFQcDNhR3pWeWJxQzUrZEtzRGl5R1ZvOHQzc1Z0c3NrZmlwbHZ2MTYvZXVlUzYwNzJoNDJMeG5HRVEKdHJ1L1h3QmRrQWdNNXRNejVpdFVUN1RWRWtJWlh6VmIzaWtpQjIrL056WVJtM2Q0T1NZRHpNTjRwY3lXZ1VwVwpjcnU1WXBNME9qVVhDNVNqMWN3N2t3N2tEWjJ2czNKZVlwRVZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUraTZzVHl2cEhoY2VFSWJpZVF5OXQ4U2FpTmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQzl1akN3OFZmYzZIcHlvbXRkaEpMZGFtL25VMHF5VDUvRm5sZlJmenFVbDNPaHE0MTFyZnhBCjN5Qi9xb0kweVkvMkRLdUdPMlpsVngreFdPTW5BeTFDOTJKZURFMzNDK1VkSHNSUHprWjNJS1FNcWpqS0lhQVAKd1BlNzd2cktibXhvajl2b3dVbjR6Q2J6SEFDc0VhZSt2MXVlSnJpQVY0ZFRqYnFrVFJJanNlbUFRSlByZlFRawpueHh2VnRsbitKVklSN29ZdkxaZnI5QTBNN2x0Qkx6Q1FuOHExdXF6SEFrOFp3clhTZkppa3BtMCtKQXdadkFxCmcyd3ZwdzBIbk1LWGxDSmhlTkhHQnhRNVEwZ2h2aFRyY1YvaFZvM0wxYjlwc0NkbFhhQkRmWUhMWVpzbGpkNGUKY1RQZXJOYVU5YitqR1ZKWi9lTTVQVTRaMSswS01YST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVEc5NDJUb3lKVzhNdFIrWVBUOE9RakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQktRaTNkd2tGdHhFM1VsUDJhRWdBeWJOYklJOE8KclpQdWxOaDVxT0JTeWFQU1VmQmhHOVEwanpEWU14dXZSbUN3WU9INGNFT08zVCs5NVcrK0ZNNEJ0am45bEJqbgpXVEl5MU9QN1FXSFVhRW5yNHhFQldxTmdwVHBVZGxUNVZQNGZhUFVoMjMyU3oxczQ0ZTNKSE81RXJvRDc0cHZwCnZjR3ZvbUUxS3M1Y1VwM0xnWGNGT0RkQ2dVQy90VTZuSnFLK0Z2Y2g2d0Z3d3VRWVRDMlhSZFIxVXZSQzJUWWMKQmpmbEI3QUdWdGUvK0hxNGFYL2IwcldmalpraGYvMkRZWHNKNTdVNmtuWmNabzM1OXpJZmtBL1NkbTNYN2NuWQpkVmpRYmxIRTA1TmNvaU1pZ09VU3NRdzM0TnhIbmh1dDBrWEhaMS96VEJ1RmJxVHQxUlhNZG51ZkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQb3VyRThyNlI0WEhoQ0c0bmtNdmJmRQptb2pZTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFOL1ByMm02SGNDWkU5Y2FDNWZZdFUxeDhjeFVWN0dkRXZqQWFSeVdpK20zY1hhd2QKK2lZZ3RMT0pmcXg1QlE1RExZZ3hNV1dtNDdxckhnWnlmZjNKZXFjRTEyTGRURmFTK1FJNTFFUm5uL20zdzd4RQp3ZTFLRkhwbE5Na3kwQkZxVmNyK3I1VWtTSVN5cFJFT2x6ajN3NzZWYlNWOTdpUUxYa3QyeGw4SnU3T3BKd1YvCkVjSmN2Z09teFB1ZC9wbUZVMFFaYnpsYUJLSWJPYitmaU9ralljUDREL2d4OTFBWUx1S0RmZFcxT1BURHVUT1YKUk1jL0pBcmYxVWtYa3RjZWNYUDZuazdOVDd2cFczMU4ySTR3WVVkbm9MWG1KTE1EdXFuNEd1dlpDcFNSNVl1agpFaTJTeVlzVEgxeXlmV25UMkEzd1lrTXpZN3o4SXYyb2RoTGk2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1NrSXQzY0pCYmNSTjFKVDltaElBTW16V3lDUERxMlQ3cFRZZWFqZ1VzbWowbEh3CllSdlVOSTh3MkRNYnIwWmdzR0RoK0hCRGp0MC92ZVZ2dmhUT0FiWTUvWlFZNTFreU10VGorMEZoMUdoSjYrTVIKQVZxallLVTZWSFpVK1ZUK0gyajFJZHQ5a3M5Yk9PSHR5Unp1Uks2QSsrS2I2YjNCcjZKaE5Tck9YRktkeTRGMwpCVGczUW9GQXY3Vk9weWFpdmhiM0llc0JjTUxrR0V3dGwwWFVkVkwwUXRrMkhBWTM1UWV3QmxiWHYvaDZ1R2wvCjI5SzFuNDJaSVgvOWcyRjdDZWUxT3BKMlhHYU4rZmN5SDVBUDBuWnQxKzNKMkhWWTBHNVJ4Tk9UWEtJaklvRGwKRXJFTU4rRGNSNTRicmRKRngyZGY4MHdiaFc2azdkVVZ6SFo3bndJREFRQUJBb0lCQUhGWEdaVkZsSmEwNTdZMQphYTBCWFphUXc5d3B5NmVLTkc1ZkNuTEFvL2dQOXo5Mjh2eVlMcmswZUMyME4zOXVaVmU1VVg3TXFPZVFiVkdJCjZqdDN5N1YzYnFtYmw4MVFLa05uWmVyTlg1RWFMSjNzRzlOV2t0MG50b1ZPOWVkamRzV0plYVVIUExURFZUeVkKWFVXUDQwT0x2WVdQWDNzVTdDeVp0RDVWUXNjcWIrQUxadU5FcHh3UHg5NXFTSkNOakZvaXJyMUUxZk0zVjY5Ngo0OTRWUEZwN3phL0MxNEJPN1lIL3pYN3lBQ0MxdEIrUXFUaEZBUHljenFkQlpRaFJVQkl5QlFibDJIOUgyUTFBCm5uVnRraVJaTlJSSXZHU2RYMUlpcmZMT0dGeWV2cGxTbmw5cTFtOWVMNHVwUWxKQ252Q1FqQVlVTlNRRW1kQUEKWk54d2h4RUNnWUVBdzB5MUZoK21QcmxXRG5TUEZNRlZWVHZyWFNxbng3RjBHVVR1YXNzL1M2NStiL2JPVmFEYwphcVkzcDkxZzdrNUI1QVVZdDFTVjlHZGg0WUhzdDVZOGt3MGplYmJKSWNaVzdPQTNtK2pFSE1sVk1BVDJzc2RsCjVIQm1Ec3N2RW5pTi94UGdPWld1RlJlcENsNFZoT1BEYnV1WTd2dDRGWFNqTG54MGdVOEh3a2NDZ1lFQS9USWIKT2R5Tmh5eGxTekNlb0k3MkU5QXZYUkVXcEN5dEJKcWt4dUozVFozYXZYVkVQdzBqVlEwa1JrcnR1dE9EcC9RMQo4WFR2ZFFTTmdJcTBjWmVtcHE4bWdwN0RFZkRYa1QvUTZSb0g4SXZqRERmeEdkQk8yZE9SR1RFWW9SNjRlK2Q1CnYyWktGWjdzL3BBSlQ3cEVnN0NaTDkwalkzaG14SjBTeEFlWGora0NnWUVBaHpGM2Zid2xBZkNjWU45UkdNWUkKd3pyNllBRWlLZnR1YWZ1c3EyTE5DeC9jeUxicCtKNmxWbkovdm9WaUR6VS9LWkJabnJkQUl2TFo4QmhYZkhMVQp0ZHIzZnM4SWhvZmRMcGE4Q0FKbWw2TExoTFU2N1dGWTZIemlPVVZ2N1hKa29YbnAweE1KY2ZKeUF3cEVEVHo1CjBiUG5weStPM2hOaXp0QTZlalR5SXdzQ2dZQVM1bGFaN3hpeGFtTDFSZC9SWkZxQ0NCeEErakdTZDdOQ2tMaVUKRC91UDA2U3NWOENNWkZLcTJweEdrdmxENU40Qy8zdTNWbDg1Z09sL0d0dDFUemlsWUpXalVtNkZQRkViQ29SeApvZnZOdk9OcDJoTXBOaDlzcXhvOW95aVBmbGVQQ0N4U1dUUldnTkozL2hCejN4ZVdMT3lDWWlOdUhXS3VjbnNnCkh1RDFZUUtCZ0ZBem1yYmQwbVc1bjRseURUbllQR0wwYUF6VDMvTDUwdE9wSElBM2pYMktGdFRjcEEwUDVacHMKeHdKVm5lN1JXckovdElDb0k2WnJZcXppRmxwdDRXclU2cm94RGM1RTcwZVl0Rm5iZjlIYkNzSHk1bGJ3MVNiRApyU0lOdVhHU3RHQjcrMk9QZVVRRWtKVko3S2dUV3FXTFFGb0FYVXJKQ0tDcXAzQ0VUMS8rCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZHovTVV6MTZIcFkwSXpDTmMxZkhaekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9SUnpUZjhXMWk4T3UySlE0MmYyTU9HVTBxdTdNZmdXeDZLb0puWVlFeGkyREJ5UTAKRkZESElqZE5NclI5RW5BU3NHZFM2NFVtckJ3VUxWSDl3WXhJTnBBZ1hQckUvZFM5RFNCcFAyenVXdGFKN0hQOApMRlZZRE9DYjRDQWp1dlZOTGNJSHk5dkdjTEwxcTRCMk9aR04xRTNicUxQQTBhY2Q4V1pDQzl2Q0FWQURLc3EvCmNCbkhEYUFQcDNhR3pWeWJxQzUrZEtzRGl5R1ZvOHQzc1Z0c3NrZmlwbHZ2MTYvZXVlUzYwNzJoNDJMeG5HRVEKdHJ1L1h3QmRrQWdNNXRNejVpdFVUN1RWRWtJWlh6VmIzaWtpQjIrL056WVJtM2Q0T1NZRHpNTjRwY3lXZ1VwVwpjcnU1WXBNME9qVVhDNVNqMWN3N2t3N2tEWjJ2czNKZVlwRVZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUraTZzVHl2cEhoY2VFSWJpZVF5OXQ4U2FpTmd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQzl1akN3OFZmYzZIcHlvbXRkaEpMZGFtL25VMHF5VDUvRm5sZlJmenFVbDNPaHE0MTFyZnhBCjN5Qi9xb0kweVkvMkRLdUdPMlpsVngreFdPTW5BeTFDOTJKZURFMzNDK1VkSHNSUHprWjNJS1FNcWpqS0lhQVAKd1BlNzd2cktibXhvajl2b3dVbjR6Q2J6SEFDc0VhZSt2MXVlSnJpQVY0ZFRqYnFrVFJJanNlbUFRSlByZlFRawpueHh2VnRsbitKVklSN29ZdkxaZnI5QTBNN2x0Qkx6Q1FuOHExdXF6SEFrOFp3clhTZkppa3BtMCtKQXdadkFxCmcyd3ZwdzBIbk1LWGxDSmhlTkhHQnhRNVEwZ2h2aFRyY1YvaFZvM0wxYjlwc0NkbFhhQkRmWUhMWVpzbGpkNGUKY1RQZXJOYVU5YitqR1ZKWi9lTTVQVTRaMSswS01YST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRWWVaSkRyTGJqUUFUT3ZRc1JibjdzakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TWpBeU1qSXdNekU0V2hjTk1qWXdNakF4TWpJdwpNekU0V2pBd01TNHdMQVlEVlFRRERDVXFMblJoYkc5ekxXUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6Y29GcTJPZmZzWGsKVlhXNUM5SXRhT3BJenpEeUxDRVd4WjhFczBDTEc4d3VBSHNGQ2RZRGw5VWdHcnh3MmYrcFViUTdlMG1PMGhGSwpuVjdXYS9IUWVHdnZrZWd5dVdRSGxjdVpIVFRFN0d6M0hUblBFU2NyMDcyS0VrcUNmR0JTOEI3V1BzUEJGUis2CkUvVVplOG95eDhCVHhFcUZtNGZDYUVWRDZWaDRLNnI0Skl3djFGVXVRQnVRWnBSSkM5SVlPT3c5U3NZUnlLZzUKTlZkcnJZUGxwRFdDM1ZIczlaUGNiQ2RhZU1uYlRjS3RqMGZleXFaZEptN3lneTNtS3RRVyt2RmcxQzJKQXNBeAp5U3JQT0lKMDU0L0lkbnJyYitaTUxWeDJXN2JpL2hUQ1JmV28xbmc3YWJ2YkdKSkNiblc3UFZ6R1ZwVlVaUXlnCjcxNXBzQTYvcXdJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQ2THF4UApLK2tlRng0UWh1SjVETDIzeEpxSTJEQXdCZ05WSFJFRUtUQW5naVVxTG5SaGJHOXpMV1JsWm1GMWJIUXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjBwcEdWMlEzS3ZzYVAKN1lLWnowYU9lWTEvY2hTdGJHQnlCWlAvV2crREt5Vms1cVhPdzVSYWVTTlYrUGttQ3FBWmppZDdKUnpkYi9oWQpjTTM3TnZHQUptTjlXQWdKY0xvbDVneGR5OXJwQ2crRUNoYlR5aTdFN2ZqZkoxSFhkODN5TzMvVGNkT0NKQjBUCjFjZmtYd3lPYmlIMmNFVmRJdVpUMnBQTlJsUXY3WWZOZ25YcnprUVZyV0dyZjZNajRwQ1E4WWxQNW5VUXN3ZzEKdDNSR2VwUU5LRDZsUkdYcXFaQWV6QVY3NEtzVGJ5RmlNYVRUd0pFL24rOWRJZXR0RTZtWG50MWM1TzBiMm43OAoydFJBY3NjSXdIRFIrcmVmZEd6N3pSMlB3MTNKQ29GWGNocjVvcjRlbHpiSkR4WWFGNldNdU93aXBRbFBoc204CllhWXFMSzVrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBemNvRnEyT2Zmc1hrVlhXNUM5SXRhT3BJenpEeUxDRVd4WjhFczBDTEc4d3VBSHNGCkNkWURsOVVnR3J4dzJmK3BVYlE3ZTBtTzBoRktuVjdXYS9IUWVHdnZrZWd5dVdRSGxjdVpIVFRFN0d6M0hUblAKRVNjcjA3MktFa3FDZkdCUzhCN1dQc1BCRlIrNkUvVVplOG95eDhCVHhFcUZtNGZDYUVWRDZWaDRLNnI0Skl3dgoxRlV1UUJ1UVpwUkpDOUlZT093OVNzWVJ5S2c1TlZkcnJZUGxwRFdDM1ZIczlaUGNiQ2RhZU1uYlRjS3RqMGZlCnlxWmRKbTd5Z3kzbUt0UVcrdkZnMUMySkFzQXh5U3JQT0lKMDU0L0lkbnJyYitaTUxWeDJXN2JpL2hUQ1JmV28KMW5nN2FidmJHSkpDYm5XN1BWekdWcFZVWlF5ZzcxNXBzQTYvcXdJREFRQUJBb0lCQVFDdGhBa1J3VGRyc2pwYgo0SjQ5bkdOVGtqQUFHMW9tNFdPTkVBN3JnYUdKdDdpV0NTUnZiYmVyM3pWcHRiaEY1KzhCaUVHYks2T3o5b1orCmVNZTlUckNqeVFiQWRSUElBOUx0ZURWTFRnSTVBNHU5WmMvMXU1eVZ0YnhrdmRTV1FMWE41NEpvZTdBak9wUXcKWGJxMkNRQ1dNdEd1c2RORUY4MVJGQTQyQTdXWHd0YVpXMU8vWUNSbnFvdVN1S05nYTRPQVZ0ZlltSS9VOFhTdgoyOGxGRUw5T3A3Y0dSTUxtb3lJM0NBU1RhcWNnc1k5alVLb3VBRkdTY2Q0V0I5V081bFY3SG1zeUFlalpESTg2CmtUOTlHb0ZpTDJWbGppSUp3UXNRRFRnSGcrNWVkdlp5dmg4bndoZyszRGFOcHN3TVY1UlYyZFo1b3VWbHRLSkwKSWpUaTYzQzVBb0dCQU8yb0Rxc0xGNkU2ZU1RQVNrN3dtanozb1ExTzFjRnNFM05aZ2tkM0FzUVhVa3owdXNPUQphRjZhM3d3aEVQOXhHandYR1lNQ1RkbEN1eDlNanZOazhNY3VCaFFDM2JLUlJmUnp1ZGplUmFGdlZ2dDhKdjViCk8rV1VmY3Z2RUtHS3YvbmpWREJYcEtibkRDS3p4RGEvdjJ3cWkzcnlvRHFRVG9OU2pOcGhmM1pkQW9HQkFOMnMKU1ZsYkNzNFNNTnduZkprdUdnazBBV1JQREVuNjQ3S2hwZCtFL01iaG5yeFdKOUF4M0x4YW5TOGdGUHVYQS82dgpWVitDUk04OTdXMExLby9xbWxKQTgzRmxTMjYvdzV5SkozcEtmdUNUdVFndUFoT3d2eDFUVVR1VlBLbVM2NVFZCjFvWng4M0xhbXE1ZnNYN1orcHNub3VDdXZ4b0YxeFRhYUkzamdCMm5Bb0dCQUlxRVozZytFTm5DTU4xY3BmTDQKdlkxSGI3RkgvOEtxOFhOTCtta1k3cDNJVWduVW9uNlZ6cDlGZVRlaWxqdXNlblFIcXJEM1NOU1cxbVhadzRBTgpsMkVnYkI2QnhTSHRGbTd5ZktId2Uza3FZZkpXWEl2b05UTU1wMzJUcTRmY1RTU2k0VkVENUUzN1lORmhJYjRmCmFMenMxenNqNjB2M0RDdnlrM0k5WFlOcEFvR0JBTDU4dDRjMnFnRk5ObmxvNFRSTW5vajhESm9qSjM5SFBuV1oKWFEzSG5PUldxMjVTWnVJTWh3L0Fta1FOd0pvMk9uT1lQYmZXSE1VdUJTSG9MNG4rWXVCOStmU2V4QVNHZTFTLwpzNUh1QkR0K0ZjbkdwM2crTU96RlZRL3JmWGFHenpPemFGMmQvRUxkUVlESXNLRStOWkV3clZHQU9LM25DTjFkCmxlMGY2MDhQQW9HQUhmS3hURjdSSFIyZDMydUhyZHF3RHBqdThTVUd3NjRyVklzNHpETzRMb0o0ZWx5SUpsRlIKZVJjYldBMTlIU1puY0ZLbWM2NFJXeEx1aVQ2eWtSVWd4OFlQdzRyRnZIbWVIdTRKR3RPNmV4UUoyQnhRRkNVNAo3UHRwYkNQZGE5MTJmRXY5R0IwaTlJUlJNS25rYUlIekNPSkltMUliVXdnWVZVR0pIVmdycWxjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium-agent
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c281fa3075d86b905861397b6a92141d9817fa780cd26dde3bd0287c3e2bd76a
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27301b70a92d3247904e1723ebd50d3d674bd6de3c49138f56111eb8d0161208
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.12.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        - containerPort: 9966
          name: prometheus
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888
      labels:
        k8s-app: hubble-ui
    spec:
      containers:
      - image: quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /cni-install.sh
              - --enable-debug=false
              - --cni-exclusive=true
              - --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9962
          hostPort: 9962
          name: prometheus
          protocol: TCP
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.50.200
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.12.6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
