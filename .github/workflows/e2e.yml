name: e2e

on:
  workflow_dispatch:
  # TODO: Re-enable once fixed workflow
  # push:
  #   branches: [ '*' ]
  #   tags-ignore: [ '*' ]

jobs:
  kubernetes:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: Re-enable prod-a once it's rebuilt
          # - cluster-id: prod-a
          - cluster-id: prod-b
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup tools
        uses: ./.github/actions/tools

      - name: Setup Flux
        uses: fluxcd/flux2/action@main

      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"

      - name: Install Flux in Kubernetes Kind
        run: flux install

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # TODO: encrypt cluster-secrets.enc.yaml with fluxcd sops-gpg keys rather than GCP keys
      - name: Decrypt & Apply Cluster Configuration
        run: |
          sops --decrypt "k8s/clusters/${{ matrix.cluster-id }}/secrets/sops-gpg.enc.yml" | kubectl apply -f -
          sops --decrypt "k8s/clusters/${{ matrix.cluster-id }}/secrets/cluster-secrets.enc.yaml" | kubectl apply -f -
          kubectl apply -f "k8s/clusters/${{ matrix.cluster-id }}/secrets/cluster-config.yaml"

      - name: Setup cluster reconciliation
        run: |
          flux create source git flux-system \
          --url=${{ github.event.repository.html_url }} \
          --branch=${GITHUB_REF#refs/heads/}
          flux create kustomization flux-system \
          --source=flux-system \
          --path=./k8s/clusters/${{ matrix.cluster-id }}

      - name: Verify cluster reconciliation
        run: |
          kubectl -n flux-system wait kustomization/namespaces --for=condition=ready --timeout=5m

      - name: Debug failure
        if: failure()
        run: |
          kubectl get kustomization -A
          kubectl get pods -A
          kubectl get deployments -A
          kubectl -n flux-system get all
          kubectl -n flux-system logs deploy/source-controller
          kubectl -n flux-system logs deploy/kustomize-controller
          kubectl -n flux-system logs deploy/helm-controller
