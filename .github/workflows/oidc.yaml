# This GitHub Actions workflow demonstrates how to authenticate to Google Cloud using workload identity federation.
# The workflow is triggered manually using the workflow_dispatch event.
name: Workload identity Federation

on:
  workflow_dispatch: {} # Trigger the workflow manually

jobs:
  connect:
    runs-on: ubuntu-latest # Run the job on the latest version of Ubuntu
    permissions:
      id-token: 'write' # Required for requesting the JWT
      contents: 'read'  # Required for actions/checkout

    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab' # v3 # Checkout your repository

    # Authenticate to Google Cloud using the workload identity federation
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@e8df18b60c5dd38ba618c121b779307266153fbf' # v1
      with:
        create_credentials_file: 'true' # Create a credentials file
        # Set the workload identity provider and service account
        workload_identity_provider: 'projects/970557914270/locations/global/workloadIdentityPools/raspbernetes-oidc-pool/providers/github-provider'
        service_account: 'raspbernetes-oidc-sa@raspbernetes.iam.gserviceaccount.com'

    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@62d4898025f6041e16b1068643bfc5a696863587' # v1

    # Now you can run gcloud commands authenticated as the impersonated service account.
    - id: 'gcloud'
      name: 'gcloud'
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
        gcloud services list
